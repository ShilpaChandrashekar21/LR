<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="12">
  <HTTPTask id="13" hostname="assets.msn.com" path="/service/news/feed/pages/ntp?User=m-3FB288A77D7E6FC13A379A107C2C6E33&amp;activityId=03268357-B8FD-48AD-A89F-9D2048D6B1BB&amp;apikey=0QfOX3Vn51YCzitbLaRkTTBadtWpgTN8NZLW0C1SEM&amp;audienceMode=adult&amp;caller=bgtask&amp;cm=en-in&amp;column=c3&amp;contentType=article,video,slideshow,webcontent&amp;dhp=1&amp;duotone=true&amp;edgExpMask=131072&amp;infopaneCount=17&amp;it=app&amp;memory=8&amp;newsSkip=0&amp;newsTop=48&amp;ocid=anaheim-ntp-feeds&amp;overlay=0&amp;pgc=41&amp;prerender=1&amp;promotion=1697179646278_l_1_2&amp;scn=APP_ANON&amp;timeOut=2000&amp;vpSize=1232x572&amp;wposchema=byregion" url="https://assets.msn.com/service/news/feed/pages/ntp?User=m-3FB288A77D7E6FC13A379A107C2C6E33&amp;activityId=03268357-B8FD-48AD-A89F-9D2048D6B1BB&amp;apikey=0QfOX3Vn51YCzitbLaRkTTBadtWpgTN8NZLW0C1SEM&amp;audienceMode=adult&amp;caller=bgtask&amp;cm=en-in&amp;column=c3&amp;contentType=article,video,slideshow,webcontent&amp;dhp=1&amp;duotone=true&amp;edgExpMask=131072&amp;infopaneCount=17&amp;it=app&amp;memory=8&amp;newsSkip=0&amp;newsTop=48&amp;ocid=anaheim-ntp-feeds&amp;overlay=0&amp;pgc=41&amp;prerender=1&amp;promotion=1697179646278_l_1_2&amp;scn=APP_ANON&amp;timeOut=2000&amp;vpSize=1232x572&amp;wposchema=byregion" ip="23.41.186.121" port="443" client_ip="172.19.26.241" client_port="57426" connectionId="2196" origin="Primary" encodingType="ANSI" startDateTime="2024-02-24T12:11:52.380+05:30" startTime="3758" endTime="4449" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>VXNlcj1tLTNGQjI4OEE3N0Q3RTZGQzEzQTM3OUExMDdDMkM2RTMzJmFjdGl2aXR5SWQ9MDMyNjgzNTctQjhGRC00OEFELUE4OUYtOUQyMDQ4RDZCMUJCJmFwaWtleT0wUWZPWDNWbjUxWUN6aXRiTGFSa1RUQmFkdFdwZ1ROOE5aTFcwQzFTRU0mYXVkaWVuY2VNb2RlPWFkdWx0JmNhbGxlcj1iZ3Rhc2smY209ZW4taW4mY29sdW1uPWMzJmNvbnRlbnRUeXBlPWFydGljbGUsdmlkZW8sc2xpZGVzaG93LHdlYmNvbnRlbnQmZGhwPTEmZHVvdG9uZT10cnVlJmVkZ0V4cE1hc2s9MTMxMDcyJmluZm9wYW5lQ291bnQ9MTcmaXQ9YXBwJm1lbW9yeT04Jm5ld3NTa2lwPTAmbmV3c1RvcD00OCZvY2lkPWFuYWhlaW0tbnRwLWZlZWRzJm92ZXJsYXk9MCZwZ2M9NDEmcHJlcmVuZGVyPTEmcHJvbW90aW9uPTE2OTcxNzk2NDYyNzhfbF8xXzImc2NuPUFQUF9BTk9OJnRpbWVPdXQ9MjAwMCZ2cFNpemU9MTIzMng1NzImd3Bvc2NoZW1hPWJ5cmVnaW9u</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="User" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>bS0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="activityId" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MDMyNjgzNTctQjhGRC00OEFELUE4OUYtOUQyMDQ4RDZCMUJC</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="apikey" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MFFmT1gzVm41MVlDeml0YkxhUmtUVEJhZHRXcGdUTjhOWkxXMEMxU0VN</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="audienceMode" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWR1bHQ=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="caller" index="4">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Ymd0YXNr</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="cm" index="5">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZW4taW4=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="column" index="6">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YzM=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="contentType" index="7">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YXJ0aWNsZSx2aWRlbyxzbGlkZXNob3csd2ViY29udGVudA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="dhp" index="8">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="duotone" index="9">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="edgExpMask" index="10">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTMxMDcy</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="infopaneCount" index="11">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTc=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="it" index="12">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YXBw</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="memory" index="13">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>OA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="newsSkip" index="14">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="newsTop" index="15">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NDg=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="ocid" index="16">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YW5haGVpbS1udHAtZmVlZHM=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="overlay" index="17">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="pgc" index="18">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NDE=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="prerender" index="19">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="promotion" index="20">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTY5NzE3OTY0NjI3OF9sXzFfMg==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="scn" index="21">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>QVBQX0FOT04=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="timeOut" index="22">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MjAwMA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="vpSize" index="23">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTIzMng1NzI=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="wposchema" index="24">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YnlyZWdpb24=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name=":method" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VU</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":scheme" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":path" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>L3NlcnZpY2UvbmV3cy9mZWVkL3BhZ2VzL250cD9Vc2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmYWN0aXZpdHlJZD0wMzI2ODM1Ny1COEZELTQ4QUQtQTg5Ri05RDIwNDhENkIxQkImYXBpa2V5PTBRZk9YM1ZuNTFZQ3ppdGJMYVJrVFRCYWR0V3BnVE44TlpMVzBDMVNFTSZhdWRpZW5jZU1vZGU9YWR1bHQmY2FsbGVyPWJndGFzayZjbT1lbi1pbiZjb2x1bW49YzMmY29udGVudFR5cGU9YXJ0aWNsZSx2aWRlbyxzbGlkZXNob3csd2ViY29udGVudCZkaHA9MSZkdW90b25lPXRydWUmZWRnRXhwTWFzaz0xMzEwNzImaW5mb3BhbmVDb3VudD0xNyZpdD1hcHAmbWVtb3J5PTgmbmV3c1NraXA9MCZuZXdzVG9wPTQ4Jm9jaWQ9YW5haGVpbS1udHAtZmVlZHMmb3ZlcmxheT0wJnBnYz00MSZwcmVyZW5kZXI9MSZwcm9tb3Rpb249MTY5NzE3OTY0NjI3OF9sXzFfMiZzY249QVBQX0FOT04mdGltZU91dD0yMDAwJnZwU2l6ZT0xMjMyeDU3MiZ3cG9zY2hlbWE9YnlyZWdpb24=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":authority" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXNzZXRzLm1zbi5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9udHAubXNuLmNvbS8=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMS4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjEuMC4wLjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cookie" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>X0NfRVRIPTE7IF9FREdFX1M9U0lEPTFCOUVFRDJFMjBBMjZCQ0UwNENBRjkwMTIxNzQ2QTkzJm1rdD1lbi1pbiZ1aT1lbi11czsgVVNSTE9DPUNMT0M9TEFUPTEyLjkzNzh8TE9OPTc3LjU0N3xBPTEwNDc2fFRTPTI0MDIyNDA0MjQ1NXxTUkM9SSZCSUQ9TWpRd01qSTBNRGsxTkRVMVh6UTJZekpqTkdGa01HTXlZVGxsWVdGa1ltRTFPVE5qWmpSaE5qSTFOR0kyTVRZeU5EWXhaV1psTVRjeFptSmlOMlJrTWpBd1pHUTBNbVJoTkRabU9URT07IF9FREdFX1Y9MTsgTVVJRD0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMzsgTVVJREI9M0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzM7IF9TUz1TSUQ9MDA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9zZXJ2aWNlL25ld3MvZmVlZC9wYWdlcy9udHA/VXNlcj1tLTNGQjI4OEE3N0Q3RTZGQzEzQTM3OUExMDdDMkM2RTMzJmFjdGl2aXR5SWQ9MDMyNjgzNTctQjhGRC00OEFELUE4OUYtOUQyMDQ4RDZCMUJCJmFwaWtleT0wUWZPWDNWbjUxWUN6aXRiTGFSa1RUQmFkdFdwZ1ROOE5aTFcwQzFTRU0mYXVkaWVuY2VNb2RlPWFkdWx0JmNhbGxlcj1iZ3Rhc2smY209ZW4taW4mY29sdW1uPWMzJmNvbnRlbnRUeXBlPWFydGljbGUsdmlkZW8sc2xpZGVzaG93LHdlYmNvbnRlbnQmZGhwPTEmZHVvdG9uZT10cnVlJmVkZ0V4cE1hc2s9MTMxMDcyJmluZm9wYW5lQ291bnQ9MTcmaXQ9YXBwJm1lbW9yeT04Jm5ld3NTa2lwPTAmbmV3c1RvcD00OCZvY2lkPWFuYWhlaW0tbnRwLWZlZWRzJm92ZXJsYXk9MCZwZ2M9NDEmcHJlcmVuZGVyPTEmcHJvbW90aW9uPTE2OTcxNzk2NDYyNzhfbF8xXzImc2NuPUFQUF9BTk9OJnRpbWVPdXQ9MjAwMCZ2cFNpemU9MTIzMng1NzImd3Bvc2NoZW1hPWJ5cmVnaW9uDQo6YXV0aG9yaXR5OiBhc3NldHMubXNuLmNvbQ0KUmVmZXJlcjogaHR0cHM6Ly9udHAubXNuLmNvbS8NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjEuMC4wLjAgU2FmYXJpLzUzNy4zNiBFZGcvMTIxLjAuMC4wDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpBY2NlcHQ6ICovKg0KY29va2llOiBfQ19FVEg9MTsgX0VER0VfUz1TSUQ9MUI5RUVEMkUyMEEyNkJDRTA0Q0FGOTAxMjE3NDZBOTMmbWt0PWVuLWluJnVpPWVuLXVzOyBVU1JMT0M9Q0xPQz1MQVQ9MTIuOTM3OHxMT049NzcuNTQ3fEE9MTA0NzZ8VFM9MjQwMjI0MDQyNDU1fFNSQz1JJkJJRD1NalF3TWpJME1EazFORFUxWHpRMll6SmpOR0ZrTUdNeVlUbGxZV0ZrWW1FMU9UTmpaalJoTmpJMU5HSTJNVFl5TkRZeFpXWmxNVGN4Wm1KaU4yUmtNakF3WkdRME1tUmhORFptT1RFPTsgX0VER0VfVj0xOyBNVUlEPTNGQjI4OEE3N0Q3RTZGQzEzQTM3OUExMDdDMkM2RTMzOyBNVUlEQj0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMzsgX1NTPVNJRD0wMA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="_C_ETH" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_EDGE_S" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0lEPTFCOUVFRDJFMjBBMjZCQ0UwNENBRjkwMTIxNzQ2QTkzJm1rdD1lbi1pbiZ1aT1lbi11cw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="USRLOC" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Q0xPQz1MQVQ9MTIuOTM3OHxMT049NzcuNTQ3fEE9MTA0NzZ8VFM9MjQwMjI0MDQyNDU1fFNSQz1JJkJJRD1NalF3TWpJME1EazFORFUxWHpRMll6SmpOR0ZrTUdNeVlUbGxZV0ZrWW1FMU9UTmpaalJoTmpJMU5HSTJNVFl5TkRZeFpXWmxNVGN4Wm1KaU4yUmtNakF3WkdRME1tUmhORFptT1RFPQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_EDGE_V" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="MUID" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>M0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="MUIDB" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>M0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_SS" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0lEPTAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">9</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">675</HTTPProperty>
      </HTTPPropertySet>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Status" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-authenticatedwithjwtflow" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RmFsc2U=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-usertype" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QW5vbnltb3VzTXVpZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-tmpl" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SXNJTUZvbGxvd1VzZXI6MTtETk5fQXV0b0RldGVjdGVkY291bnRyeTpJbmRpYTtDbGlja0NvaG9ydDoyO0ZpeElkc0wyOjA7RE5OX2NvdW50cnk6O1VzZXJIYXNBZ2U7VXNlckNvaG9ydEJ5RW5nYWdlbWVudDI4ZDoyO3RtcGwtZGNwLW5vcm1hbC0xOjE7Y2xpY2s5MGRfMzA7QUNUSU9OOkZvbGxvdzpJbnRlcmVzdDtETk5fY2l0eTo7R3JheUZhblNjb3JlOjAuMDEyMztNeUZlZWQ7TWFpbkZlZWRzQ29sZFVzZXI6ZmFsc2U7VGFnZ2luZ1VzZXJBY3Rpb25TaWduYWw7WEZlZWQ7UGFnZVZpZXdDb3VudEd0MTA7RE5OX0F1dG9EZXRlY3RlZHN0YXRlOkthcm5hdGFrYTtVVGN0cjt0cmlnZ2VyY2ZfMl9jcm9zc2RvbWFpbl9vZmZjYW52YXNfZ25uO3RyaWdnZXJjZl8zX2lwMmlfMzBkO3VzcV9ucnRfdjU6YTZlYzg4ZTctOWE4OC00Nzk5LTg5NTItMmRkMDA0ZTExNjY5I2VuLWluO1N0cm9uZ0RlbW90aW9uVjJUcmlnZ2VyOjA7Y29tX3RvcGljX2xpX3Y0OjE7RE5OdXNlckNvdW50cnk6aW5kaWE7cHJnLXNob3ctYmVsbGNtLTMwZDoxO0wyRUVEZW1vdGVSZWFzb246S2VlcEluQ29udHJvbEdyb3VwO0lNQXJ0aWNsZU5lZ1VzZXI6MDtDR1Nob3dUb3BzdG9yaWVzOjE7Y29tX3RvcGljX2xpX3YyOjE7dHJpZ2dlcmNmX2x0X2luYztVc2VyUHJvZmlsZUFjdGlvblNpZ25hbDoyO3RyaWdnZXJjZjt0bXBsLWVzcC1zaG9wcGluZzoxO0NHU2hvd05ld3MxOjE7R3JvdXBJZENTOjNfM180XzNfMl8yNTkyMjFfMjY5MjAzO0NHU2hvd05ld3MzOjE7dHJpZ2dlcmNmXzBfdTJpX2R3ZWxsXzE1O3dwby13YXJtdXNlcjoxO0lzSU1vclB1YkZvbGxvd1VzZXI6MTt0bXBsLVRyYXZlbERlc3RpbmF0aW9uQ2FyZDoxO3RyaWdnZXJjZl8yX2Nyb3NzZG9tYWluX29mZmNhbnZhc19nbm5fdjI7VXNlckhhc0FnZU9yR2VuZGVyXzBfMV8wXzM7dXNlcl9jbHVzdGVyX3Y0OjIwMjQtMDItMjMuNDAzMjEjZW4taW47Y2xpY2s4NGRfMjk7UmVjb1NvdXJjZTpTYWdlXztYQUk6MTAwXzA7cHJnLXdwby10c2NscGluZjoxO3RtcGwtYm9vc3QtMXM7dG1wbC1uZXd0ZWNoO0NsaWNrNGQ6MDtHcmF5VjZGYW5zU2NvcmVWMjowLjAwMDA7VGlsZUlEOnRkcjE7SGFzQ2xpZW50SXBVc2VyUHJvZmlsZToxO3ByZy13cG8tY210aWY6MTtlZVBvc0xpc3Q6MDt0bXBsLTFzYm9vc3RudHByaXZlcjtwcmctd3BvLWZvbGxvdzoxO3VzZXJfY2x1c3Rlcl92NjoyMDI0LTAyLTIyLjYyNTI0I2VuLWluO0lNRXhwbGljaXREaXNsaWtlVXNlcjoxO3RtcGwtdG1wbHRsYXlvdXQ7VXNlckdyb3VwSWQ6M18zXzZfNV8yXzI1OTIyMV8yMzQ2MTY7VVRuZWdJbXByO0ZpeElkczowO0dBLU1vbmV5OjE7SGFzUGVyc1JlY2FsbDtHcmF5Q2xpY2s0ZDowO0wyT25lU3ZjVW5pRmVhdFR1bjo7RE5OdXNlckNpdHk6YmVuZ2FsdXJ1O2NsaWNrXzYxO3RyaWdnZXJjZl8wXzFtaW5fbWhvdDtjbGljazU2ZF8yNDtETk5fQXV0b0RldGVjdGVkQ2l0eTpCZW5nYWx1cnUgTm9ydGg7SU1Cb29zdENvdW50OjJfMF8yO1VMYXRMb24xMi45NTo3Ny42MTtpZnAtNHM6MTtVc2VySGFzQWN0aW9uU2lnbmFsOjE7U2FnZVVzZXJTdGF0dXM6M18wXzBfNTtUUFVzZXI7Q0dTaG93TmV3czQ6MTtCaW5nUmVjb0NvZGU6U3VjY2VzcztFeHBsOjE7SXNSZWNvTmV3VXNlcjoxO3RyaWdnZXJjZl8xX2kyaV9taG90X3YxO3ByZy13cG8tYXV0bzI6MTtjbGljazI4ZF85O0NHU2hvd05ld3MyOjE7RE5OVGlsZUlkOnRkcjE7aW5kX3RvcGljX2xpX3Y0OjE7UlI6MDtFeHBsY2l0Rm9sbG93Q29ob3J0OjI7VXNlckhhc0dlbmRlcjtETk5fc3RhdGU6O0dyYXlWNkZhbnNTY29yZTowLjAwMDA7U3RhYmxlSWRDUzpDRjlBMTE1MUNCREJGMDFGODRCMDkyMzZGRkZGRkZGRjtETk51c2VyU3RhdGU6a2FybmF0YWthO0dBTmV3czE6MTt1c3FfdGV4dF92OTptdWx0Y2FudnFfYWEjZW4taW47bG9jYXRpb246RjcxNUQ3Mjg3NjcwMjM4QTgzNDQ4MDRFMEQ1QUVENDcjZW4taW47VFN2MzoxO3RtcGwtdG1wbHRsYXlvdXQ7dG1wbC1uZXd0ZWNoO2lmcC00czoxO3ByZy13cG8tY210aWY6MTtwcmctd3BvLXRzY2xwaW5mOjE7cHJnLXdwby1hdXRvMjoxO3ByZy13cG8tZm9sbG93OjE7d3BvLXdhcm11c2VyOjE7dG1wbC1lc3Atc2hvcHBpbmc6MTtDR1Nob3dOZXdzMToxO0NHU2hvd1RvcHN0b3JpZXM6MTtDR1Nob3dOZXdzMjoxO0NHU2hvd05ld3MzOjE7Q0dTaG93TmV3czQ6MTtHQS1Nb25leToxO3RtcGwtZGNwLW5vcm1hbC0xOjE7dG1wbC1UcmF2ZWxEZXN0aW5hdGlvbkNhcmQ6MTtHQU5ld3MxOjE7cHJnLXNob3ctYmVsbGNtLTMwZDoxOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-wpo-activityid" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjVEOTkyNDMtNzUxOC00NEMyLTk3QUEtQUUyNUQ2MzYzODg5fDIwMjQtMDItMjRUMDY6NTI6NTIuMzQ3Njk5M1p8ZmFicmljX3dwb3xLT0MyfFdQT18z</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-feednewsitemcount" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-featureset" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MCxNc24uT25lRGF0YVNlcnZpY2UuU2VhcmNoLkZlYXR1cmVUcmFja2VyLk1vZGVscy5OZXdzRmVlZEZlYXR1cmU6UXdBQTs=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-activityid" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjVkOTkyNDMtNzUxOC00NGMyLTk3YWEtYWUyNWQ2MzYzODg5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-strategyexecutionlatency" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MDA6MDA6MDAuNTMyMzYzMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-debugid" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjVkOTkyNDMtNzUxOC00NGMyLTk3YWEtYWUyNWQ2MzYzODg5fDIwMjQtMDItMjRUMDY6NTI6NTIuNDExMzg1NFp8ZmFicmljX250cGZlZWR8S09DMnxOdHBGZWVkXzU4NQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ddd-auth-features" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TXVpZFN0YXRlT3JpZ2luOk11aWRGcm9tQ29va2ll</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="onewebservicelatency" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTM1</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-msedge-responseinfo" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTM1</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-ceto-ref" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjVkOTkyNDNiYzMwNDYxYmE0ZWQ0NTgyNDhlMTA3ODJ8QUZEOjY1ZDk5MjQzYmMzMDQ2MWJhNGVkNDU4MjQ4ZTEwNzgyfDIwMjQtMDItMjRUMDY6NTI6NTEuODc4Wg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="accept-ch" index="16">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2VjLUNILVVBLUFyY2gsIFNlYy1DSC1VQS1CaXRuZXNzLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLCBTZWMtQ0gtVUEtRnVsbC1WZXJzaW9uLUxpc3QsIFNlYy1DSC1VQS1Nb2JpbGUsIFNlYy1DSC1VQS1Nb2RlbCwgU2VjLUNILVVBLVBsYXRmb3JtLCBTZWMtQ0gtVUEtUGxhdGZvcm0tVmVyc2lvbg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-msedge-ref" index="17">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UmVmIEE6IDE4QjRBRUUyRTkwMTQ3Rjc4RjZBNEQ5Mjc4QUE4OEI2IFJlZiBCOiBTSU4yMjEwODA3MTMwMjMgUmVmIEM6IDIwMjQtMDItMjRUMDY6NTI6NTFa</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="expires" index="18">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAyNCBGZWIgMjAyNCAwNjo1Mjo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="date" index="19">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAyNCBGZWIgMjAyNCAwNjo1Mjo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="20">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>X0NfRVRIPTE7IGV4cGlyZXM9RnJpLCAyMyBGZWIgMjAyNCAwNjo1Mjo1MSBHTVQ7IGRvbWFpbj0ubXNuLmNvbTsgcGF0aD0vOyBzZWN1cmU7IGh0dHBvbmx5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="21">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>X0NfQXV0aD0=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="set-cookie" index="22">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>X0VER0VfUz1TSUQ9MUI5RUVEMkUyMEEyNkJDRTA0Q0FGOTAxMjE3NDZBOTMmbWt0PWVuLWluJnVpPWVuLXVzOyBkb21haW49Lm1zbi5jb207IHBhdGg9LzsgaHR0cG9ubHk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="akamai-request-bc" index="23">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>W2E9MjMuNDEuMTg2LjExNyxiPTM2MjAyODU4MyxjPWcsbj1JTl9UTl9DSEVOTkFJLG89MjA5NDBdLFthPTEzMS4yNTMuMzMuMjAzLGM9b10=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="server-timing" index="24">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2xpZW50cnR0OyBkdXI9MTUsIGNsaWVudHR0OyBkdXI9NjQzLCBvcmlnaW47IGR1cj02NDEgLCBjZG50aW1lOyBkdXI9Mg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="akamai-cache-status" index="25">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Tm90Q2FjaGVhYmxlIGZyb20gY2hpbGQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="akamai-server-ip" index="26">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjMuNDEuMTg2LjExNw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="akamai-request-id" index="27">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTU5NDFlMjc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-as-suppresssetcookie" index="28">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cache-control" index="29">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHJpdmF0ZSwgbWF4LWFnZT0w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="report-to" index="30">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>eyJncm91cCI6Im5ldHdvcmstZXJyb3JzIiwibWF4X2FnZSI6NjA0ODAwLCJlbmRwb2ludHMiOlt7InVybCI6Imh0dHBzOi8vZGVmZi5uZWxyZXBvcnRzLm5ldC9hcGkvcmVwb3J0P2NhdD1tc24ifV19</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="nel" index="31">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>eyJyZXBvcnRfdG8iOiJuZXR3b3JrLWVycm9ycyIsIm1heF9hZ2UiOjYwNDgwMCwic3VjY2Vzc19mcmFjdGlvbiI6MC4wMDEsImZhaWx1cmVfZnJhY3Rpb24iOjAuMX0=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="timing-allow-origin" index="32">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Kg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="akamai-grn" index="33">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MC43NWJhMjkxNy4xNzA4NzU3NTcxLjE1OTQxZTI3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="vary" index="34">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>T3JpZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0KY29udGVudC10eXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04DQpjb250ZW50LWVuY29kaW5nOiBnemlwDQpkZGQtYXV0aGVudGljYXRlZHdpdGhqd3RmbG93OiBGYWxzZQ0KZGRkLXVzZXJ0eXBlOiBBbm9ueW1vdXNNdWlkDQpkZGQtdG1wbDogSXNJTUZvbGxvd1VzZXI6MTtETk5fQXV0b0RldGVjdGVkY291bnRyeTpJbmRpYTtDbGlja0NvaG9ydDoyO0ZpeElkc0wyOjA7RE5OX2NvdW50cnk6O1VzZXJIYXNBZ2U7VXNlckNvaG9ydEJ5RW5nYWdlbWVudDI4ZDoyO3RtcGwtZGNwLW5vcm1hbC0xOjE7Y2xpY2s5MGRfMzA7QUNUSU9OOkZvbGxvdzpJbnRlcmVzdDtETk5fY2l0eTo7R3JheUZhblNjb3JlOjAuMDEyMztNeUZlZWQ7TWFpbkZlZWRzQ29sZFVzZXI6ZmFsc2U7VGFnZ2luZ1VzZXJBY3Rpb25TaWduYWw7WEZlZWQ7UGFnZVZpZXdDb3VudEd0MTA7RE5OX0F1dG9EZXRlY3RlZHN0YXRlOkthcm5hdGFrYTtVVGN0cjt0cmlnZ2VyY2ZfMl9jcm9zc2RvbWFpbl9vZmZjYW52YXNfZ25uO3RyaWdnZXJjZl8zX2lwMmlfMzBkO3VzcV9ucnRfdjU6YTZlYzg4ZTctOWE4OC00Nzk5LTg5NTItMmRkMDA0ZTExNjY5I2VuLWluO1N0cm9uZ0RlbW90aW9uVjJUcmlnZ2VyOjA7Y29tX3RvcGljX2xpX3Y0OjE7RE5OdXNlckNvdW50cnk6aW5kaWE7cHJnLXNob3ctYmVsbGNtLTMwZDoxO0wyRUVEZW1vdGVSZWFzb246S2VlcEluQ29udHJvbEdyb3VwO0lNQXJ0aWNsZU5lZ1VzZXI6MDtDR1Nob3dUb3BzdG9yaWVzOjE7Y29tX3RvcGljX2xpX3YyOjE7dHJpZ2dlcmNmX2x0X2luYztVc2VyUHJvZmlsZUFjdGlvblNpZ25hbDoyO3RyaWdnZXJjZjt0bXBsLWVzcC1zaG9wcGluZzoxO0NHU2hvd05ld3MxOjE7R3JvdXBJZENTOjNfM180XzNfMl8yNTkyMjFfMjY5MjAzO0NHU2hvd05ld3MzOjE7dHJpZ2dlcmNmXzBfdTJpX2R3ZWxsXzE1O3dwby13YXJtdXNlcjoxO0lzSU1vclB1YkZvbGxvd1VzZXI6MTt0bXBsLVRyYXZlbERlc3RpbmF0aW9uQ2FyZDoxO3RyaWdnZXJjZl8yX2Nyb3NzZG9tYWluX29mZmNhbnZhc19nbm5fdjI7VXNlckhhc0FnZU9yR2VuZGVyXzBfMV8wXzM7dXNlcl9jbHVzdGVyX3Y0OjIwMjQtMDItMjMuNDAzMjEjZW4taW47Y2xpY2s4NGRfMjk7UmVjb1NvdXJjZTpTYWdlXztYQUk6MTAwXzA7cHJnLXdwby10c2NscGluZjoxO3RtcGwtYm9vc3QtMXM7dG1wbC1uZXd0ZWNoO0NsaWNrNGQ6MDtHcmF5VjZGYW5zU2NvcmVWMjowLjAwMDA7VGlsZUlEOnRkcjE7SGFzQ2xpZW50SXBVc2VyUHJvZmlsZToxO3ByZy13cG8tY210aWY6MTtlZVBvc0xpc3Q6MDt0bXBsLTFzYm9vc3RudHByaXZlcjtwcmctd3BvLWZvbGxvdzoxO3VzZXJfY2x1c3Rlcl92NjoyMDI0LTAyLTIyLjYyNTI0I2VuLWluO0lNRXhwbGljaXREaXNsaWtlVXNlcjoxO3RtcGwtdG1wbHRsYXlvdXQ7VXNlckdyb3VwSWQ6M18zXzZfNV8yXzI1OTIyMV8yMzQ2MTY7VVRuZWdJbXByO0ZpeElkczowO0dBLU1vbmV5OjE7SGFzUGVyc1JlY2FsbDtHcmF5Q2xpY2s0ZDowO0wyT25lU3ZjVW5pRmVhdFR1bjo7RE5OdXNlckNpdHk6YmVuZ2FsdXJ1O2NsaWNrXzYxO3RyaWdnZXJjZl8wXzFtaW5fbWhvdDtjbGljazU2ZF8yNDtETk5fQXV0b0RldGVjdGVkQ2l0eTpCZW5nYWx1cnUgTm9ydGg7SU1Cb29zdENvdW50OjJfMF8yO1VMYXRMb24xMi45NTo3Ny42MTtpZnAtNHM6MTtVc2VySGFzQWN0aW9uU2lnbmFsOjE7U2FnZVVzZXJTdGF0dXM6M18wXzBfNTtUUFVzZXI7Q0dTaG93TmV3czQ6MTtCaW5nUmVjb0NvZGU6U3VjY2VzcztFeHBsOjE7SXNSZWNvTmV3VXNlcjoxO3RyaWdnZXJjZl8xX2kyaV9taG90X3YxO3ByZy13cG8tYXV0bzI6MTtjbGljazI4ZF85O0NHU2hvd05ld3MyOjE7RE5OVGlsZUlkOnRkcjE7aW5kX3RvcGljX2xpX3Y0OjE7UlI6MDtFeHBsY2l0Rm9sbG93Q29ob3J0OjI7VXNlckhhc0dlbmRlcjtETk5fc3RhdGU6O0dyYXlWNkZhbnNTY29yZTowLjAwMDA7U3RhYmxlSWRDUzpDRjlBMTE1MUNCREJGMDFGODRCMDkyMzZGRkZGRkZGRjtETk51c2VyU3RhdGU6a2FybmF0YWthO0dBTmV3czE6MTt1c3FfdGV4dF92OTptdWx0Y2FudnFfYWEjZW4taW47bG9jYXRpb246RjcxNUQ3Mjg3NjcwMjM4QTgzNDQ4MDRFMEQ1QUVENDcjZW4taW47VFN2MzoxO3RtcGwtdG1wbHRsYXlvdXQ7dG1wbC1uZXd0ZWNoO2lmcC00czoxO3ByZy13cG8tY210aWY6MTtwcmctd3BvLXRzY2xwaW5mOjE7cHJnLXdwby1hdXRvMjoxO3ByZy13cG8tZm9sbG93OjE7d3BvLXdhcm11c2VyOjE7dG1wbC1lc3Atc2hvcHBpbmc6MTtDR1Nob3dOZXdzMToxO0NHU2hvd1RvcHN0b3JpZXM6MTtDR1Nob3dOZXdzMjoxO0NHU2hvd05ld3MzOjE7Q0dTaG93TmV3czQ6MTtHQS1Nb25leToxO3RtcGwtZGNwLW5vcm1hbC0xOjE7dG1wbC1UcmF2ZWxEZXN0aW5hdGlvbkNhcmQ6MTtHQU5ld3MxOjE7cHJnLXNob3ctYmVsbGNtLTMwZDoxOw0KeC13cG8tYWN0aXZpdHlpZDogNjVEOTkyNDMtNzUxOC00NEMyLTk3QUEtQUUyNUQ2MzYzODg5fDIwMjQtMDItMjRUMDY6NTI6NTIuMzQ3Njk5M1p8ZmFicmljX3dwb3xLT0MyfFdQT18zDQpkZGQtZmVlZG5ld3NpdGVtY291bnQ6IDQxDQpkZGQtZmVhdHVyZXNldDogMCxNc24uT25lRGF0YVNlcnZpY2UuU2VhcmNoLkZlYXR1cmVUcmFja2VyLk1vZGVscy5OZXdzRmVlZEZlYXR1cmU6UXdBQTsNCmRkZC1hY3Rpdml0eWlkOiA2NWQ5OTI0My03NTE4LTQ0YzItOTdhYS1hZTI1ZDYzNjM4ODkNCmRkZC1zdHJhdGVneWV4ZWN1dGlvbmxhdGVuY3k6IDAwOjAwOjAwLjUzMjM2MzANCmRkZC1kZWJ1Z2lkOiA2NWQ5OTI0My03NTE4LTQ0YzItOTdhYS1hZTI1ZDYzNjM4ODl8MjAyNC0wMi0yNFQwNjo1Mjo1Mi40MTEzODU0WnxmYWJyaWNfbnRwZmVlZHxLT0MyfE50cEZlZWRfNTg1DQpkZGQtYXV0aC1mZWF0dXJlczogTXVpZFN0YXRlT3JpZ2luOk11aWRGcm9tQ29va2llDQpvbmV3ZWJzZXJ2aWNlbGF0ZW5jeTogNTM1DQp4LW1zZWRnZS1yZXNwb25zZWluZm86IDUzNQ0KeC1jZXRvLXJlZjogNjVkOTkyNDNiYzMwNDYxYmE0ZWQ0NTgyNDhlMTA3ODJ8QUZEOjY1ZDk5MjQzYmMzMDQ2MWJhNGVkNDU4MjQ4ZTEwNzgyfDIwMjQtMDItMjRUMDY6NTI6NTEuODc4Wg0KYWNjZXB0LWNoOiBTZWMtQ0gtVUEtQXJjaCwgU2VjLUNILVVBLUJpdG5lc3MsIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24sIFNlYy1DSC1VQS1GdWxsLVZlcnNpb24tTGlzdCwgU2VjLUNILVVBLU1vYmlsZSwgU2VjLUNILVVBLU1vZGVsLCBTZWMtQ0gtVUEtUGxhdGZvcm0sIFNlYy1DSC1VQS1QbGF0Zm9ybS1WZXJzaW9uDQp4LW1zZWRnZS1yZWY6IFJlZiBBOiAxOEI0QUVFMkU5MDE0N0Y3OEY2QTREOTI3OEFBODhCNiBSZWYgQjogU0lOMjIxMDgwNzEzMDIzIFJlZiBDOiAyMDI0LTAyLTI0VDA2OjUyOjUxWg0KZXhwaXJlczogU2F0LCAyNCBGZWIgMjAyNCAwNjo1Mjo1MiBHTVQNCmRhdGU6IFNhdCwgMjQgRmViIDIwMjQgMDY6NTI6NTIgR01UDQpzZXQtY29va2llOiBfQ19FVEg9MTsgZXhwaXJlcz1GcmksIDIzIEZlYiAyMDI0IDA2OjUyOjUxIEdNVDsgZG9tYWluPS5tc24uY29tOyBwYXRoPS87IHNlY3VyZTsgaHR0cG9ubHkNCnNldC1jb29raWU6IF9DX0F1dGg9DQpzZXQtY29va2llOiBfRURHRV9TPVNJRD0xQjlFRUQyRTIwQTI2QkNFMDRDQUY5MDEyMTc0NkE5MyZta3Q9ZW4taW4mdWk9ZW4tdXM7IGRvbWFpbj0ubXNuLmNvbTsgcGF0aD0vOyBodHRwb25seQ0KYWthbWFpLXJlcXVlc3QtYmM6IFthPTIzLjQxLjE4Ni4xMTcsYj0zNjIwMjg1ODMsYz1nLG49SU5fVE5fQ0hFTk5BSSxvPTIwOTQwXSxbYT0xMzEuMjUzLjMzLjIwMyxjPW9dDQpzZXJ2ZXItdGltaW5nOiBjbGllbnRydHQ7IGR1cj0xNSwgY2xpZW50dHQ7IGR1cj02NDMsIG9yaWdpbjsgZHVyPTY0MSAsIGNkbnRpbWU7IGR1cj0yDQpha2FtYWktY2FjaGUtc3RhdHVzOiBOb3RDYWNoZWFibGUgZnJvbSBjaGlsZA0KYWthbWFpLXNlcnZlci1pcDogMjMuNDEuMTg2LjExNw0KYWthbWFpLXJlcXVlc3QtaWQ6IDE1OTQxZTI3DQp4LWFzLXN1cHByZXNzc2V0Y29va2llOiAxDQpjYWNoZS1jb250cm9sOiBwcml2YXRlLCBtYXgtYWdlPTANCnJlcG9ydC10bzogeyJncm91cCI6Im5ldHdvcmstZXJyb3JzIiwibWF4X2FnZSI6NjA0ODAwLCJlbmRwb2ludHMiOlt7InVybCI6Imh0dHBzOi8vZGVmZi5uZWxyZXBvcnRzLm5ldC9hcGkvcmVwb3J0P2NhdD1tc24ifV19DQpuZWw6IHsicmVwb3J0X3RvIjoibmV0d29yay1lcnJvcnMiLCJtYXhfYWdlIjo2MDQ4MDAsInN1Y2Nlc3NfZnJhY3Rpb24iOjAuMDAxLCJmYWlsdXJlX2ZyYWN0aW9uIjowLjF9DQp0aW1pbmctYWxsb3ctb3JpZ2luOiAqDQpha2FtYWktZ3JuOiAwLjc1YmEyOTE3LjE3MDg3NTc1NzEuMTU5NDFlMjcNCnZhcnk6IE9yaWdpbg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>eyJuZXh0UGFnZVVybCI6Imh0dHBzOi8vYXBpLm1zbi5jb20vbmV3cy9mZWVkL3BhZ2VzL250cD9hY3Rpdml0eUlkPTAzMjY4MzU3LUI4RkQtNDhBRC1BODlGLTlEMjA0OEQ2QjFCQiZ0aW1lT3V0PTIwMDAmb2NpZD1hbmFoZWltLW50cC1mZWVkcyZzY249QVBQX0FOT04mYXBpa2V5PTBRZk9YM1ZuNTFZQ3ppdGJMYVJrVFRCYWR0V3BnVE44TlpMVzBDMVNFTSZjb250ZW50VHlwZT1hcnRpY2xlJTJjdmlkZW8lMmNzbGlkZXNob3clMmN3ZWJjb250ZW50JmNtPWVuLWluJlVzZXI9bS0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMyZuZXdzU2tpcD00MSYkc2tpcD0xJndwb0Ntc0FkU2VydmVkPTQmd3BvTmF0aXZlQWRTZXJ2ZWQ9NSZjYXJkc1NlcnZlZD0wJndwb3NjaGVtYT1ieXJlZ2lvbiZhdWRpZW5jZU1vZGU9YWR1bHQmcmVuZGVyZWRTZWdtZW50cz0yOTkxMzkmbGFzdGNhcmRyYW5rPTAiLCJzZWN0aW9ucyI6W3sicmVnaW9uIjoicml2ZXIiLCJzdWJTZWN0aW9ucyI6W3siZGF0YVRlbXBsYXRlIjoibXNmdC1uaW5lLWNhcmQtZml2ZS1jb2wtYXRmIiwibGF5b3V0VGVtcGxhdGUiOiJtc2Z0LW5pbmUtY2FyZC1maXZlLWNvbC1hdGYiLCJjYXJkcyI6W3sidHlwZSI6ImluZm9wYW5lIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJzdWJDYXJkcyI6W3siaWQiOiJCQjFpTkoydyIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiIzIHN0b2NrcyBSYWplc2ggUGFsdml5YSBpcyBidWxsaXNoIG9uIGZvciBuZXh0IHdlZWsiLCJhYnN0cmFjdCI6IlZlcnkgc3Ryb25nIG1vbWVudHVtIHRocm91Z2hvdXQgdGhlIHdlZWsuIFRob3VnaCB0aGUgaW5kZXggd2FzIHZvbGF0aWxlLCBpZiB3ZSBhbmFseXNlIHRoZSBicm9hZGVyIG1hcmtldCwgaXQgd2FzIG9uIHRoZSBidXlpbmcgc2lkZSBvbmx5LiIsInJlYWRUaW1lTWluIjo1LCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL21vbmV5L21hcmtldHMvMy1zdG9ja3MtcmFqZXNoLXBhbHZpeWEtaXMtYnVsbGlzaC1vbi1mb3ItbmV4dC13ZWVrL2FyLUJCMWlOSjJ3IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yNFQwNTo1NTo0NFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo5MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5iZDYzMDNiYzdiMDAwM2U1ZGU5ZDlmNmI3ZGQzYzg1ZiZwaWQ9V2RwIiwidGl0bGUiOiIzIHN0b2NrcyBSYWplc2ggUGFsdml5YSBpcyBidWxsaXNoIG9uIGZvciBuZXh0IHdlZWsiLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NDg2LCJ4MiI6ODkyLCJ5MSI6MTgyLCJ5MiI6NTg4fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyNTIxM0EiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Y0RUNFNCIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjUyMTNBIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGNEVDRTQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTFhaVI4NyIsIm5hbWUiOiJUaGUgRWNvbm9taWMgVGltZXMiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFhaUZkbi5pbWciLCJwcm9maWxlSWQiOiJ2aWQtNzk2Ymt3dzRtYWpxNGlxNGtpeDZhZ2J0ZDhuMGU4dmE2bWgzeGU5OXJnaDM0YXFjdWJwYSJ9LCJjYXRlZ29yeSI6Im1vbmV5IiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjIsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoyLCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzlmMmI3YWFmLWQ0MDItNDkxNS1hMmE0LTNkZDA3NDljYWUxYyIsImZlZWROYW1lIjoiTW9uZXkiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoxLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJjRl9VMnUiLCJyYW5rIjowfV0sInJpIjoiMjIwIiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24ifSx7ImlkIjoiQkIxaUtROHoiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiVmF1Z2hhbiBsYXVkcyBKb2UgUm9vdCdzICdjb21tb24gc2Vuc2UgYmFsbCcgYWZ0ZXIgYmF0dGVyIGhpdHMgZmlmdHkgaW4gUmFuY2hpIiwiYWJzdHJhY3QiOiJJbmRpYSB2cyBFbmdsYW5kOiBGb3JtZXIgRW5nbGFuZCBiYXR0ZXIgTWljaGFlbCBWYXVnaGFuIGxhdWRlZCBKb2UgUm9vdCBmb3IgaGlzIGZpcnN0IGZpZnR5IGluIHRoZSBzZXJpZXMuIFJvb3QgZGlkIG5vdCBlbXBsb3kgQmF6YmFsbCBpbiB0aGUgZm91cnRoIFRlc3QgbWF0Y2ggYXQgUmFuY2hpIGFuZCBwYXRpZW50bHkgc2NvcmVkIGhpcyBoYWxmLWNlbnR1cnkgaW4gMTA4IGJhbGxzLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL3Nwb3J0cy9jcmlja2V0L3ZhdWdoYW4tbGF1ZHMtam9lLXJvb3Qtcy1jb21tb24tc2Vuc2UtYmFsbC1hZnRlci1iYXR0ZXItaGl0cy1maWZ0eS1pbi1yYW5jaGkvYXItQkIxaUtROHoiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDA4OjI1OjI2WiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxMjAwLCJoZWlnaHQiOjY3NSwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjVjNDkzZmNjYjhiYjM5NGJiNmUzMjIxYmM4ZDBhNTE5JnBpZD1XZHAiLCJ0aXRsZSI6IlZhdWdoYW4gbGF1ZHMgSm9lIFJvb3QncyAnY29tbW9uIHNlbnNlIGJhbGwnIGFmdGVyIGJhdHRlciBoaXRzIGZpZnR5IGluIFJhbmNoaSIsImNhcHRpb24iOiJWYXVnaGFuIGxhdWRzIEpvZSBSb290J3MgJ2NvbW1vbiBzZW5zZSBiYWxsJyBhZnRlciBiYXR0ZXIgaGl0cyBmaWZ0eSBpbiBSYW5jaGkiLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQxNDgxMiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTBEN0M4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM0MTQ4MTIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0UwRDdDOCIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBeUZXRyIsIm5hbWUiOiJJbmRpYSBUb2RheSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWExUkxELmltZyIsInByb2ZpbGVJZCI6InZpZC1yZXR0MGdmZ2t2bTVzcjdyY2ZuYzk2dnh3dWkwa3ZydTg2Y3NpNGllZzluNTczN2R2OThhIiwibGlnaHRUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjI5LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0Y2TiJ9LCJkYXJrVGhlbWVTVkdMb2dvIjp7IndpZHRoIjoyOSwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dGNk4tZGFyayJ9fSwiY2F0ZWdvcnkiOiJzcG9ydHMiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6Niwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjUsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjEsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV82NTBlMTUzOS1mYjU3LTQ3ZDctODUxMC0wYmZjNTlmY2U5NjQiLCJmZWVkTmFtZSI6IkNyaWNrZXQiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoyLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJmb2xsb3dUb3BpYyIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IllfNjUwZTE1MzktZmI1Ny00N2Q3LTg1MTAtMGJmYzU5ZmNlOTY0IiwibmFtZSI6IkNyaWNrZXQiLCJ0aW1lIjoiMjAyNC0wMi0yMlQxNDowODo1MloifX1dLCJyaSI6IjIzMCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIHJlcG9ydHMgb24gKioqSm9lIFJvb3QncyoqKiBmaXJzdCAqZmlmdHkqIGluIHRoZSAqKlRlc3Qgc2VyaWVzKiogYmV0d2VlbiAqKkVuZ2xhbmQgYW5kIEluZGlhKiogaW4gUmFuY2hpLiBSb290IHNjb3JlZCBoaXMgZmlmdHkgaW4gKjEwOCBiYWxscyosIHNob3dpbmcgKnBhdGllbmNlKiBhbmQgKmNhcmVmdWwgc2hvdHMqIGFmdGVyIEVuZ2xhbmQncyBlYXJseSBjb2xsYXBzZS4gSGUgaGVscGVkIEVuZ2xhbmQgcmVhY2ggKjE1MCogYWZ0ZXIgbG9zaW5nIHRoZWlyIGZpcnN0IGZpdmUgd2lja2V0cywgYW5kIGNvbnRpbnVlZCB0byBiYXQgd2l0aCAqQmVuIEZvYWtlcyogdG8gcG9zdCAqMTgwKiBmb3IgZml2ZSBhdCBzdHVtcHMgb24gRGF5IDEuIEZvcm1lciBFbmdsYW5kIGNyaWNrZXRlciAqKk1pY2hhZWwgVmF1Z2hhbioqIHByYWlzZWQgUm9vdCdzIGFwcHJvYWNoIGFuZCBjYWxsZWQgaXQgYSAqJ2NvbW1vbiBzZW5zZSBiYWxsJyogaW5zdGVhZCBvZiAqJ0JhemJhbGwnKiwgcmVmZXJyaW5nIHRvIFJvb3QncyBwcmV2aW91cyBhZ2dyZXNzaXZlIHN0eWxlIHRoYXQgYmFja2ZpcmVkIGluIHRoZSB0aGlyZCBUZXN0IGluIFJhamtvdC4gIiwiaW5kZXgiOjB9XX0seyJ0eXBlIjoibmF0aXZlYWQiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjB9LHsiaWQiOiJCQjFpS3N4YyIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJXaGF0IElzIOKAmENoYWlybWFuIEVtZXJpdHVz4oCZLCBUaGUgVGl0bGUgUmF0YW4gVGF0YSBIb2xkcyBJbiBUYXRhIEdyb3VwPyIsImFic3RyYWN0IjoiTW9yZSB0aGFuIGEgZGVjYWRlIGFnbywgaW4gRGVjZW1iZXIgMjAxMiwgb25lIG9mIEluZGlh4oCZcyBtb3N0IHByZXN0aWdpb3VzIGdyb3VwcywgdGhlIFRhdGEgZ3JvdXAgY29uZmVycmVkIHRoZSB0aXRsZSBvZiBDaGFpcm1hbiBFbWVyaXR1cyB0byBSYXRhbiBUYXRhLiBUaGUgdGVybSAnQ2hhaXJtYW4gRW1lcml0dXMnIGlzIHVzZWQgYXMgYSBwcm9mZXNzaW9uYWwgdGl0bGUgdG8gaW5kaWNhdGUgdGhhdCB0aGUgcGVyc29uIGNvbmZlcnJlZCB3aXRoIHRoZSB0aXRsZSBoYXMgcmV0aXJlZCBidXQgY29udGludWVzIHRvIGtlZXAgdGhlIHRpdGxlIGFzIGFuIGhvbm91ci4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9hdXRvcy9uZXdzL3doYXQtaXMtY2hhaXJtYW4tZW1lcml0dXMtdGhlLXRpdGxlLXJhdGFuLXRhdGEtaG9sZHMtaW4tdGF0YS1ncm91cC9hci1CQjFpS3N4YyIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMDc6MTg6NDZaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjgwMCwiaGVpZ2h0Ijo0MjAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5jYjk5NTBjMjI4NTczMzFjMTBiMTlkMTdjYjVmMmEwNyZwaWQ9V2RwIiwidGl0bGUiOiJXaGF0IElzIOKAmENoYWlybWFuIEVtZXJpdHVz4oCZLCBUaGUgVGl0bGUgUmF0YW4gVGF0YSBIb2xkcyBJbiBUYXRhIEdyb3VwPyIsImZvY2FsUmVnaW9uIjp7IngxIjozNjEsIngyIjo0ODEsInkxIjo5MiwieTIiOjIxMn0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjkyOTIyIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGNkYwRUUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzI5MjkyMiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjZGMEVFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkIxOFNOdnYiLCJuYW1lIjoiSW5kaWF0aW1lcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMTlRb3hGLmltZyIsInByb2ZpbGVJZCI6InZpZC1kazA0d3I2Y2Zpc2UwY2h4NXF4cTQwNDZkNTA1Y3Aydmc4cHN4bjh4cGU0bjl1eG00dHZzIn0sImNhdGVnb3J5IjoiYXV0b3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfNGM5YzFiY2YtOGQ2My00YjkxLWE4NTQtMzM5ZDQ5ODc5MzI0IiwiZmVlZE5hbWUiOiJBdXRvcyBuZXdzIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MywiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiY0ZfVTJ1IiwicmFuayI6MH1dLCJyaSI6IjIyMCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIGV4cGxhaW5zIHRoZSBtZWFuaW5nIGFuZCB1c2FnZSBvZiAqKipDaGFpcm1hbiBFbWVyaXR1cyoqKiwgYSBwcm9mZXNzaW9uYWwgdGl0bGUgY29uZmVycmVkIGJ5ICoqVGF0YSBTb25zKiogdG8gaXRzIGZvcm1lciBjaGFpcm1hbiAqKlJhdGFuIFRhdGEqKiBpbiAyMDEyLiBJdDpcblxuLSBEYXRlcyB0aGUgYXBwb2ludG1lbnQgb2YgKipSYXRhbiBUYXRhKiogYXMgKipDaGFpcm1hbiBFbWVyaXR1cyoqIG9mIFRhdGEgU29ucyBhbmQgaXRzIHN1YnNpZGlhcmllcywgYW5kIGhpcyBwcmV2aW91cyByb2xlcyBpbiB2YXJpb3VzIFRhdGEgR3JvdXAgY29tcGFuaWVzLlxuLSBEZWZpbmVzIHRoZSB0ZXJtIGFzIGFuIGhvbm91ciBmb3IgcmV0aXJlZCBleGVjdXRpdmVzIHdobyBjb250aW51ZSB0byBzZXJ2ZSBvbiB0aGUgYm9hcmRzIG9mIHRydXN0cyBhbmQgYWxsaWVkIGVudGl0aWVzLlxuLSBOYW1lcyB0aGUgY3VycmVudCBjaGFpcm1hbiBvZiBUYXRhIEdyb3VwIGFzICoqTmF0YXJhamFuIENoYW5kcmFzZWthcmFuKiosIGFuZCBoaXMgcHJldmlvdXMgcm9sZXMgaW4gVGF0YSBDb25zdWx0YW5jeSBTZXJ2aWNlcywgVGF0YSBNb3RvcnMsIGFuZCBUYXRhIEdsb2JhbCBCZXZlcmFnZXMuXG4tIExpc3RzIHRoZSBzaXggcHJldmlvdXMgY2hhaXJtZW4gb2YgVGF0YSBHcm91cCBmcm9tICoqSmFtc2V0amkgVGF0YSoqIHRvICoqQ3lydXMgTWlzdHJ5KiosIGFuZCB0aGVpciByZXNwZWN0aXZlIHRlbnVyZXMuXG4iLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaUg4a00iLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiNzFzdCBNaXNzIFdvcmxkIGluIEluZGlhOiBUaGluZ3MgdG8gbG9vayBmb3J3YXJkIHRvIGFzIHRoZSBiZWF1dHkgcGFnZWFudCByZXR1cm5zIHRvIEluZGlhIiwiYWJzdHJhY3QiOiJBcyB0aGUgNzFzdCBNaXNzIFdvcmxkIHJldHVybnMgdG8gSW5kaWEsIGdldCByZWFkeSBmb3IgYSBzaG93Y2FzZSBvZiBiZWF1dHksIHRhbGVudCwgYW5kIGN1bHR1cmUuIEhlcmUncyB3aGF0IHRvIGV4cGVjdCBmcm9tIHRoaXMgaGlnaGx5IGFudGljaXBhdGVkIGV2ZW50LiIsInJlYWRUaW1lTWluIjozLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2xpZmVzdHlsZS9zdHlsZS83MXN0LW1pc3Mtd29ybGQtaW4taW5kaWEtdGhpbmdzLXRvLWxvb2stZm9yd2FyZC10by1hcy10aGUtYmVhdXR5LXBhZ2VhbnQtcmV0dXJucy10by1pbmRpYS9hci1CQjFpSDhrTSIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjJUMDk6Mzc6MTNaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjU0OSwiaGVpZ2h0IjozMDksInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy4zNWQwMWEwYmZjNzM4NDUxNGNmYWViZmM1NWE0ZDdjYyZwaWQ9V2RwIiwidGl0bGUiOiJIZXJlJ3Mgd2hhdCB0byBleHBlY3QgYXMgdGhlIE1pc3MgV29ybGQgcGFnZWFudCBtYWtlcyBpdHMgZ3JhbmQgcmV0dXJuIHRvIHRoZSBjb3VudHJ5LiIsImNhcHRpb24iOiJIZXJlJ3Mgd2hhdCB0byBleHBlY3QgYXMgdGhlIE1pc3MgV29ybGQgcGFnZWFudCBtYWtlcyBpdHMgZ3JhbmQgcmV0dXJuIHRvIHRoZSBjb3VudHJ5LiIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDk1MDI5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEOURBQ0MiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQ5NTAyOSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDlEQUNDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFCM3JYIiwibmFtZSI6IkhpbmR1c3RhbiBUaW1lcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMThMd2JWLmltZyIsInByb2ZpbGVJZCI6InZpZC12Zmh2ZWR2anV4cnFxZTU3MHhqdXk1NjdpeDBzNTVqa3FxdmNpdGgwM204bjMyeThrdnBhIn0sImNhdGVnb3J5IjoibGlmZXN0eWxlIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjE3Niwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjE1NiwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MjAsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9hZDdkZThmMC01M2VkLTQxZTAtYmI4Ni04NmZiMGJiODFhNGQiLCJmZWVkTmFtZSI6IkxpZmVzdHlsZSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImNGX0lwIiwicmFuayI6MH1dLCJyaSI6IjIxMCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIGV4cGxhaW5zIHRoZSBrZXkgYXNwZWN0cyBvZiB0aGUgKioqNzFzdCBNaXNzIFdvcmxkIDIwMjQqKiogcGFnZWFudCwgd2hpY2ggaXMgYmVpbmcgaGVsZCBpbiBJbmRpYSBhZnRlciBhIDI4LXllYXIgaGlhdHVzLiBJdCBjb3ZlcnM6XG5cbi0gVGhlICoqQmVhdXR5IHdpdGggYSBQdXJwb3NlKiogYXdhcmQgZm9yIHRoZSBtb3N0IHNpZ25pZmljYW50IGNoYXJpdHkgcHJvamVjdCBpbiBlYWNoIGNvdW50cnkuXG4tIFRoZSAqKkhlYWQtdG8tSGVhZCBDaGFsbGVuZ2UqKiBmb3Igc3BlYWtpbmcsIHByZXNlbnRhdGlvbiwgdGhpbmtpbmcsIGFuZCBpbnRlbGxpZ2VuY2Ugc2tpbGxzLlxuLSBUaGUgKipNaXNzIFdvcmxkIFNwb3J0cyoqIHRpdGxlIGZvciB0aGUgd2lubmVyIG9mIGEgc3BvcnRzIGV2ZW50IGF0IHRoZSBwYWdlYW50LlxuLSBUaGUgKipNaXNzIFdvcmxkIFRhbGVudCoqIGNvbXBldGl0aW9uIGZvciBzaG93Y2FzaW5nIHNpbmdpbmcsIGRhbmNpbmcsIHBvZXRyeSwgZXRjLlxuLSBUaGUgKipXb3JsZCBUb3AgRGVzaWduZXIgQXdhcmQqKiBhbmQgdGhlICoqTWlzcyBXb3JsZCBUb3AgTW9kZWwqKiBhd2FyZHMgZm9yIHRoZSBiZXN0IGZhc2hpb24gY3JlYXRpb25zLlxuLSBUaGUgKipNaXNzIFdvcmxkIFJlZCBDYXJwZXQgU3BlY2lhbCoqIGFuZCB0aGUgKipHcmFuZCBGaW5hbGUqKiBldmVudHMgaW4gTXVtYmFpLlxuXG5UaGUgYXJ0aWNsZSBuYW1lcyAqKlNpbmkgU2hldHR5KiosIHRoZSBGZW1pbmEgTWlzcyBJbmRpYSBXb3JsZCAyMDIyIHdpbm5lciwgYXMgdGhlIEluZGlhbiByZXByZXNlbnRhdGl2ZSBmb3IgdGhlIHBhZ2VhbnQuXG4iLCJpbmRleCI6MH1dfSx7InR5cGUiOiJjbXNhZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MH0seyJpZCI6IkJCMWlOTHphIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkluY3JlYXNlZCBUYXggQ29sbGVjdGlvbiBUbyBCb29zdCBDYXBpdGFsIEV4cGVuZGl0dXJlIEJ5IDQzMyBwYzogRk0gTmlybWFsYSBTaXRoYXJhbWFuIiwiYWJzdHJhY3QiOiJOaXJtYWxhIFNpdGhhcmFtYW4gc2FpZCB0aGF0IHRoZSBncm9zcyBkaXJlY3QgdGF4IGNvbGxlY3Rpb25zIGZvciBBcHJpbC1KYW51YXJ5IHdlcmUgMTYuNzcgcGVyIGNlbnQgaGlnaGVyIHRoYW4gdGhlIHNhbWUgcGVyaW9kIGxhc3QgeWVhciBhbmQgdGhlIENlbnRyZSBleHBlY3RlZCB0aGVtIHRvIHJpc2UgZnVydGhlci4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL3dvcmxkL2luY3JlYXNlZC10YXgtY29sbGVjdGlvbi10by1ib29zdC1jYXBpdGFsLWV4cGVuZGl0dXJlLWJ5LTQzMy1wYy1mbS1uaXJtYWxhLXNpdGhhcmFtYW4vYXItQkIxaU5MemEiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA1OjUwOjQ0WiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxMjgwLCJoZWlnaHQiOjcyMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjQwYjBhOGI5MGVlYzk3ZWRmNGU2OTI3NTMzZjRjMWRiJnBpZD1XZHAiLCJ0aXRsZSI6ImluY3JlYXNlZCB0YXggY29sbGVjdGlvbiB0byBib29zdCBjYXBpdGFsIGV4cGVuZGl0dXJlIGJ5IDQzMyBwYzogZm0gbmlybWFsYSBzaXRoYXJhbWFuIiwiY2FwdGlvbiI6ImluY3JlYXNlZCB0YXggY29sbGVjdGlvbiB0byBib29zdCBjYXBpdGFsIGV4cGVuZGl0dXJlIGJ5IDQzMyBwYzogZm0gbmlybWFsYSBzaXRoYXJhbWFuIiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM1QjQxMTciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0QwRDVFMSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNUI0MTE3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEMEQ1RTEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTEwYkhzMSIsIm5hbWUiOiJUaW1lcyBOb3ciLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTEwYkZwQy5pbWciLCJwcm9maWxlSWQiOiJ2aWQtanNoazlwdTV0OTZhNjhoOHdkcjZlMjVmZzBkM2ZxdjJkZHJ2cXI3NWhicXQ5anYzczgwYSJ9LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3RhdHVzIjoib2ZmIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV82MjFmOTUzNC1mMzI3LTRkN2UtYTYwMy02MjgzZWEzZGU0OWUiLCJmZWVkTmFtZSI6IkJ1c2luZXNzIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6NSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiZXhwbG9yZSIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IiIsIm5hbWUiOiJNb25leSIsInRpbWUiOiIifX1dLCJyaSI6IjIwNCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlKTXlCIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkJvbGx5d29vZCBhc3Npc3RhbnQgZGlyZWN0b3IgdGFrZW4gYXdheSBieSBjb3BzIG92ZXIgdmVyYmFsIG91dGJ1cnN0IGFnYWluc3QgUmFuaSBNdWtlcmppIGFuZCBTaGFub28gU2hhcm1hIiwiYWJzdHJhY3QiOiJBbnVyYWcgR29wYWwgUGFuZGV5LCBhIGZvcm1lciBZUkYgQXNzaXN0YW50IERpcmVjdG9yLCBjYXVzZWQgY29udHJvdmVyc3kgb3V0c2lkZSBNYW5pc2ggTWFsaG90cmEncyBzdG9yZSBpbiBNdW1iYWkuIEhlIHZlcmJhbGx5IGFidXNlZCBSYW5pIE11a2VyamksIFlSRidzIGNhc3RpbmcgZGlyZWN0b3IsIGNvd29ya2VycywgYW5kIG1hZGUgZGVyb2dhdG9yeSByZW1hcmtzLiBQYW5kZXkncyBjb250cmFjdCB3YXMgdGVybWluYXRlZCBkdWUgdG8gYWJ1c2l2ZSBiZWhhdmlvciBvbiBmaWxtIHNldHMuIiwicmVhZFRpbWVNaW4iOjIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vZW50ZXJ0YWlubWVudC9ib2xseXdvb2QvYm9sbHl3b29kLWFzc2lzdGFudC1kaXJlY3Rvci10YWtlbi1hd2F5LWJ5LWNvcHMtb3Zlci12ZXJiYWwtb3V0YnVyc3QtYWdhaW5zdC1yYW5pLW11a2VyamktYW5kLXNoYW5vby1zaGFybWEvYXItQkIxaUpNeUIiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDA0OjM1OjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxMjgwLCJoZWlnaHQiOjcyMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmQxYzUxNTNkN2EyZmQwZDNhYmU2ZjAxMmNjNTdhOWVjJnBpZD1XZHAiLCJ0aXRsZSI6IkJvbGx5d29vZCBhc3Npc3RhbnQgZGlyZWN0b3IgdGFrZW4gYXdheSBieSBjb3BzIG92ZXIgdmVyYmFsIG91dGJ1cnN0IGFnYWluc3QgUmFuaSBNdWtlcmppIGFuZCBTaGFub28gU2hhcm1hIiwiZm9jYWxSZWdpb24iOnsieDEiOjE0NSwieDIiOjExMzIsInkxIjoxNzIsInkyIjo1MTh9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQwMkYzOCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTBDRkQ1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM0MDJGMzgiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0UwQ0ZENSIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkJCMThTQnQ5IiwibmFtZSI6IlRoZSBUaW1lcyBvZiBJbmRpYSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWFpYXk1LmltZyIsInByb2ZpbGVJZCI6InZpZC1rYmowZThpMjVrdzRydHlqbmFiaG1xbWdzYjZjcDN5cmFiZzZtYXcwdHd1cGI3czI5Z2dhIn0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50Ijo0LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MiwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MiwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzU1OTAxZTEyLWIwMzEtNGFmYi05NmM0LTM3NWU1NzVjMDkxOSIsImZlZWROYW1lIjoiTW92aWVzIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6NiwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiZXhwbG9yZSIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IiIsIm5hbWUiOiJFbnRlcnRhaW5tZW50IiwidGltZSI6IiJ9fV0sInJpIjoiMjA0LDI0MiIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IioqKkFudXJhZyBHb3BhbCBQYW5kZXkqKiosIGEgZm9ybWVyIGFzc2lzdGFudCBkaXJlY3RvciBhdCAqKllhc2ggUmFqIEZpbG1zIChZUkYpKiosIHdhcyBpbnZvbHZlZCBpbiBhIGhlYXRlZCBhbHRlcmNhdGlvbiBvdXRzaWRlIGRlc2lnbmVyICoqTWFuaXNoIE1hbGhvdHJhJ3MqKiBzdG9yZSBpbiBNdW1iYWkuIEhlIHJlcG9ydGVkbHkgKipodXJsZWQgYWJ1c2VzKiogYXQgYWN0cmVzcyAqUmFuaSBNdWtlcmppKiBhbmQgWVJGJ3MgY2FzdGluZyBkaXJlY3RvciwgKlNoYW5vbyBTaGFybWEqLCBhbmQgZXZlbiBlbnRlcmVkIHRoZSBzdG9yZSB0byBtYWtlIG1vcmUgZGVyb2dhdG9yeSByZW1hcmtzLiAqKlBvbGljZSBvZmZpY2VycyoqIGludGVydmVuZWQgYW5kIGVzY29ydGVkIGhpbSBhd2F5IGZyb20gdGhlIHNjZW5lLiBJdCBpcyB1bmNsZWFyIHdoYXQgdHJpZ2dlcmVkIGhpcyByZWFjdGlvbiwgYnV0IHJ1bW91cnMgc3VnZ2VzdCB0aGF0IGl0IHdhcyByZWxhdGVkIHRvIGhpcyAqKnRlcm1pbmF0aW9uIGZyb20gWVJGKiogZHVlIHRvIGhpcyAqdW5wcm9mZXNzaW9uYWwgY29uZHVjdCBhbmQgdnVsZ2FyIGxhbmd1YWdlKiBvbiBzZXRzLiAiLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaURoU3giLCJ0eXBlIjoic2xpZGVzaG93IiwidGl0bGUiOiJUaGUgcmVhbC1saWZlIFNsZWVwaW5nIEJlYXV0eSBjYXN0bGUgYW5kIG1vcmUgZmFpcnktdGFsZSBsb2NhdGlvbnMgeW91IGNhbiB2aXNpdCIsImFic3RyYWN0IjoiRnJvbSB0aGUgbXlzdGVyeSBvZiB0aGUgbG9zdCBjaXR5IG9mIEF0bGFudGlzIHRvIHRoZSB0YWxlIG9mIFNsZWVwaW5nIEJlYXV0eSwgd2Ugc2VlayBvdXQgbG9jYXRpb25zIGFyb3VuZCB0aGUgd29ybGQgc3RlZXBlZCBpbiBteXRocyBhbmQgbGVnZW5kcyB0aGF0IGFyZSBzdXJlIHRvIGNhcHR1cmUgeW91ciBpbWFnaW5hdGlvbi4iLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2xpZmVzdHlsZS90cmF2ZWwvdGhlLXJlYWwtbGlmZS1zbGVlcGluZy1iZWF1dHktY2FzdGxlLWFuZC1tb3JlLWZhaXJ5LXRhbGUtbG9jYXRpb25zLXlvdS1jYW4tdmlzaXQvc3MtQkIxaURoU3giLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwic2xpZGVzIjpbeyJ0aXRsZSI6IkZhY3Qgb3IgZmljdGlvbj8iLCJib2R5IjoiPHA+RXZlciB3aXNoZWQgeW91IGNvdWxkIHZpc2l0IHRoZSBsb2NhdGlvbnMgb2YgeW91ciBmYXZvdXJpdGXCoGFuY2llbnQgbXl0aHMgYW5kIGxlZ2VuZHMsIG9yIGV2ZW4gbW9kZXJuIHdvcmtzIG9mIGZpY3Rpb24/wqBGcm9tIHRoZSBteXN0ZXJ5IG9mIHRoZSBsb3N0IGNpdHkgb2YgQXRsYW50aXMgYW5kIHRoZSBlbmlnbWEgb2YgdGhlIEJlcm11ZGEgVHJpYW5nbGUgdG8gdGhlIHdlbGwtbG92ZWQgdGFsZXMgb2YgbGVnZW5kYXJ5IHdhcnJpb3IgS2luZyBBcnRodXIgYW5kIGZhaXJ5LXRhbGUgaGVyb2luZSBTbGVlcGluZyBCZWF1dHksIHdlJ3ZlIGZvdW5kIHRoZSBwbGFjZXMgc3RlZXBlZCBpbiBsZWdlbmQgdGhhdCB5b3UgY2FuIGFjdHVhbGx5IHZpc2l0LiBUaGV5wqBhcmUgYWxsIHN1cmUgdG8gY2FwdHVyZSB5b3VyIGltYWdpbmF0aW9uLjwvcD4gIDxwPjxzdHJvbmc+UmVhZHkgdG8gZXhwbG9yZT8gQ2xpY2sgdGhyb3VnaCB0aGUgZ2FsbGVyeSB0byBkaXNjb3ZlcsKgc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IGZhbnRhc3RpY2FswqBwbGFjZXMgeW91IGNhbiBzZWUgaW4gcmVhbCBsaWZlLi4uPC9zdHJvbmc+PC9wPiIsImltYWdlIjp7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInF1YWxpdHkiOjc0LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWlENlZZLmltZyIsImF0dHJpYnV0aW9uIjoiWWV2aGVuaWkgQ2h1bG92c2t5aS9TaHV0dGVyc3RvY2siLCJ0aXRsZSI6IkZhY3Qgb3IgZmljdGlvbj8iLCJjYXB0aW9uIjoiPHA+RXZlciB3aXNoZWQgeW91IGNvdWxkIHZpc2l0IHRoZSBsb2NhdGlvbnMgb2YgeW91ciBmYXZvdXJpdGXCoGFuY2llbnQgbXl0aHMgYW5kIGxlZ2VuZHMsIG9yIGV2ZW4gbW9kZXJuIHdvcmtzIG9mIGZpY3Rpb24/wqBGcm9tIHRoZSBteXN0ZXJ5IG9mIHRoZSBsb3N0IGNpdHkgb2YgQXRsYW50aXMgYW5kIHRoZSBlbmlnbWEgb2YgdGhlIEJlcm11ZGEgVHJpYW5nbGUgdG8gdGhlIHdlbGwtbG92ZWQgdGFsZXMgb2YgbGVnZW5kYXJ5IHdhcnJpb3IgS2luZyBBcnRodXIgYW5kIGZhaXJ5LXRhbGUgaGVyb2luZSBTbGVlcGluZyBCZWF1dHksIHdlJ3ZlIGZvdW5kIHRoZSBwbGFjZXMgc3RlZXBlZCBpbiBsZWdlbmQgdGhhdCB5b3UgY2FuIGFjdHVhbGx5IHZpc2l0LiBUaGV5wqBhcmUgYWxsIHN1cmUgdG8gY2FwdHVyZSB5b3VyIGltYWdpbmF0aW9uLjwvcD4gIDxwPjxzdHJvbmc+UmVhZHkgdG8gZXhwbG9yZT8gQ2xpY2sgdGhyb3VnaCB0aGUgZ2FsbGVyeSB0byBkaXNjb3ZlcsKgc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IGZhbnRhc3RpY2FswqBwbGFjZXMgeW91IGNhbiBzZWUgaW4gcmVhbCBsaWZlLi4uPC9zdHJvbmc+PC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiSGFycnkgUG90dGVyJ3MgSG9nd2FydHMgRXhwcmVzcyIsImJvZHkiOiI8cD5UaGUgc3RlYW0gdHJhaW4gdGhhdCBjaHVncyB0byBKSyBSb3dsaW5n4oCZcyBmaWN0aW9uYWwgSG9nd2FydHMgU2Nob29sIG9mIFdpdGNoY3JhZnQgYW5kIFdpemFyZHJ5IGlzIHJlYWwuIFBhc3NlbmdlcnMgYm9hcmQgYXQgRm9ydCBXaWxsaWFtIGFuZCBNYWxsYWlnIGFuZCByaWRlIHRoZSB0cmFpbiAoY2FsbGVkIFRoZSBKYWNvYml0ZSBpbiB0aGUgbXVnZ2xlIHdvcmxkKSB0aHJvdWdoIDg0IGdsb3Jpb3VzIG1pbGVzICgxMzVrbSkgb2YgU2NvdHRpc2ggY291bnRyeXNpZGUuPC9wPiIsImltYWdlIjp7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInF1YWxpdHkiOjc0LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWlEYnY1LmltZyIsImF0dHJpYnV0aW9uIjoiSm9hbm5hbG9ycmFpbmVyaG9kZXMvUGl4YWJheSIsInRpdGxlIjoiSGFycnkgUG90dGVyJ3MgSG9nd2FydHMgRXhwcmVzcyIsImNhcHRpb24iOiI8cD5UaGUgc3RlYW0gdHJhaW4gdGhhdCBjaHVncyB0byBKSyBSb3dsaW5n4oCZcyBmaWN0aW9uYWwgSG9nd2FydHMgU2Nob29sIG9mIFdpdGNoY3JhZnQgYW5kIFdpemFyZHJ5IGlzIHJlYWwuIFBhc3NlbmdlcnMgYm9hcmQgYXQgRm9ydCBXaWxsaWFtIGFuZCBNYWxsYWlnIGFuZCByaWRlIHRoZSB0cmFpbiAoY2FsbGVkIFRoZSBKYWNvYml0ZSBpbiB0aGUgbXVnZ2xlIHdvcmxkKSB0aHJvdWdoIDg0IGdsb3Jpb3VzIG1pbGVzICgxMzVrbSkgb2YgU2NvdHRpc2ggY291bnRyeXNpZGUuPC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiSGFycnkgUG90dGVyJ3MgSG9nd2FydHMgRXhwcmVzcyIsImJvZHkiOiI8cD5UaGUgc3R1bm5pbmcgMTAwLWZvb3QgKDMwbSkswqAyMS1hcmNoIHZpYWR1Y3QgaW4gdGhlIEhhcnJ5IFBvdHRlciBmaWxtcyBpc27igJl0IGNsZXZlciBDR0kgdHJpY2tlcnkgZWl0aGVyLiBJdCB3b3VsZCBiZSBoYXJkIHRvIGltYWdpbmUgYSBtb3JlIGJlYXV0aWZ1bCBuYXR1cmFsIHNldHRpbmcgZm9yIHRoZSBzd2VlcGluZyBHbGVuZmlubmFuIFZpYWR1Y3QgdGhhbiBMb2NoIFNoaWVsIGFuZCB0aGUgc3Vycm91bmRpbmcgZ3JlZW4gcm9sbGluZyBoaWxscyBvZiB0aGUgU2NvdHRpc2ggSGlnaGxhbmRzLjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTg2MCwiaGVpZ2h0IjoxMjAwLCJxdWFsaXR5Ijo3NCwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjFpRGhRaS5pbWciLCJhdHRyaWJ1dGlvbiI6IkNhdHVuY2lhL1NodXR0ZXJzdG9jayIsInRpdGxlIjoiSGFycnkgUG90dGVyJ3MgSG9nd2FydHMgRXhwcmVzcyIsImNhcHRpb24iOiI8cD5UaGUgc3R1bm5pbmcgMTAwLWZvb3QgKDMwbSkswqAyMS1hcmNoIHZpYWR1Y3QgaW4gdGhlIEhhcnJ5IFBvdHRlciBmaWxtcyBpc27igJl0IGNsZXZlciBDR0kgdHJpY2tlcnkgZWl0aGVyLiBJdCB3b3VsZCBiZSBoYXJkIHRvIGltYWdpbmUgYSBtb3JlIGJlYXV0aWZ1bCBuYXR1cmFsIHNldHRpbmcgZm9yIHRoZSBzd2VlcGluZyBHbGVuZmlubmFuIFZpYWR1Y3QgdGhhbiBMb2NoIFNoaWVsIGFuZCB0aGUgc3Vycm91bmRpbmcgZ3JlZW4gcm9sbGluZyBoaWxscyBvZiB0aGUgU2NvdHRpc2ggSGlnaGxhbmRzLjwvcD4iLCJzb3VyY2UiOiJtc24ifX1dLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjFUMDg6MDA6MDBaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmE0ZDUyNzdlMGY2ZmRhMDJmYzUzMzNmMjUzZWE4NjQ3JnBpZD1XZHAiLCJ0aXRsZSI6IkZhY3Qgb3IgZmljdGlvbj8iLCJjYXB0aW9uIjoiPHA+RXZlciB3aXNoZWQgeW91IGNvdWxkIHZpc2l0IHRoZSBsb2NhdGlvbnMgb2YgeW91ciBmYXZvdXJpdGXCoGFuY2llbnQgbXl0aHMgYW5kIGxlZ2VuZHMsIG9yIGV2ZW4gbW9kZXJuIHdvcmtzIG9mIGZpY3Rpb24/wqBGcm9tIHRoZSBteXN0ZXJ5IG9mIHRoZSBsb3N0IGNpdHkgb2YgQXRsYW50aXMgYW5kIHRoZSBlbmlnbWEgb2YgdGhlIEJlcm11ZGEgVHJpYW5nbGUgdG8gdGhlIHdlbGwtbG92ZWQgdGFsZXMgb2YgbGVnZW5kYXJ5IHdhcnJpb3IgS2luZyBBcnRodXIgYW5kIGZhaXJ5LXRhbGUgaGVyb2luZSBTbGVlcGluZyBCZWF1dHksIHdlJ3ZlIGZvdW5kIHRoZSBwbGFjZXMgc3RlZXBlZCBpbiBsZWdlbmQgdGhhdCB5b3UgY2FuIGFjdHVhbGx5IHZpc2l0LiBUaGV5wqBhcmUgYWxsIHN1cmUgdG8gY2FwdHVyZSB5b3VyIGltYWdpbmF0aW9uLjwvcD4gIDxwPjxzdHJvbmc+UmVhZHkgdG8gZXhwbG9yZT8gQ2xpY2sgdGhyb3VnaCB0aGUgZ2FsbGVyeSB0byBkaXNjb3ZlcsKgc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IGZhbnRhc3RpY2FswqBwbGFjZXMgeW91IGNhbiBzZWUgaW4gcmVhbCBsaWZlLi4uPC9zdHJvbmc+PC9wPiIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMzY0OTVEIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNDNkQ4RTUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM2NDk1RCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjQzZEOEU1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkJCeHhRZyIsIm5hbWUiOiJMb3ZlIEV4cGxvcmluZyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCQkZWMGYuaW1nIiwicHJvZmlsZUlkIjoidmlkLXQwMzJuYnhyaDJudXB0d2ppbnBoY3JtNjR3aTJ0Y2tmOGJzYTY2YTR4dnI3dDZucHRmaHMifSwiY2F0ZWdvcnkiOiJsaWZlc3R5bGUiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MTcsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxNiwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MSwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2FkN2RlOGYwLTUzZWQtNDFlMC1iYjg2LTg2ZmIwYmI4MWE0ZCIsImZlZWROYW1lIjoiTGlmZXN0eWxlIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6NywiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiY0ZfSTJpIiwicmFuayI6MH1dLCJyaSI6IjIwOSIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkFBMWFGdlFhIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IlRoZXNlIEFyZSB0aGUgMTEgUmFyZXN0IENhdCBDb2xvcnMgYW5kIFBhdHRlcm5zIiwiYWJzdHJhY3QiOiJUaGUgY29vbGVzdCByYXJlIGNhdCBjb2xvcnMgQ2F0cyBhcmUgaW50ZWxsaWdlbnQgYW5kIHNwdW5reSBjcmVhdHVyZXMsIGZvcmV2ZXIga2VlcGluZyBvd25lcnMgb24gdGhlaXIgdG9lcyB3aXRoIHRoZWlyIHNoZW5hbmlnYW5zLiBBbG9uZyB3aXRoIGFuIGFycmF5IG9mIHF1aXJreSBjYXQgYmVoYXZpb3JzIGFuZCBjYXRsaWtlIGNoYXJtcywga2l0dGllcyBhbHNvIHNwb3J0IGEgdmFyaWV0eSBvZiBmdXIgY29sb3JzIGFuZCBwYXR0ZXJucy4gU29tZSBvZiB0aGVtIGFyZSBxdWl0ZSBjb21tb24sIHdoaWxlIG90aGVycyBhcmUgY29uc2lkZXJlZCByYXJlIGNhdCBjb2xvcnMuIFwiQ2F0cyBoYXZlIGEgY29tYmluYXQuLi4iLCJyZWFkVGltZU1pbiI6NywidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL290aGVyL3RoZXNlLWFyZS10aGUtMTEtcmFyZXN0LWNhdC1jb2xvcnMtYW5kLXBhdHRlcm5zL2FyLUFBMWFGdlFhIiwibG9jYWxlIjoiZW4tdXMiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyMy0wNS0wMlQxMjoxOTowM1oiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6NzAwLCJoZWlnaHQiOjQ2NiwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmNkMmQxZTk2N2Y1NmMyYmVlOThjMjBkYTY0ZDhlMjY4JnBpZD1XZHAiLCJ0aXRsZSI6IkNsb3NlIFVwIE9mIENhdHMgSW4gQSBSb3cgRWF0aW5nIiwiY2FwdGlvbiI6IkNsb3NlLVVwIE9mIENhdHMgSW4gQSBSb3cgRWF0aW5nIiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM1QTRBMzUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0RBREFENCIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNUE0QTM1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEQURBRDQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQWdnRml6IiwibmFtZSI6IlJlYWRlcidzIERpZ2VzdCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBZ2kwblouaW1nIiwicHJvZmlsZUlkIjoidmlkLXdpYjVrNmlnNnhyOWlxcW0ydDcwYnczZmhkdG5tZW54ODdpNXNuazd5aDM3dXRnZjludHMiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6ODcsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnTWV1In0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjg3LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ01ldS1kYXJrIn19LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MzEyLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MjQxLCJ0eXBlIjoidXB2b3RlIn0seyJ0b3RhbENvdW50Ijo3MSwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2Q5YWE2MWJmLWNjYWMtNDAwMS1iNDU5LTc1ZjBkY2ViNDlkMSIsImZlZWROYW1lIjoiVmlyYWwgVmlkZW8iLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjo4LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6IkxpZmVzdHlsZSIsInRpbWUiOiIifX1dLCJyaSI6IjI0MCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIGV4cGxhaW5zIHRoZSAqKipyYXJlc3QgY2F0IGNvbG9ycyBhbmQgcGF0dGVybnMqKiogYW5kIHRoZWlyIGdlbmV0aWMgYW5kIHBoeXNpY2FsIGNoYXJhY3RlcmlzdGljcy4gSXQgY292ZXJzOlxuXG4tICoqQ3JlYW0qKiwgYSBidWZmIGh1ZSBkZXJpdmVkIGZyb20gcmVkIG9yIGdpbmdlciBjb2xvcmluZyB3aXRoIHllbGxvdyBwaWdtZW50IGdyYW51bGVzLCBzZWVuIGluIFBlcnNpYW4sIFJhZ2RvbGwsIE1haW5lIENvb24sIGFuZCBvdGhlciBicmVlZHMuXG4tICoqTGlsYWMqKiwgYSBwYWxlIGJyb3duIGNvbG9yIHdpdGggYSBzbGlnaHQgcHVycGxlIHRpbnQsIGZvdW5kIGluIFBlcnNpYW4sIFNpYW1lc2UsIEJhbGluZXNlLCBhbmQgT3JpZW50YWwgU2hvcnRoYWlyIGJyZWVkcy5cbi0gKipGYXduKiosIGEgZGlsdXRlZCBjb2F0IGNvbG9yIGNhdXNlZCBieSB0aGUgY2lubmFtb24gZ2VuZSwgc2VlbiBpbiBBYnlzc2luaWFuLCBPcmllbnRhbCBTaG9ydGhhaXIsIGFuZCBCcml0aXNoIFNob3J0aGFpciBicmVlZHMuXG4tICoqQ29sb3Jwb2ludCoqLCBhIHBhdHRlcm4gb2YgbGlnaHRlciBib2R5IGNvbG9yIGFuZCBkYXJrZXIgbWFya2luZ3MgYXJvdW5kIGVhcnMsIHBhd3MsIGFuZCBub3NlLCBzZWVuIGluIFNpYW1lc2UsIEhpbWFsYXlhbiwgQmlybWFuLCBSYWdkb2xsLCBhbmQgb3RoZXIgYnJlZWRzLlxuLSAqKlRvcnRvaXNlc2hlbGwqKiwgYSBtaXh0dXJlIG9mIG9yYW5nZSBhbmQgYmxhY2sgZnVyLCBhbG1vc3QgYWx3YXlzIGZlbWFsZSwgc2VlbiBpbiBNYWluZSBDb29uLCBSYWdkb2xsLCBQZXJzaWFuLCBhbmQgb3RoZXIgYnJlZWRzLlxuLSAqKkNob2NvbGF0ZSoqLCBhIGNvbWJpbmF0aW9uIG9mIGJyb3duIGFuZCBibGFjaywgc29tZXRpbWVzIHJlc2VtYmxpbmcgYSBMYWJyYWRvciByZXRyaWV2ZXIsIHNlZW4gaW4gSGF2YW5hIEJyb3duLCBCdXJtZXNlLCBCYWxpbmVzZSwgU2lhbWVzZSwgYW5kIG90aGVyIGJyZWVkcy5cbi0gKipCbHVlKiosIGEgcmFyZSBjb2xvciBpbiByZWFsIGxpZmUgYW5kIGluIGNhdCBwaWN0dXJlcywgdGhvdWdodCB0byBvcmlnaW5hdGUgaW4gUnVzc2lhLCBzZWVuIGluIFJ1c3NpYW4gQmx1ZSwgS29yYXQsIENoYXJ0cmV1eCwgTmViZWx1bmcsIGFuZCBvdGhlciBicmVlZHMuXG4tICoqQmxhY2sgU21va2UqKiwgYSBkYXJrIHNtb2tleSBodWUgd2l0aCBibGFjaywgZ3JheSwgYW5kIHdoaXRlIGZ1ciwgb2Z0ZW4gd2l0aCBkaWZmZXJlbnQtY29sb3JlZCBwYXdzLCBzZWVuIGluIE1haW5lIENvb24sIE5vcndlZ2lhbiBGb3Jlc3QgQ2F0LCBUdXJraXNoIEFuZ29yYSwgU2liZXJpYW4sIGFuZCBvdGhlciBicmVlZHMuXG4tICoqQ2hpbmNoaWxsYSoqLCBhIGZhZGVkIGxvb2sgYXQgdGhlIGJhc2Ugb2YgdGhlIGhhaXIgd2l0aCBwcmltYXJ5IGNvbG9ycyBhdCB0aGUgdGlwcywgc2VlbiBpbiBQZXJzaWFuIGFuZCBNYWluZSBDb29uIGJyZWVkcy5cbi0gKipSb3NldHRlKiosIGEgZnVzaW9uIG9mIGJyb3duLCBibGFjaywgYW5kIHdoaXRlIHNwb3RzLCBzZWVuIGluIEJlbmdhbCwgU2VyZW5nZXRpLCBTYXZhbm5haCwgT2NpY2F0LCBhbmQgb3RoZXIgYnJlZWRzLlxuLSAqKkFsYmlubyoqLCBhIGNvbXBsZXRlIGFic2VuY2Ugb2YgY29sb3JpbmcsIGFmZmVjdGluZyBmdXIsIGV5ZXMsIGFuZCBza2luLCBzZWVuIGluIGFueSBjYXQgYnJlZWQuXG4iLCJpbmRleCI6MH1dfSx7InR5cGUiOiJuYXRpdmVhZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MH0seyJpZCI6IkJCMWlOb2lhIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkZyZWUgV2ktRmkgYXQgNTAwIHB1YmxpYyBwbGFjZXMgaW4gVGFtaWwgQ2hlbm5haSwgQ00gU3RhbGluIGxhdW5jaGVzIHNjaGVtZSIsImFic3RyYWN0IjoiQ0hFTk5BSTogQ2hpZWYgTWluaXN0ZXIgTSBLIFN0YWxpbiBvbiBGcmlkYXkgbGF1bmNoZWQgdGhlIGZpcnN0IHBoYXNlIG9mIHRoZSBzdGF0ZSBnb3Zlcm5tZW504oCZcyBmcmVlIFdpLUZpIGhvdHNwb3RzIGluIHB1YmxpYyBzcGFjZXMgc2NoZW1lIGluIENoZW5uYWksIGFuZCBzYWlkIGl0IGhpcyBkcmVhbSB0byBzZWUgVGFtaWwgTmFkdSBiZWNvbWUgYSB0cmlsbGlvbi1kb2xsYXIgZWNvbm9teSBhbmQgaHVtYW4gcmVzb3VyY2VzIGNhcGl0YWwgb2YgdGhlIHdvcmxkLiBUaGUgRE1LIGdvdmVybm1lbnQgaGFkIGFubm91bmNlZCBpbiB0aGUgYnVkZ2V0IHRoYXQgZnJlZSBXaS1GaSB3aWxsIGJlIHJvbGxlZCBvdXQgYS4uLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2VudGVydGFpbm1lbnQvc291dGhjaW5lbWEvZnJlZS13aS1maS1hdC01MDAtcHVibGljLXBsYWNlcy1pbi10YW1pbC1jaGVubmFpLWNtLXN0YWxpbi1sYXVuY2hlcy1zY2hlbWUvYXItQkIxaU5vaWEiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDAyOjE5OjE3WiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoyODAsImhlaWdodCI6MjUwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuZGNhNGFjNGQzMmFhODU4NWFlMjIwMWZjOWJlYTJlZTMmcGlkPVdkcCIsInRpdGxlIjoiRnJlZSBXaS1GaSBhdCA1MDAgcHVibGljIHBsYWNlcyBpbiBUYW1pbCBDaGVubmFpLCBDTSBTdGFsaW4gbGF1bmNoZXMgc2NoZW1lIiwiZm9jYWxSZWdpb24iOnsieDEiOjkxLCJ4MiI6MjAzLCJ5MSI6OTgsInkyIjoyMTB9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM1Mzc0MiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjQ0NEQ0VDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzNTM3NDIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0NDRENFQyIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBMThSUnVXIiwibmFtZSI6IlRoZSBOZXcgSW5kaWFuIEV4cHJlc3MiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTE4UklFby5pbWciLCJwcm9maWxlSWQiOiJ2aWQtM3l2c2kzaXR1a2kyYTJtbWtjZHN5Njh5NGVjdndzeWJoM2FwOG5qMjAzbWdtYzZhZWh1cyJ9LCJjYXRlZ29yeSI6ImVudGVydGFpbm1lbnQiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfYjQ1OTIxNzItMjdiOC00OTU1LWExNjktMDJhOGExMzRiNTJlIiwiZmVlZE5hbWUiOiJFbnRlcnRhaW5tZW50IiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6OSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiZXhwbG9yZSIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IiIsIm5hbWUiOiJOZXdzIiwidGltZSI6IiJ9fV0sInJpIjoiMjA0IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24ifSx7ImlkIjoiQkIxaUxiZ2siLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiUHJvdWQgbW9tIHNoYXJlcyBzdG9yeSBvZiA0dGgtZ3JhZGUgZGF1Z2h0ZXIgaGVscGluZyBzcGVjaWFsbHktYWJsZWQga2lkLCBBbmFuZCBNYWhpbmRyYSByZWFjdHMiLCJhYnN0cmFjdCI6IuKAnFdvdy4gSW5jcmVkaWJsZSBzdG9yeSzigJ0gd3JvdGUgYW4gWCB1c2VyIHdoaWxlIHJlYWN0aW5nIHRvIEFuYW5kIE1haGluZHJhJ3MgdHdlZXQgYWJvdXQgYSA0dGggZ3JhZGVyIGhlbHBpbmcgYSBzcGVjaWFsbHktYWJsZWQga2lkLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2xpZmVzdHlsZS93aGF0cy1ob3QvcHJvdWQtbW9tLXNoYXJlcy1zdG9yeS1vZi00dGgtZ3JhZGUtZGF1Z2h0ZXItaGVscGluZy1zcGVjaWFsbHktYWJsZWQta2lkLWFuYW5kLW1haGluZHJhLXJlYWN0cy9hci1CQjFpTGJnayIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMTA6MjI6NTdaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjU0OSwiaGVpZ2h0IjozMDksInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy41MGM2NDk2NjU4NTg1NWZlM2ZhMDcyNDFkODk3Y2IyMyZwaWQ9V2RwIiwidGl0bGUiOiJBbmFuZCBNYWhpbmRyYSdzIHR3ZWV0IG9uIGEgcHJvdWQgbW9tIHNoYXJpbmcgYWJvdXQgaGVyIGRhdWdodGVyIGhlbHBpbmcgYSBzcGVjaWFsbHktYWJsZWQga2lkIHdvbiBwZW9wbGUgb3Zlci4iLCJjYXB0aW9uIjoiQW5hbmQgTWFoaW5kcmEncyB0d2VldCBvbiBhIHByb3VkIG1vbSBzaGFyaW5nIGFib3V0IGhlciBkYXVnaHRlciBoZWxwaW5nIGEgc3BlY2lhbGx5LWFibGVkIGtpZCB3b24gcGVvcGxlIG92ZXIuIiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyNzI3MkYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0RGRDdDOSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjcyNzJGIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNERkQ3QzkiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQUIzclgiLCJuYW1lIjoiSGluZHVzdGFuIFRpbWVzIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxOEx3YlYuaW1nIiwicHJvZmlsZUlkIjoidmlkLXZmaHZlZHZqdXhycXFlNTcweGp1eTU2N2l4MHM1NWprcXF2Y2l0aDAzbThuMzJ5OGt2cGEifSwiY2F0ZWdvcnkiOiJsaWZlc3R5bGUiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MTIsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxMSwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MSwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2FkNzIyMDYyLWM1N2YtNDlhYi05MTkyLWRhZWFkNzNiNzE3ZCIsImZlZWROYW1lIjoiQm9sbHl3b29kIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MTAsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImNGX1UydSIsInJhbmsiOjB9XSwicmkiOiIyMjAiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiIsImhpZ2hsaWdodHMiOlt7InRleHQiOiIqKkFuYW5kIE1haGluZHJhIHByYWlzZXMgYSBtb3RoZXIncyBzdG9yeSBvbiBYKipcblxuLSBUaGUgc3RvcnkgaXMgYWJvdXQgYSA0dGgtZ3JhZGUgZ2lybCB3aG8gdm9sdW50ZWVyZWQgdG8gaGVscCBhIHNwZWNpYWxseS1hYmxlZCBjaGlsZCBhcyBhIHJlYWRlci13cml0ZXIgZm9yIGhlciBleGFtLlxuLSBUaGUgZ2lybCdzIG1vdGhlciwgVmFyc2hhLCBzaGFyZWQgdGhlIHN0b3J5IG9uIFggaW4gYSB0aHJlYWQgYW5kIHVyZ2VkIG90aGVyIHBhcmVudHMgdG8gZW5jb3VyYWdlIHRoZWlyIGtpZHMgdG8gaGVscCBzcGVjaWFsIGtpZHMuXG4tIEFuYW5kIE1haGluZHJhIHJlLXNoYXJlZCB0aGUgdGhyZWFkIGFuZCB0aGFua2VkIFZhcnNoYSBmb3IgbWFraW5nIHRoZSB3b3JsZCBhIGJldHRlciBwbGFjZSB3aXRoIGhlciBzdG9yeS5cbiIsImluZGV4IjowfV19LHsiaWQiOiJCQjFpTFpLcyIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJKYXNwcml0IEJ1bXJhaCdzICdCZXN0IEluIFRoZSBXb3JsZCcgUG9zdCBGb3IgV2lmZSBTYW5qYW5hIEdhbmVzaGFuIFdpbnMgSGVhcnRzIiwiYWJzdHJhY3QiOiJKYXNwcml0IEJ1bXJhaCB0b29rIHRvIEluc3RhZ3JhbSBhbmQgcG9zdGVkIGEgc3BlY2lhbCBwb3N0IGZvciBoaXMgd2lmZSwgU2FuamFuYSBHYW5lc2hhbi4gU2FuamFuYSByZXR1cm5lZCB0byB3b3JrIGR1cmluZyB0aGUgZmlyc3QgbWF0Y2ggb2YgdGhlIFdvbWVuJ3MgUHJlbWllciBMZWFndWUgMjAyNCBmb3IgdGhlIGhvc3QgYnJvYWRjYXN0ZXIuIEJ1bXJhaCBhbmQgU2FuamFuYSB3ZXJlIGJsZXNzZWQgd2l0aCB0aGVpciBmaXJzdCBjaGlsZCBpbiBTZXB0ZW1iZXIgMjAyMyBhbmQgbmFtZWQgdGhlaXIgc29uIEFuZ2FkLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL3Nwb3J0cy9jcmlja2V0L2phc3ByaXQtYnVtcmFoLXMtYmVzdC1pbi10aGUtd29ybGQtcG9zdC1mb3Itd2lmZS1zYW5qYW5hLWdhbmVzaGFuLXdpbnMtaGVhcnRzL2FyLUJCMWlMWktzIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QxNTowODoyNloiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTI4MCwiaGVpZ2h0Ijo3MjAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5hZjZlNTZlOWM3N2ZkNTMyZWRiZmI1ZjA0ZGE3Yzk3NCZwaWQ9V2RwIiwidGl0bGUiOiJqYXNwcml0IGJ1bXJhaCdzICdiZXN0IGluIHRoZSB3b3JsZCcgcG9zdCBmb3Igd2lmZSBzYW5qYW5hIGdhbmVzaGFuIHdpbnMgaGVhcnRzIiwiY2FwdGlvbiI6Imphc3ByaXQgYnVtcmFoJ3MgJ2Jlc3QgaW4gdGhlIHdvcmxkJyBwb3N0IGZvciB3aWZlIHNhbmphbmEgZ2FuZXNoYW4gd2lucyBoZWFydHMiLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6MzYwLCJ4MiI6NjI5LCJ5MSI6ODQsInkyIjoyNTR9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM2NEQ0MyIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDdENkQ3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzNjRENDMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q3RDZENyIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBMTBiSHMxIiwibmFtZSI6IlRpbWVzIE5vdyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMTBiRnBDLmltZyIsInByb2ZpbGVJZCI6InZpZC1qc2hrOXB1NXQ5NmE2OGg4d2RyNmUyNWZnMGQzZnF2MmRkcnZxcjc1aGJxdDlqdjNzODBhIn0sImNhdGVnb3J5Ijoic3BvcnRzIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjMsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoyLCJ0eXBlIjoidXB2b3RlIn0seyJ0b3RhbENvdW50IjoxLCJ0eXBlIjoiZG93bnZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfNGViNGE4OTAtMmY4Mi00MjViLTk0NTQtNDEwMTZlMTBmMjVjIiwiZmVlZE5hbWUiOiJJUEwiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoxMSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiZm9sbG93VG9waWMiLCJyYW5rIjowLCJmb2xsb3ciOnsiaWQiOiJZXzY1MGUxNTM5LWZiNTctNDdkNy04NTEwLTBiZmM1OWZjZTk2NCIsIm5hbWUiOiJDcmlja2V0IiwidGltZSI6IjIwMjQtMDItMjJUMTQ6MDg6NTJaIn19XSwicmkiOiIyMzAiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiIsImhpZ2hsaWdodHMiOlt7InRleHQiOiIqKipKYXNwcml0IEJ1bXJhaCoqKiwgYSBzdGFyIEluZGlhbiBwYWNlciwgcG9zdGVkIGEgaGVhcnR3YXJtaW5nIG1lc3NhZ2UgZm9yIGhpcyB3aWZlICoqKlNhbmphbmEgR2FuZXNoYW4qKiogb24gSW5zdGFncmFtIGFzIHNoZSByZXN1bWVkIGFuY2hvcmluZyBkdXRpZXMgZm9yIHRoZSBob3N0IGJyb2FkY2FzdGVyIGR1cmluZyB0aGUgKioyMDI0IFdvbWVuJ3MgUHJlbWllciBMZWFndWUgKElQTCkqKi4gSGUgY2FsbGVkIGhlciAqKlwidGhlIGJlc3QgaW4gdGhlIHdvcmxkXCIqKiBhbmQgcHJhaXNlZCBoZXIgcmV0dXJuIHRvIHdvcmsgYWZ0ZXIgZ2l2aW5nIGJpcnRoIHRvIHRoZWlyIHNvbiAqKkFuZ2FkKiogaW4gU2VwdGVtYmVyLiBUaGUgMjAyNCBXUEwgc2Vhc29uIHN0YXJ0ZWQgb24gRnJpZGF5IHdpdGggYSBjbGFzaCBiZXR3ZWVuICoqRGVsaGkgQ2FwaXRhbHMgYW5kIE11bWJhaSBJbmRpYW5zKiogaW4gYSByZXBlYXQgb2YgbGFzdCB5ZWFyJ3MgZmluYWwuIEJ1bXJhaCBpcyAqKm5vdCBwYXJ0IG9mIEluZGlhJ3MgcGxheWluZyBYSSoqIGZvciB0aGUgb25nb2luZyBUZXN0IG1hdGNoIGFnYWluc3QgRW5nbGFuZCBpbiBSYW5jaGkgZHVlIHRvICoqd29ya2xvYWQgbWFuYWdlbWVudCBjb25jZXJucyoqLiBIZSBpcyB0aGUgKipoaWdoZXN0IHdpY2tldC10YWtlcioqIGluIHRoZSBzZXJpZXMgd2l0aCAqKjE3IHdpY2tldHMqKiB0byBoaXMgbmFtZS4gIiwiaW5kZXgiOjB9XX0seyJ0eXBlIjoibmF0aXZlYWQiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjB9LHsiaWQiOiJCQjFoZjZaTCIsInR5cGUiOiJzbGlkZXNob3ciLCJ0aXRsZSI6Ik11c3Qtc2VlIGhpZGRlbiBnZW1zIGFjcm9zcyB0aGUgVVMiLCJhYnN0cmFjdCI6IkFyZSB5b3UgaW4gc2VhcmNoIG9mIGEgcGVhY2VmdWwgZ2V0YXdheSBhd2F5IGZyb20gdGhlIGNyb3dkcywgb3IgcGVyaGFwcyBzb21ldGhpbmcgYSBsaXR0bGUgZGlmZmVyZW50PyBUaGUgbW9zdCBvYnZpb3VzIHRvdXJpc3QgZGVzdGluYXRpb25zIGluIHRoZSBVbml0ZWQgU3RhdGVzIGluY2x1ZGUgTG9zIEFuZ2VsZXMsIE5ldyBZb3JrIENpdHksIGFuZCB0aGUgR3JhbmQgQ2FueW9uLCBidXQgaWYgeW91IGxvb2sgYSBsaXR0bGUgaGFyZGVyLCB0aGVyZSdzIHNvIG11Y2ggbW9yZSB0byBiZSBkaXNjb3ZlcmVkLiBBbHRob3VnaCBub3QgYXMgd2lkZWx5IHJlY29nbml6ZWQsIHRoZSBkZXN0aW5hdGlvbnMgZmVhdHVyZWQgaW4gdGhpcyBnYWxsZXJ5IGFyZSBlcXVhbGx5IGF3ZS1pbnNwaXJpbmcuIENsaWNrIHRocm91Z2ggYW5kIHVuY292ZXIgdGhlc2UgbmF0dXJhbCBhbmQgbWFuLW1hZGUgdHJlYXN1cmVzIGp1c3Qgd2FpdGluZyB0byBiZSBleHBsb3JlZC4iLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL3RyYXZlbC9uZXdzL211c3Qtc2VlLWhpZGRlbi1nZW1zLWFjcm9zcy10aGUtdXMvc3MtQkIxaGY2WkwiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwic2xpZGVzIjpbeyJ0aXRsZSI6Ikh1bnRpbmcgZm9yIHRoZSBzZWNyZXQgdHJhdmVsIGRlc3RpbmF0aW9ucyBpbiB0aGUgVVMiLCJib2R5IjoiPHA+QXJlIHlvdSBpbiBzZWFyY2ggb2YgYSBwZWFjZWZ1bCBnZXRhd2F5IGF3YXkgZnJvbSB0aGUgY3Jvd2RzLCBvciBwZXJoYXBzIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQ/IFRoZSBtb3N0IG9idmlvdXMgdG91cmlzdCBkZXN0aW5hdGlvbnMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW5jbHVkZSBMb3MgQW5nZWxlcywgTmV3IFlvcmsgQ2l0eSwgYW5kIHRoZSA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS90cmF2ZWwvNDUwODg4L3RoZS1ncmVhdGVzdC1jYW55b25zLWFuZC1nb3JnZXMtb24tZWFydGhcIiByZWw9XCJub29wZW5lclwiPkdyYW5kIENhbnlvbjwvYT4sIGJ1dCBpZiB5b3UgbG9vayBhIGxpdHRsZSBoYXJkZXIsIHRoZXJlJ3Mgc28gbXVjaCBtb3JlIHRvIGJlIGRpc2NvdmVyZWQuwqA8L3A+IDxwPkFsdGhvdWdoIG5vdCBhcyB3aWRlbHkgcmVjb2duaXplZCwgdGhlIGRlc3RpbmF0aW9ucyBmZWF0dXJlZCBpbiB0aGlzIGdhbGxlcnkgYXJlIGVxdWFsbHkgYXdlLWluc3BpcmluZy7CoENsaWNrIHRocm91Z2ggYW5kIHVuY292ZXIgdGhlc2UgbmF0dXJhbCBhbmQgbWFuLW1hZGUgdHJlYXN1cmVzIGp1c3Qgd2FpdGluZyB0byBiZSBleHBsb3JlZC48L3A+PHA+WW91IG1heSBhbHNvIGxpa2U6PGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vbi8xOTk0NDk/dXRtX3NvdXJjZT1tc24uY29tJnV0bV9tZWRpdW09ZGlzcGxheSZ1dG1fY2FtcGFpZ249cmVmZXJyYWxfZGVzY3JpcHRpb24mdXRtX2NvbnRlbnQ9NjU0ODYwZW4taW5cIj4gRmluZCBvdXQgdGhlIHJpY2hlc3QgYW5kIHBvb3Jlc3Qgc3VidXJicyBvZiBBdXN0cmFsaWE8L2E+PC9wPiIsImltYWdlIjp7IndpZHRoIjoxOTIwLCJoZWlnaHQiOjk5NiwicXVhbGl0eSI6ODksInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxaGY2U0IuaW1nIiwiYXR0cmlidXRpb24iOiJTaHV0dGVyc3RvY2siLCJ0aXRsZSI6Ikh1bnRpbmcgZm9yIHRoZSBzZWNyZXQgdHJhdmVsIGRlc3RpbmF0aW9ucyBpbiB0aGUgVVMiLCJjYXB0aW9uIjoiPHA+QXJlIHlvdSBpbiBzZWFyY2ggb2YgYSBwZWFjZWZ1bCBnZXRhd2F5IGF3YXkgZnJvbSB0aGUgY3Jvd2RzLCBvciBwZXJoYXBzIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQ/IFRoZSBtb3N0IG9idmlvdXMgdG91cmlzdCBkZXN0aW5hdGlvbnMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW5jbHVkZSBMb3MgQW5nZWxlcywgTmV3IFlvcmsgQ2l0eSwgYW5kIHRoZSA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS90cmF2ZWwvNDUwODg4L3RoZS1ncmVhdGVzdC1jYW55b25zLWFuZC1nb3JnZXMtb24tZWFydGhcIiByZWw9XCJub29wZW5lclwiPkdyYW5kIENhbnlvbjwvYT4sIGJ1dCBpZiB5b3UgbG9vayBhIGxpdHRsZSBoYXJkZXIsIHRoZXJlJ3Mgc28gbXVjaCBtb3JlIHRvIGJlIGRpc2NvdmVyZWQuwqA8L3A+IDxwPkFsdGhvdWdoIG5vdCBhcyB3aWRlbHkgcmVjb2duaXplZCwgdGhlIGRlc3RpbmF0aW9ucyBmZWF0dXJlZCBpbiB0aGlzIGdhbGxlcnkgYXJlIGVxdWFsbHkgYXdlLWluc3BpcmluZy7CoENsaWNrIHRocm91Z2ggYW5kIHVuY292ZXIgdGhlc2UgbmF0dXJhbCBhbmQgbWFuLW1hZGUgdHJlYXN1cmVzIGp1c3Qgd2FpdGluZyB0byBiZSBleHBsb3JlZC48L3A+PHA+WW91IG1heSBhbHNvIGxpa2U6PGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vbi8xOTk0NDk/dXRtX3NvdXJjZT1tc24uY29tJnV0bV9tZWRpdW09ZGlzcGxheSZ1dG1fY2FtcGFpZ249cmVmZXJyYWxfZGVzY3JpcHRpb24mdXRtX2NvbnRlbnQ9NjU0ODYwZW4taW5cIj4gRmluZCBvdXQgdGhlIHJpY2hlc3QgYW5kIHBvb3Jlc3Qgc3VidXJicyBvZiBBdXN0cmFsaWE8L2E+PC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiU21pdGggUm9jayBTdGF0ZSBQYXJrLCBPcmVnb24iLCJib2R5IjoiPHA+VGhlIGNsaWZmcyBvZiB0dWZmIGFuZCBiYXNhbHQsIHNpdHVhdGVkIGNsb3NlIHRvIFJlZG1vbmQgYW5kIFRlcnJlYm9ubmUsIHByb3ZpZGUgZXhjZWxsZW50IG9wcG9ydHVuaXRpZXMgZm9yIHJvY2sgY2xpbWJpbmcgYXQgdmFyaW91cyBkaWZmaWN1bHR5IGxldmVscy48L3A+PHA+PGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vY29tbXVuaXR5L2NoYW5uZWwvdmlkLTd4eDhtbnVjdTU1eXc2M3dlOXZhMmd3cjd1aWhieHdjNjhmeHFwMjV4NnRnNGZ0aWJwcmE/Y3ZpZD05NDYzMTU0MWJjMGY0Zjg5YmZkNTkxNThkNjk2YWQ3ZVwiPkZvbGxvdyB1cyBhbmQgYWNjZXNzIGdyZWF0IGV4Y2x1c2l2ZSBjb250ZW50IGV2ZXJ5IGRheTwvYT48L3A+IiwiaW1hZ2UiOnsid2lkdGgiOjE5MjAsImhlaWdodCI6MTI4MiwicXVhbGl0eSI6ODksInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxaGYyakguaW1nIiwiYXR0cmlidXRpb24iOiJTaHV0dGVyc3RvY2siLCJ0aXRsZSI6IlNtaXRoIFJvY2sgU3RhdGUgUGFyaywgT3JlZ29uIiwiY2FwdGlvbiI6IjxwPlRoZSBjbGlmZnMgb2YgdHVmZiBhbmQgYmFzYWx0LCBzaXR1YXRlZCBjbG9zZSB0byBSZWRtb25kIGFuZCBUZXJyZWJvbm5lLCBwcm92aWRlIGV4Y2VsbGVudCBvcHBvcnR1bml0aWVzIGZvciByb2NrIGNsaW1iaW5nIGF0IHZhcmlvdXMgZGlmZmljdWx0eSBsZXZlbHMuPC9wPjxwPjxhIGhyZWY9XCJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2NvbW11bml0eS9jaGFubmVsL3ZpZC03eHg4bW51Y3U1NXl3NjN3ZTl2YTJnd3I3dWloYnh3YzY4ZnhxcDI1eDZ0ZzRmdGlicHJhP2N2aWQ9OTQ2MzE1NDFiYzBmNGY4OWJmZDU5MTU4ZDY5NmFkN2VcIj5Gb2xsb3cgdXMgYW5kIGFjY2VzcyBncmVhdCBleGNsdXNpdmUgY29udGVudCBldmVyeSBkYXk8L2E+PC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiVGl0YW4gTWlzc2lsZSBNdXNldW0sIEFyaXpvbmEiLCJib2R5IjoiPHA+RGVsdmUgdW5kZXJncm91bmQgaW4gQXJpem9uYSBhbmQgZXhwbG9yZSB0aGlzIGZvcm1lciBzZWNyZXQgaW50ZXJjb250aW5lbnRhbCBiYWxsaXN0aWMgbWlzc2lsZSBzaXRlITwvcD48cD5Zb3UgbWF5IGFsc28gbGlrZTo8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS9uLzI0MzczNz91dG1fc291cmNlPW1zbi5jb20mdXRtX21lZGl1bT1kaXNwbGF5JnV0bV9jYW1wYWlnbj1yZWZlcnJhbF9kZXNjcmlwdGlvbiZ1dG1fY29udGVudD02NTQ4NjBlbi1pblwiPiBUaGlzIGlzIHdoZXJlIHlvdSBzaG91bGQgbGl2ZSBpbiB0aGUgVVNBIGJhc2VkIG9uIHlvdXIgcGVyc29uYWxpdHk8L2E+PC9wPiIsImltYWdlIjp7IndpZHRoIjoxOTIwLCJoZWlnaHQiOjEyODAsInF1YWxpdHkiOjg5LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWhmNlNNLmltZyIsImF0dHJpYnV0aW9uIjoiU2h1dHRlcnN0b2NrIiwidGl0bGUiOiJUaXRhbiBNaXNzaWxlIE11c2V1bSwgQXJpem9uYSIsImNhcHRpb24iOiI8cD5EZWx2ZSB1bmRlcmdyb3VuZCBpbiBBcml6b25hIGFuZCBleHBsb3JlIHRoaXMgZm9ybWVyIHNlY3JldCBpbnRlcmNvbnRpbmVudGFsIGJhbGxpc3RpYyBtaXNzaWxlIHNpdGUhPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vMjQzNzM3P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTY1NDg2MGVuLWluXCI+IFRoaXMgaXMgd2hlcmUgeW91IHNob3VsZCBsaXZlIGluIHRoZSBVU0EgYmFzZWQgb24geW91ciBwZXJzb25hbGl0eTwvYT48L3A+Iiwic291cmNlIjoibXNuIn19XSwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA1OjE1OjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxOTIwLCJoZWlnaHQiOjk5NiwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjU4MDM4NTQ5N2U4N2QxZDYwYjRhZWU4OTM3YWM0ZGEwJnBpZD1XZHAiLCJ0aXRsZSI6Ikh1bnRpbmcgZm9yIHRoZSBzZWNyZXQgdHJhdmVsIGRlc3RpbmF0aW9ucyBpbiB0aGUgVVMiLCJjYXB0aW9uIjoiPHA+QXJlIHlvdSBpbiBzZWFyY2ggb2YgYSBwZWFjZWZ1bCBnZXRhd2F5IGF3YXkgZnJvbSB0aGUgY3Jvd2RzLCBvciBwZXJoYXBzIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQ/IFRoZSBtb3N0IG9idmlvdXMgdG91cmlzdCBkZXN0aW5hdGlvbnMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW5jbHVkZSBMb3MgQW5nZWxlcywgTmV3IFlvcmsgQ2l0eSwgYW5kIHRoZSA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS90cmF2ZWwvNDUwODg4L3RoZS1ncmVhdGVzdC1jYW55b25zLWFuZC1nb3JnZXMtb24tZWFydGhcIiByZWw9XCJub29wZW5lclwiPkdyYW5kIENhbnlvbjwvYT4sIGJ1dCBpZiB5b3UgbG9vayBhIGxpdHRsZSBoYXJkZXIsIHRoZXJlJ3Mgc28gbXVjaCBtb3JlIHRvIGJlIGRpc2NvdmVyZWQuwqA8L3A+IDxwPkFsdGhvdWdoIG5vdCBhcyB3aWRlbHkgcmVjb2duaXplZCwgdGhlIGRlc3RpbmF0aW9ucyBmZWF0dXJlZCBpbiB0aGlzIGdhbGxlcnkgYXJlIGVxdWFsbHkgYXdlLWluc3BpcmluZy7CoENsaWNrIHRocm91Z2ggYW5kIHVuY292ZXIgdGhlc2UgbmF0dXJhbCBhbmQgbWFuLW1hZGUgdHJlYXN1cmVzIGp1c3Qgd2FpdGluZyB0byBiZSBleHBsb3JlZC48L3A+PHA+WW91IG1heSBhbHNvIGxpa2U6PGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vbi8xOTk0NDk/dXRtX3NvdXJjZT1tc24uY29tJnV0bV9tZWRpdW09ZGlzcGxheSZ1dG1fY2FtcGFpZ249cmVmZXJyYWxfZGVzY3JpcHRpb24mdXRtX2NvbnRlbnQ9NjU0ODYwZW4taW5cIj4gRmluZCBvdXQgdGhlIHJpY2hlc3QgYW5kIHBvb3Jlc3Qgc3VidXJicyBvZiBBdXN0cmFsaWE8L2E+PC9wPiIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMzgzRjJBIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEN0RFRTQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM4M0YyQSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDdERUU0IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFtMlNhZyIsIm5hbWUiOiJTdGFyc0luc2lkZXIiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFlQlRtei5pbWciLCJwcm9maWxlSWQiOiJ2aWQtN3h4OG1udWN1NTV5dzYzd2U5dmEyZ3dyN3VpaGJ4d2M2OGZ4cXAyNXg2dGc0ZnRpYnByYSIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjo5OCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dQZnYifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6OTgsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnUGZ2LWRhcmsifX0sImNhdGVnb3J5IjoidHJhdmVsIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjUsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50Ijo1LCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzIxYjkzNGNhLTk2NjYtNGViYS1hYjdkLWQxODA2MTM1OWNlOCIsImZlZWROYW1lIjoiVHJhdmVsIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MTIsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImNGX0kyaSIsInJhbmsiOjB9XSwicmkiOiIyMDkiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTHdPOSIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJDaGVubmFpeWluIHZzIE11bWJhaSBMaXZlIFNjb3JlLCBJU0wgMjAyMyIsImFic3RyYWN0IjoiQ2hlbm5haXlpbiB2cyBNdW1iYWkgTGl2ZSBTY29yZSwgSVNMIDIwMjM6IEZvbGxvdyBsaXZlIHNjb3JlcyBhbmQgbGF0ZXN0IHVwZGF0ZXMgb2YgSW5kaWFuIFN1cGVyIExlYWd1ZSAoU2Vhc29uIDIwMjMvMjAyNCkgQ2hlbm5haXlpbiB2L3MgTXVtYmFpIG1hdGNoIiwicmVhZFRpbWVNaW4iOjEsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbGlmZXN0eWxlL3doYXRzLWhvdC9jaGVubmFpeWluLXZzLW11bWJhaS1saXZlLXNjb3JlLWlzbC0yMDIzL2FyLUJCMWlMd085IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QxMzowMTo1MVoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6NTQ5LCJoZWlnaHQiOjMwOSwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjZiNmQ2OGJiMzcwYmQ1NmM1ZDg3ZTQ3ZjM1YjllYWJmJnBpZD1XZHAiLCJ0aXRsZSI6IkVQTCAyMDIzIE5vdHRpbmdoYW0gRm9yZXN0IHZzIEFyc2VuYWwgTGl2ZSBTY29yZSIsImNhcHRpb24iOiJFUEwgMjAyMyBOb3R0aW5naGFtIEZvcmVzdCB2cyBBcnNlbmFsIExpdmUgU2NvcmUiLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzNDNDQzNCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDdEOERCIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzQzQ0MzQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q3RDhEQiIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBQjNyWCIsIm5hbWUiOiJIaW5kdXN0YW4gVGltZXMiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjE4THdiVi5pbWciLCJwcm9maWxlSWQiOiJ2aWQtdmZodmVkdmp1eHJxcWU1NzB4anV5NTY3aXgwczU1amtxcXZjaXRoMDNtOG4zMnk4a3ZwYSJ9LCJjYXRlZ29yeSI6ImxpZmVzdHlsZSIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzBkNGI0MTFkLTdkNjItNDMwZC05YmRmLWFjMzljMGIyN2Q1MSIsImZlZWROYW1lIjoiU3BvcnRzIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MTMsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImV4cGxvcmUiLCJyYW5rIjowLCJmb2xsb3ciOnsiaWQiOiIiLCJuYW1lIjoiU3BvcnRzIiwidGltZSI6IiJ9fV0sInJpIjoiMjI2IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24ifV0sIndwb01ldGFkYXRhIjp7ImluZm9wYW5lRmlyc3RTbGlkZVRyYW5zaXRpb25TcGVlZEluU2Vjb25kcyI6NCwiaW5mb3BhbmVSZW1haW5pbmdTbGlkZXNUcmFuc2l0aW9uU3BlZWRJblNlY29uZHMiOjQsImNhcmRQbGFjZW1lbnRSdWxlIjoibm9uZSJ9fSx7ImlkIjoiQkIxaU5VcjUiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiQ29uZyBTZWFscyAzLVNlYXQgRGVhbCBpbiBEZWxoaSwgQmFncyBCaWdnZXIgU2hhcmUgaW4gSGFyeWFuYSwgR3VqYXJhdDogTFMgUG9sbCBTZWF0LXNoYXJpbmcgRG9uZSB3aXRoIEFBUCwgTm8gUGFjdCBmb3IgUHVuamFiIiwiYWJzdHJhY3QiOiJJTkRJQSBibG9jIHBhcnRuZXJz4oCTIEFhbSBBYWRtaSBQYXJ0eSAoQUFQKSBhbmQgQ29uZ3Jlc3PigJMgaGF2ZSBmaW5hbGlzZWQgdGhlaXIgc2VhdC1zaGFyaW5nIGFncmVlbWVudCBpbiBEZWxoaSwgSGFyeWFuYSBhbmQgR3VqYXJhdCBmb3IgdGhlIHVwY29taW5nIExvayBTYWJoYSBwb2xscy4gSW4gYSBqb2ludCBzdGF0ZW1lbnQsIGJvdGggcGFydGllcyBzYWlkIHRoZXkgaGF2ZSBtdXR1YWxseSBkZWNpZGVkIHRvIG5vdCBjb250ZXN0IHRoZSBwb2xscyB0b2dldGhlciBpbiBQdW5qYWIuSW4gRGVsaGksIEFBUCB3aWxsIGJlIGNvbnRlc3Rpbmcgb24gZm91ciBzZWF0cyB3aGlsZSBDb25ncmVzcyB3aWxsIGZpZWxkIGNhbmRpZGF0ZXMgaW4gdGhyZWUgY29uc3RpdHVlbmNpZXMsIGFjY29yZGluZyB0byBzZW5pb3IgQ29uZ3Jlc3MgbGVhZGVyIE11a3VsIFdhc25pay5JbiBHdWphcmF0LC4uLiIsInJlYWRUaW1lTWluIjoxLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3MvSW5kaWEvY29uZy1zZWFscy0zLXNlYXQtZGVhbC1pbi1kZWxoaS1iYWdzLWJpZ2dlci1zaGFyZS1pbi1oYXJ5YW5hLWd1amFyYXQtbHMtcG9sbC1zZWF0LXNoYXJpbmctZG9uZS13aXRoLWFhcC1uby1wYWN0LWZvci1wdW5qYWIvYXItQkIxaU5VcjUiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA2OjE1OjM5WiIsImlzRmVhdHVyZWQiOnRydWUsImltYWdlcyI6W3sid2lkdGgiOjEyMDAsImhlaWdodCI6ODAwLCJxdWFsaXR5Ijo3MCwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjFpR3luei5pbWciLCJhdHRyaWJ1dGlvbiI6IkNvcHlyaWdodCAoQykgbmV3MTguY29tLiBBbGwgUmlnaHRzIFJlc2VydmVkLiIsInRpdGxlIjoiQ29uZ3Jlc3MgYW5kIEFBUCBoYXZlIGZpbmFsaXNlZCBzZWF0IHNoYXJpbmcgZGVhbCBmb3IgRGVsaGkgYWhlYWQgb2YgdGhlIExvayBzYWJoYSBwb2xscy4gKEltYWdlOiBBTkkpIiwiY2FwdGlvbiI6IkNvbmdyZXNzIGFuZCBBQVAgaGF2ZSBmaW5hbGlzZWQgc2VhdCBzaGFyaW5nIGRlYWwgZm9yIERlbGhpIGFoZWFkIG9mIHRoZSBMb2sgc2FiaGEgcG9sbHMuIChJbWFnZTogQU5JKSIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMzUzODVkIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNlZGVkZWUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM1Mzg1ZCIsInNlY0hleENvbG9yIjoiIzMwM2Q0MyIsImdyYWRpZW50QW5nbGUiOiIxMzVkZWciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI2VkZWRlZSIsInNlY0hleENvbG9yIjoiI2JhYmFiYSIsImdyYWRpZW50QW5nbGUiOiIxMzVkZWciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQUpVRnhNIiwibmFtZSI6Ik5ld3MxOCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCV0RiUzUuaW1nIiwicHJvZmlsZUlkIjoidmlkLWFheHI2N3hnNjVtMzdrbTg1OHV0NWM0eWg2Y2t5OWhheXVtczIzN2VtOHlydWVmMmNmeHMiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6NTAsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnQVp6In0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjUwLCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0Faei1kYXJrIn19LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6OCwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjgsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfZTM0NTZlOTEtMjE1Zi00YTVjLWFiNzgtNjg3NDUwOTA3NWVmIiwiZmVlZE5hbWUiOiJJbmRpYSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjE0LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInNvdXJjZSI6Im1zbiJ9LHsidHlwZSI6Im5hdGl2ZWFkIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowfSx7ImlkIjoiYmU3NzVmOGUtNTRhYi00MDBkLWYwYjQtODVhMzdmZGM5NGY3IiwidHlwZSI6IlNwb3J0c01hdGNoIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwb3NpdGlvbiI6MCwiZGF0YSI6IntcIlJlc3BvbnNlQ3JlYXRpb25UaW1lXCI6XCIyMDI0LTAyLTI0VDA2OjUyOjUxXCIsXCJNb2RlbFwiOntcIkNhcmRUeXBlXCI6XCJTcG9ydHNNYXRjaFwiLFwiRGF0YVR5cGVcIjpcIlNwb3J0c1YyXCIsXCJWZXJzaW9uXCI6XCIzXCIsXCJIYXNoXCI6XCJTcG9ydHNNYXRjaF9Dcmlja2V0X2JlNzc1ZjhlLTU0YWItNDAwZC1mMGI0LTg1YTM3ZmRjOTRmN180ODk0NzZBMUM3QUM1NzQ4XCIsXCJEZWZhdWx0VGFiRm9jdXNcIjpcIjBcIixcIkxvZ01lc3NhZ2VcIjpcIntcXFwiaWRcXFwiOlxcXCJiZTc3NWY4ZS01NGFiLTQwMGQtZjBiNC04NWEzN2ZkYzk0ZjdcXFwiLFxcXCJidlxcXCI6MC44MDk2NTUsXFxcImNoXFxcIjpcXFwiNDg5NDc2QTFcXFwiLFxcXCJjc1xcXCI6MC44NSxcXFwiZHNcXFwiOjAuMCxcXFwibXNcXFwiOlxcXCJ2MS4wOjAuNzQyMTE7djMuMDowLjkwMDEyO3Y1LjA6MC45O3YyLjA6MDt2Ni4wOjAuODExNTE7XFxcIixcXFwic3ZcXFwiOlxcXCJ2NS4wXFxcIixcXFwicmJcXFwiOjIyLFxcXCJlaVxcXCI6MSxcXFwibnJcXFwiOjAsXFxcImhlXFxcIjoxLFxcXCJmdlxcXCI6MC4wLFxcXCJocFxcXCI6MCxcXFwiaHNcXFwiOm51bGwsXFxcImllXFxcIjowLFxcXCJpbFxcXCI6MCxcXFwiaXZcXFwiOjAuMCxcXFwibmNcXFwiOm51bGwsXFxcIm5wXFxcIjowLjAwNjUsXFxcInJkXFxcIjpudWxsLFxcXCJycFxcXCI6MC41LFxcXCJyc1xcXCI6MixcXFwidGRcXFwiOjE3Ljk5OTg4MixcXFwicGNcXFwiOjAsXFxcIm1rXFxcIjpcXFwiZW4taW5cXFwiLFxcXCJleFxcXCI6MCxcXFwidXNcXFwiOjAsXFxcInVsXFxcIjowfVwiLFwiVGFic1wiOlt7XCJ0YWJUeXBlXCI6XCJDcmlja2V0XCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcImZmZmZmZlwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJiZTc3NWY4ZS01NGFiLTQwMGQtZjBiNC04NWEzN2ZkYzk0ZjdcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX0NyaWNrZXRfYmU3NzVmOGUtNTRhYi00MDBkLWYwYjQtODVhMzdmZGM5NGY3XzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLk8zSVRIT0tpVDd1SDFNQWpfRUxHUFEtLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJJQ0NcIixcInByaW1hcnlFbnRpdHlUeXBlXCI6XCJMZWFndWVcIixcImlzTGl2ZVwiOlwiVHJ1ZVwiLFwieUlkXCI6XCJZXzY1MGUxNTM5LWZiNTctNDdkNy04NTEwLTBiZmM1OWZjZTk2NFwiLFwidGFiQ29udGVudFJlYXNvblwiOlwiQ3JpY2tldFwiLFwidGFiQ29udGVudFR5cGVcIjpcIlJlY29tbWVuZGF0aW9uX0xlYWd1ZVwiLFwiaGFzRXhwbGljaXRJbnRlcmVzdFwiOlwiVHJ1ZVwiLFwiY2xpY2tUaHJvdWdoVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzXCIsXCJyZWFzb25cIjpcIjFcIixcInRhYkNvbnRlbnRcIjp7XCJzcG9ydFwiOlwiVW5rbm93blwiLFwic2hvd0JhY2tncm91bmRJbWFnZVwiOlwiVHJ1ZVwiLFwiY29udGVudEhhc2hcIjpcIkY4NERBMjFFNTQ5RUNBN0VcIixcImxlYWd1ZVwiOntcImlkXCI6XCJDcmlja2V0X0lDQ1wiLFwiaW1hZ2VJZFwiOlwiT1NCLk8zSVRIT0tpVDd1SDFNQWpfRUxHUFEtLS5wbmdcIixcImxlYWd1ZVNlYXNvblBoYXNlXCI6XCJVbmtub3duXCIsXCJsZWFndWVTdGFydERhdGVUaW1lXCI6XCJcIixcIm5hbWVcIjpcIklDQ1wiLFwic2F0b3JpSWRcIjpcImJlNzc1ZjhlLTU0YWItNDAwZC1mMGI0LTg1YTM3ZmRjOTRmN1wiLFwiY2xpY2tUaHJvdWdoVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzXCIsXCJpc0xpdmVcIjpcIlRydWVcIixcInNwb3J0c01hdGNoZXNcIjpbe1wiZ2FtZUlkXCI6XCIyMzA1MzJcIixcImdhbWVTdGFydERhdGVUaW1lXCI6XCIyMDI0LTAyLTIzVDA0OjAwOjAwXCIsXCJnYW1lQ2VudGVyVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzL2dhbWUtY2VudGVyL3NwLWlkLTIzMDUzMlwiLFwidG9zc0luZm9cIjpcIkVORyBlbGVjdGVkIHRvIGJhdFwiLFwiZ2FtZVN1bW1hcnlJbmZvXCI6XCJJTkQgdHJhaWwgYnkgMzExIHJ1bnNcIixcInZlbnVlSW5mb1wiOlwiSlNDQSBJbnRlcm5hdGlvbmFsIFN0YWRpdW0gQ29tcGxleCwgUmFuY2hpXCIsXCJyYW5rXCI6XCIwXCIsXCJnYW1lU3RhdGVcIjp7XCJzdGF0ZVwiOlwiSW5Qcm9ncmVzc1wiLFwiZ2FtZUNsb2NrXCI6XCJcIixcImRldGFpbGVkR2FtZVN0YXRlXCI6XCJJblByb2dyZXNzXCJ9LFwicGFydGljaXBhbnRPbmVcIjp7XCJ5SWRcIjpcIllfOWZiMGFiOGMtYWRmNS00MjEzLWE5ZGMtNjg0NmQ2ZThlMzQwXCIsXCJzYXRvcmlJZFwiOlwiODU4M2E0NGEtZGM2YS1iZjMxLTFkZjItNjI1ZTZmOGM0MDBkXCIsXCJuYW1lXCI6XCJJTkRcIixcInByaW1hcnlDb2xvckhleFwiOlwiMDM0OGRmXCIsXCJ0ZWFtVHJpZ2dlcmluZ0lkXCI6XCI0XCIsXCJob21lQXdheVN0YXR1c1wiOlwiSG9tZVwiLFwiaW1hZ2VJZFwiOlwiT1NCLjZFaGEwN09fbVQ5NG4zOUt3RFNVZHctLS5wbmdcIixcInNjb3JlXCI6XCI0Mi8xICgxMy4wKVwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFsc1wifSxcInBhcnRpY2lwYW50VHdvXCI6e1wieUlkXCI6XCJZXzE3YmZjY2U1LWYxNjUtNGM5OC1iMjNlLTIyYjNhMDM0NWJhZVwiLFwic2F0b3JpSWRcIjpcImRkYTc0ZTBkLTRjNGMtYjMwYS0zYjA2LTliZDVjMDgzYTFlNFwiLFwibmFtZVwiOlwiRU5HXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjFjZTVkNFwiLFwidGVhbVRyaWdnZXJpbmdJZFwiOlwiM1wiLFwiaG9tZUF3YXlTdGF0dXNcIjpcIkF3YXlcIixcImltYWdlSWRcIjpcIk9TQi45ZGpzdWRBNlJ1Nk50UUtYb3QyZHhBLS0ucG5nXCIsXCJzY29yZVwiOlwiMzUzICgxMDQuNSlcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn19LHtcImdhbWVJZFwiOlwiMjMwMDYyXCIsXCJnYW1lU3RhcnREYXRlVGltZVwiOlwiMjAyNC0wMi0yNVQwMDowMDowMFwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFscy9nYW1lLWNlbnRlci9zcC1pZC0yMzAwNjJcIixcInRvc3NJbmZvXCI6XCJcIixcImdhbWVTdW1tYXJ5SW5mb1wiOlwiXCIsXCJ2ZW51ZUluZm9cIjpcIkVkZW4gUGFyaywgQXVja2xhbmRcIixcInJhbmtcIjpcIjFcIixcImdhbWVTdGF0ZVwiOntcInN0YXRlXCI6XCJQcmVHYW1lXCIsXCJnYW1lQ2xvY2tcIjpcIlwiLFwiZGV0YWlsZWRHYW1lU3RhdGVcIjpcIlByZUdhbWVcIn0sXCJwYXJ0aWNpcGFudE9uZVwiOntcInlJZFwiOlwiWV81M2Y5ODdlOC1mZjQ5LTRiNzgtYjIwOS1lZjg5MjhjNjgwOGRcIixcInNhdG9yaUlkXCI6XCJmZDhjZmM5YS00MjAxLTg2NTAtMzBjYi0zZWYyZjUwNjgzNzRcIixcIm5hbWVcIjpcIk5aXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjAwMDAwZVwiLFwidGVhbVRyaWdnZXJpbmdJZFwiOlwiNVwiLFwiaG9tZUF3YXlTdGF0dXNcIjpcIkhvbWVcIixcImltYWdlSWRcIjpcIk9TQi5idVlFWmN2bEFtRHRyYnlnaFZpR2tBLS0ucG5nXCIsXCJzY29yZVwiOlwiXCIsXCJnYW1lQ2VudGVyVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzXCJ9LFwicGFydGljaXBhbnRUd29cIjp7XCJ5SWRcIjpcIllfZDQwYTkzYjYtOTIxMi00YzVjLWIzYjUtZjhkMWQxODRkMjJhXCIsXCJzYXRvcmlJZFwiOlwiZDg1NWY4NzktNWQxNi0wYWIyLTU1ZjAtZGEyMDkwNTI2N2ZlXCIsXCJuYW1lXCI6XCJBVVNcIixcInByaW1hcnlDb2xvckhleFwiOlwiZjhlZjAwXCIsXCJ0ZWFtVHJpZ2dlcmluZ0lkXCI6XCIxXCIsXCJob21lQXdheVN0YXR1c1wiOlwiQXdheVwiLFwiaW1hZ2VJZFwiOlwiT1NCLkZublNzcV8yREQ0U0tZeWp5SkZUS0EtLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn19LHtcImdhbWVJZFwiOlwiMjM5NzQ3XCIsXCJnYW1lU3RhcnREYXRlVGltZVwiOlwiMjAyNC0wMi0yOFQwNjowMDowMFwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFscy9nYW1lLWNlbnRlci9zcC1pZC0yMzk3NDdcIixcInRvc3NJbmZvXCI6XCJcIixcImdhbWVTdW1tYXJ5SW5mb1wiOlwiXCIsXCJ2ZW51ZUluZm9cIjpcIlNoZWlraCBaYXllZCBTdGFkaXVtLCBBYnUgRGhhYmlcIixcInJhbmtcIjpcIjJcIixcImdhbWVTdGF0ZVwiOntcInN0YXRlXCI6XCJQcmVHYW1lXCIsXCJnYW1lQ2xvY2tcIjpcIlwiLFwiZGV0YWlsZWRHYW1lU3RhdGVcIjpcIlByZUdhbWVcIn0sXCJwYXJ0aWNpcGFudE9uZVwiOntcInlJZFwiOlwiWV84MWIzMDY0NS0wYjVkLTQxMDEtYjVhMy00OThiM2EyNDkwMjBcIixcInNhdG9yaUlkXCI6XCIxYWZjMmM3ZC1iNTI0LWNlMGMtYWNhMi05NzEyNWJjNzEwMzJcIixcIm5hbWVcIjpcIkFGR1wiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCIwMDc3YzNcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjExODhcIixcImhvbWVBd2F5U3RhdHVzXCI6XCJIb21lXCIsXCJpbWFnZUlkXCI6XCJPU0IuTHVfV2JLQTI4cWdTNUxDeWsxdjNaUS0tLnBuZ1wiLFwic2NvcmVcIjpcIlwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFsc1wifSxcInBhcnRpY2lwYW50VHdvXCI6e1wieUlkXCI6XCJZXzdjMjliNGI3LWU5NTQtNDI0OS1iNGY4LTVmNzIzOTM1ODFlYVwiLFwic2F0b3JpSWRcIjpcIjEzODE2ZjA5LTRlZjMtOTc0NS0wNzFlLTNlZWRlNzFiZDA5OFwiLFwibmFtZVwiOlwiSVJFXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjJhZWMyMlwiLFwidGVhbVRyaWdnZXJpbmdJZFwiOlwiMTNcIixcImhvbWVBd2F5U3RhdHVzXCI6XCJBd2F5XCIsXCJpbWFnZUlkXCI6XCJPU0IuQmp2XzJQemNISFVOc1pxR3RJZ1VsZy0tLnBuZ1wiLFwic2NvcmVcIjpcIlwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFsc1wifX0se1wiZ2FtZUlkXCI6XCIyMzAwNjNcIixcImdhbWVTdGFydERhdGVUaW1lXCI6XCIyMDI0LTAyLTI4VDIyOjAwOjAwXCIsXCJnYW1lQ2VudGVyVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzL2dhbWUtY2VudGVyL3NwLWlkLTIzMDA2M1wiLFwidG9zc0luZm9cIjpcIlwiLFwiZ2FtZVN1bW1hcnlJbmZvXCI6XCJcIixcInZlbnVlSW5mb1wiOlwiQ2VsbG8gQmFzaW4gUmVzZXJ2ZSwgV2VsbGluZ3RvblwiLFwicmFua1wiOlwiM1wiLFwiZ2FtZVN0YXRlXCI6e1wic3RhdGVcIjpcIlByZUdhbWVcIixcImdhbWVDbG9ja1wiOlwiXCIsXCJkZXRhaWxlZEdhbWVTdGF0ZVwiOlwiUHJlR2FtZVwifSxcInBhcnRpY2lwYW50T25lXCI6e1wieUlkXCI6XCJZXzUzZjk4N2U4LWZmNDktNGI3OC1iMjA5LWVmODkyOGM2ODA4ZFwiLFwic2F0b3JpSWRcIjpcImZkOGNmYzlhLTQyMDEtODY1MC0zMGNiLTNlZjJmNTA2ODM3NFwiLFwibmFtZVwiOlwiTlpcIixcInByaW1hcnlDb2xvckhleFwiOlwiMDAwMDBlXCIsXCJ0ZWFtVHJpZ2dlcmluZ0lkXCI6XCI1XCIsXCJob21lQXdheVN0YXR1c1wiOlwiSG9tZVwiLFwiaW1hZ2VJZFwiOlwiT1NCLmJ1WUVaY3ZsQW1EdHJieWdoVmlHa0EtLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn0sXCJwYXJ0aWNpcGFudFR3b1wiOntcInlJZFwiOlwiWV9kNDBhOTNiNi05MjEyLTRjNWMtYjNiNS1mOGQxZDE4NGQyMmFcIixcInNhdG9yaUlkXCI6XCJkODU1Zjg3OS01ZDE2LTBhYjItNTVmMC1kYTIwOTA1MjY3ZmVcIixcIm5hbWVcIjpcIkFVU1wiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCJmOGVmMDBcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjFcIixcImhvbWVBd2F5U3RhdHVzXCI6XCJBd2F5XCIsXCJpbWFnZUlkXCI6XCJPU0IuRm5uU3NxXzJERDRTS1l5anlKRlRLQS0tLnBuZ1wiLFwic2NvcmVcIjpcIlwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFsc1wifX0se1wiZ2FtZUlkXCI6XCIyNDEzOTBcIixcImdhbWVTdGFydERhdGVUaW1lXCI6XCIyMDI0LTAyLTI5VDA1OjQ1OjAwXCIsXCJnYW1lQ2VudGVyVXJsXCI6XCJzcG9ydHMvY3JpY2tldC9jcmlja2V0LWludGVybmF0aW9uYWxzL2dhbWUtY2VudGVyL3NwLWlkLTI0MTM5MFwiLFwidG9zc0luZm9cIjpcIlwiLFwiZ2FtZVN1bW1hcnlJbmZvXCI6XCJcIixcInZlbnVlSW5mb1wiOlwiVHJpYmh1dmFuIFVuaXZlcnNpdHkgSW50ZXJuYXRpb25hbCBDcmlja2V0IEdyb3VuZCwgS2lydGlwdXJcIixcInJhbmtcIjpcIjRcIixcImdhbWVTdGF0ZVwiOntcInN0YXRlXCI6XCJQcmVHYW1lXCIsXCJnYW1lQ2xvY2tcIjpcIlwiLFwiZGV0YWlsZWRHYW1lU3RhdGVcIjpcIlByZUdhbWVcIn0sXCJwYXJ0aWNpcGFudE9uZVwiOntcInlJZFwiOlwiWV8zNGY2YWNmNC04MjQ4LTQ1YmYtOWRkYi04MjFhNzY4Y2Q0NmZcIixcInNhdG9yaUlkXCI6XCI2NGYwMjE0OC04ZGYyLTY5MTgtYThjYi03OGI0Yjc2ZTYwMGRcIixcIm5hbWVcIjpcIk5BTVwiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCIwZjViYzBcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjIwXCIsXCJob21lQXdheVN0YXR1c1wiOlwiSG9tZVwiLFwiaW1hZ2VJZFwiOlwiT1NCLkFLR1JHQ3hPbV9MMW5oZ0FBdTkwa3ctLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn0sXCJwYXJ0aWNpcGFudFR3b1wiOntcInlJZFwiOlwiWV83MzYxMDI4ZS01MjJhLTQ3NzAtODc0Mi0wMGFkMzcwOTU5NTNcIixcInNhdG9yaUlkXCI6XCJiOTA3YzBmYS1jZDAxLTUwZTUtNzNhYS00MzlkNTdiMDM0MTVcIixcIm5hbWVcIjpcIk5FRFwiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCJmNDNlMjZcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjE1XCIsXCJob21lQXdheVN0YXR1c1wiOlwiQXdheVwiLFwiaW1hZ2VJZFwiOlwiT1NCLjhMa1JTTHdWY0wxblhDTnA1b2lLTEEtLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn19LHtcImdhbWVJZFwiOlwiMjQxNDU2XCIsXCJnYW1lU3RhcnREYXRlVGltZVwiOlwiMjAyNC0wMy0wM1QwNTowMDowMFwiLFwiZ2FtZUNlbnRlclVybFwiOlwic3BvcnRzL2NyaWNrZXQvY3JpY2tldC1pbnRlcm5hdGlvbmFscy9nYW1lLWNlbnRlci9zcC1pZC0yNDE0NTZcIixcInByZUdhbWVOb3RpZmljYXRpb25NZXNzYWdlXCI6XCJWaWV3IHByZXZpb3VzIG1hdGNodXBzXCIsXCJ0b3NzSW5mb1wiOlwiXCIsXCJnYW1lU3VtbWFyeUluZm9cIjpcIlwiLFwidmVudWVJbmZvXCI6XCJEdWJhaSBJbnRlcm5hdGlvbmFsIENyaWNrZXQgU3RhZGl1bSwgRHViYWlcIixcInJhbmtcIjpcIjVcIixcImdhbWVTdGF0ZVwiOntcInN0YXRlXCI6XCJQcmVHYW1lXCIsXCJnYW1lQ2xvY2tcIjpcIlwiLFwiZGV0YWlsZWRHYW1lU3RhdGVcIjpcIlByZUdhbWVcIn0sXCJwYXJ0aWNpcGFudE9uZVwiOntcInlJZFwiOlwiWV83NDNkZDU0NS1kNDhlLTRiODEtOThiNC04NTgzNDcwMWU2MThcIixcInNhdG9yaUlkXCI6XCI2N2MzM2VlYS0xYWM2LWI3MDctMzQ4Yi1kNGZiZTc4ZDU2MzZcIixcIm5hbWVcIjpcIlVBRVwiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCIyOTM4M2JcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjIxXCIsXCJob21lQXdheVN0YXR1c1wiOlwiSG9tZVwiLFwiaW1hZ2VJZFwiOlwiT1NCLldsT0oySVI2bkdTTDJ8Qk1ZNjh0NXctLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn0sXCJwYXJ0aWNpcGFudFR3b1wiOntcInlJZFwiOlwiWV8wYzJhODE3ZS00YWY2LTRlOTItYmUyMS0wMDJkODE1NjU1NzVcIixcInNhdG9yaUlkXCI6XCJiOWMzYjliZC05YTkwLTM3ZTUtZjgwMC04MTM2MGYyM2YyZjVcIixcIm5hbWVcIjpcIlNDT1wiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCIyYTM1NWJcIixcInRlYW1UcmlnZ2VyaW5nSWRcIjpcIjE2XCIsXCJob21lQXdheVN0YXR1c1wiOlwiQXdheVwiLFwiaW1hZ2VJZFwiOlwiT1NCLkZ2UlBRMHpQZkZzSDJGR25OZl9pb1EtLS5wbmdcIixcInNjb3JlXCI6XCJcIixcImdhbWVDZW50ZXJVcmxcIjpcInNwb3J0cy9jcmlja2V0L2NyaWNrZXQtaW50ZXJuYXRpb25hbHNcIn19XX0sXCJiYWNrZ3JvdW5kSW1hZ2VNYXBcIjp7XCJfMXhfMXlcIjp7XCJ0cnVlXCI6XCJBQTFoN0JYcFwiLFwiZmFsc2VcIjpcIkFBMWlqdk1sXCJ9LFwiXzF4XzJ5XCI6e1widHJ1ZVwiOlwiQUExaDdHR0FcIixcImZhbHNlXCI6XCJBQTFpanRpNVwifSxcIl8xeF8zeVwiOntcInRydWVcIjpcIkFBMWg3dmNaXCIsXCJmYWxzZVwiOlwiQUExaWp0aTZcIn19fX0se1widGFiVHlwZVwiOlwiR29sZkxlYWRlckJvYXJkXCIsXCJ0YWJDb250ZW50VXJsXCI6XCJodHRwczovL2FwaS5tc24uY29tL3Nwb3J0cy9ibGVuZGVkP21hcmtldD1lbi1pbiZzYXRvcmlpZD1iZjJlNjllYy0yY2FjLWJiODYtY2IwNi00ZGIzM2MxYzdiNTYmdXNlcj1tLTNGQjI4OEE3N0Q3RTZGQzEzQTM3OUExMDdDMkM2RTMzJmxhdD0xMi45NTQ5OTEzNDA2MzcyMDcmbG9uZz03Ny42MDg1NzM5MTM1NzQyMiZjYW52YXM9RWRnZU50cCZ0YWJ0eXBlPUdvbGZMZWFkZXJCb2FyZCZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcImZmZmZmZlwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJiZjJlNjllYy0yY2FjLWJiODYtY2IwNi00ZGIzM2MxYzdiNTZcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX0dvbGZMZWFkZXJCb2FyZF9iZjJlNjllYy0yY2FjLWJiODYtY2IwNi00ZGIzM2MxYzdiNTZfNDg5NDc2QTFDN0FDNTc0OFwiLFwicHJpbWFyeUVudGl0eUltYWdlXCI6XCJPU0IuWk56U1lYY2hyajdBZ1R4cUV0WjV2QS0tLnBuZ1wiLFwicHJpbWFyeUVudGl0eU5hbWVcIjpcIlBHQVwiLFwicHJpbWFyeUVudGl0eVR5cGVcIjpcIkxlYWd1ZVwiLFwieUlkXCI6XCJZXzA0YTM2ZmYyLTA1M2EtNGJlNi04MzcxLWZiNDU1ZjI3OTk0ZFwiLFwidGFiQ29udGVudFJlYXNvblwiOlwiR29sZkxlYWRlckJvYXJkXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCIsXCJjbGlja1Rocm91Z2hVcmxcIjpcInNwb3J0cy9nb2xmL3BnYVwifSx7XCJ0YWJUeXBlXCI6XCJUZW5uaXNcIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPTQwZGFjYjlmLTQ0ZGQtNGQzMC1iOGZkLWJkZmQ2OWFjMzhmNyZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVubmlzJmNhcmRUeXBlPVJlY29tbWVuZGF0aW9uX0xlYWd1ZSZ2ZXJzaW9uPTNcIixcInByaW1hcnlDb2xvckhleFwiOlwiZmZmZmZmXCIsXCJwcmltYXJ5RW50aXR5SWRcIjpcIjQwZGFjYjlmLTQ0ZGQtNGQzMC1iOGZkLWJkZmQ2OWFjMzhmN1wiLFwiaGFzaFwiOlwiU3BvcnRzTWF0Y2hfVGVubmlzXzQwZGFjYjlmLTQ0ZGQtNGQzMC1iOGZkLWJkZmQ2OWFjMzhmN180ODk0NzZBMUM3QUM1NzQ4XCIsXCJwcmltYXJ5RW50aXR5SW1hZ2VcIjpcIk9TQi5pTF9wbzhlOTR0RFBUSGthWWgyR2l3LS0ucG5nXCIsXCJwcmltYXJ5RW50aXR5TmFtZVwiOlwiUmlvIE9wZW4gcHJlc2VudGVkIGJ5IENsYXJvXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfODYzOTBhNzItNGMwNC00YjQzLTk0MjktY2M4ZDRiNTg0ZTc0XCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZW5uaXNcIixcInRhYkNvbnRlbnRUeXBlXCI6XCJSZWNvbW1lbmRhdGlvbl9MZWFndWVcIixcImNsaWNrVGhyb3VnaFVybFwiOlwic3BvcnRzL3Rlbm5pcy9maXh0dXJlcy9zcC1pZC0xMTEyN1wifSx7XCJ0YWJUeXBlXCI6XCJNb3RvclNwb3J0c1JhY2VMaXN0XCIsXCJ0YWJDb250ZW50VXJsXCI6XCJodHRwczovL2FwaS5tc24uY29tL3Nwb3J0cy9ibGVuZGVkP21hcmtldD1lbi1pbiZzYXRvcmlpZD1iN2E3NjI3Ni0zNzVhLTcxOGItNTJkOS00OWVhZTliMjYzYTQmdXNlcj1tLTNGQjI4OEE3N0Q3RTZGQzEzQTM3OUExMDdDMkM2RTMzJmxhdD0xMi45NTQ5OTEzNDA2MzcyMDcmbG9uZz03Ny42MDg1NzM5MTM1NzQyMiZjYW52YXM9RWRnZU50cCZ0YWJ0eXBlPU1vdG9yU3BvcnRzUmFjZUxpc3QmY2FyZFR5cGU9UmVjb21tZW5kYXRpb25fTGVhZ3VlJnZlcnNpb249M1wiLFwicHJpbWFyeUNvbG9ySGV4XCI6XCIxMTExMTFcIixcInByaW1hcnlFbnRpdHlJZFwiOlwiYjdhNzYyNzYtMzc1YS03MThiLTUyZDktNDllYWU5YjI2M2E0XCIsXCJoYXNoXCI6XCJTcG9ydHNNYXRjaF9Nb3RvclNwb3J0c1JhY2VMaXN0X2I3YTc2Mjc2LTM3NWEtNzE4Yi01MmQ5LTQ5ZWFlOWIyNjNhNF80ODk0NzZBMUM3QUM1NzQ4XCIsXCJwcmltYXJ5RW50aXR5SW1hZ2VcIjpcIk9TQi5wQV9rdnVvWG9jZ1BTNXNETmlXRDZRLS0ucG5nXCIsXCJwcmltYXJ5RW50aXR5TmFtZVwiOlwiRm9ybXVsYSAxXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfOTFkMTkxMzAtYTQ0MC00NmVkLTgzYmMtZTIzOTc3M2YxZjk1XCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJNb3RvclNwb3J0c1JhY2VMaXN0XCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCIsXCJjbGlja1Rocm91Z2hVcmxcIjpcInNwb3J0cy9tb3RvcnNwb3J0cy9mb3JtdWxhMVwifSx7XCJ0YWJUeXBlXCI6XCJUZW5uaXNcIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPWVkMTg1Y2UzLTMyM2MtZWZhZC03ZGQ2LTg0MGMyYTI4ZTJkZiZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVubmlzJmNhcmRUeXBlPVJlY29tbWVuZGF0aW9uX0xlYWd1ZSZ2ZXJzaW9uPTNcIixcInByaW1hcnlDb2xvckhleFwiOlwiZmZmZmZmXCIsXCJwcmltYXJ5RW50aXR5SWRcIjpcImVkMTg1Y2UzLTMyM2MtZWZhZC03ZGQ2LTg0MGMyYTI4ZTJkZlwiLFwiaGFzaFwiOlwiU3BvcnRzTWF0Y2hfVGVubmlzX2VkMTg1Y2UzLTMyM2MtZWZhZC03ZGQ2LTg0MGMyYTI4ZTJkZl80ODk0NzZBMUM3QUM1NzQ4XCIsXCJwcmltYXJ5RW50aXR5SW1hZ2VcIjpcIkFBV3VKY0VcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJXVEEgMTI1SyBQdWVydG8gVmFsbGFydGEsIE1leGljb1wiLFwicHJpbWFyeUVudGl0eVR5cGVcIjpcIkxlYWd1ZVwiLFwieUlkXCI6XCJZXzcyZjQ1MDM0LTg3Y2UtNDMyNi1iZGU2LTQ5OTNmM2JkMTViNVwiLFwidGFiQ29udGVudFJlYXNvblwiOlwiVGVubmlzXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCIsXCJjbGlja1Rocm91Z2hVcmxcIjpcInNwb3J0cy90ZW5uaXMvZml4dHVyZXMvc3AtaWQtMzY1MzlcIn0se1widGFiVHlwZVwiOlwiVGVhbVZzVGVhbVwiLFwidGFiQ29udGVudFVybFwiOlwiaHR0cHM6Ly9hcGkubXNuLmNvbS9zcG9ydHMvYmxlbmRlZD9tYXJrZXQ9ZW4taW4mc2F0b3JpaWQ9MDJiZGUwMTEtMWU5ZC0zYWZmLTgzMDktN2QwN2Q0MDMxNzk4JnVzZXI9bS0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMyZsYXQ9MTIuOTU0OTkxMzQwNjM3MjA3Jmxvbmc9NzcuNjA4NTczOTEzNTc0MjImY2FudmFzPUVkZ2VOdHAmdGFidHlwZT1UZWFtVnNUZWFtJmNhcmRUeXBlPVJlY29tbWVuZGF0aW9uX0xlYWd1ZSZ2ZXJzaW9uPTNcIixcInByaW1hcnlDb2xvckhleFwiOlwiMzgwMDM4XCIsXCJwcmltYXJ5RW50aXR5SWRcIjpcIjAyYmRlMDExLTFlOWQtM2FmZi04MzA5LTdkMDdkNDAzMTc5OFwiLFwiaGFzaFwiOlwiU3BvcnRzTWF0Y2hfVGVhbVZzVGVhbV8wMmJkZTAxMS0xZTlkLTNhZmYtODMwOS03ZDA3ZDQwMzE3OThfNDg5NDc2QTFDN0FDNTc0OFwiLFwicHJpbWFyeUVudGl0eUltYWdlXCI6XCJPU0IuOVp4U0lFeG8zNDBIcWh3eW1OcUZMdy0tLnBuZ1wiLFwicHJpbWFyeUVudGl0eU5hbWVcIjpcIlByZW1pZXIgTGVhZ3VlXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfZDcxNGJmZTQtYjY5Ni00NGI1LTljMGItNTlkYzI3YjYzNjdhXCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZWFtVnNUZWFtXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPTE2ZmIxN2MwLTkwNTItMzkyZi1jY2ZlLWM0ZTExZjA3ODBjYyZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVhbVZzVGVhbSZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjExMTExMVwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCIxNmZiMTdjMC05MDUyLTM5MmYtY2NmZS1jNGUxMWYwNzgwY2NcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX1RlYW1Wc1RlYW1fMTZmYjE3YzAtOTA1Mi0zOTJmLWNjZmUtYzRlMTFmMDc4MGNjXzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLm1UYlF2Wkl2dkxrd1pvQmZVd3V3TFEtLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJJbmRpYW4gU3VwZXIgTGVhZ3VlXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfNGYzNWQ3MGYtODE1MC00MGY0LTliMTEtYzg5YzQ4MDAxMjMwXCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZWFtVnNUZWFtXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPTUwOTM5MzY3LTdlMDUtNTQzZi0zYTc5LTdkNGM5OTgyODVlOSZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVhbVZzVGVhbSZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjMzNjI5NVwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCI1MDkzOTM2Ny03ZTA1LTU0M2YtM2E3OS03ZDRjOTk4Mjg1ZTlcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX1RlYW1Wc1RlYW1fNTA5MzkzNjctN2UwNS01NDNmLTNhNzktN2Q0Yzk5ODI4NWU5XzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLlc1ZTVzbThZUFY1bmtLc3dfeXpCSGctLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJMYSBMaWdhXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfNTliMDYyNzItNjJmMS00YzcwLTliM2ItNTRmOTljMzFiMDA5XCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZWFtVnNUZWFtXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPWM1MjAzYmFhLTQzZTMtMzIyZC0zMTYzLTNlMTA3MTI2ZmNhYiZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVhbVZzVGVhbSZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjMzNjI5NVwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJjNTIwM2JhYS00M2UzLTMyMmQtMzE2My0zZTEwNzEyNmZjYWJcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX1RlYW1Wc1RlYW1fYzUyMDNiYWEtNDNlMy0zMjJkLTMxNjMtM2UxMDcxMjZmY2FiXzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLlBNSUhzSlBDYUJvOURia2R0Ym1BNmctLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJMaWd1ZSAxXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfMDVlYjUyOWUtZDI2MC00YjlkLTg3YzctOWMxZTRlNDJhZGYzXCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZWFtVnNUZWFtXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIkNyaWNrZXRcIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPWNhMDFmMGZkLTFkMzctMjYxNS00MTFmLWU3ZjJhMjk2YTczZiZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9Q3JpY2tldCZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcImZmZmZmZlwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJjYTAxZjBmZC0xZDM3LTI2MTUtNDExZi1lN2YyYTI5NmE3M2ZcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX0NyaWNrZXRfY2EwMWYwZmQtMWQzNy0yNjE1LTQxMWYtZTdmMmEyOTZhNzNmXzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLmRPbncyZHMwVElKd3RFd2VOdGpManctLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJQYWtpc3RhbiBTdXBlciBMZWFndWUgVDIwXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfNjFiNWM1M2QtNTFiOS00N2MxLTlmMDQtNDI3Nzk1ZTBlMmVhXCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJDcmlja2V0XCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPWNjYzZlOTY1LTQ3MGQtODYzZi02NmMxLTkxY2RhYTcyNjdjOCZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVhbVZzVGVhbSZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcImQyMDAwZVwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJjY2M2ZTk2NS00NzBkLTg2M2YtNjZjMS05MWNkYWE3MjY3YzhcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX1RlYW1Wc1RlYW1fY2NjNmU5NjUtNDcwZC04NjNmLTY2YzEtOTFjZGFhNzI2N2M4XzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLjZ5ZUpLdVBIWUppY1VXX2ZmdTNkSWctLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJCdW5kZXNsaWdhXCIsXCJwcmltYXJ5RW50aXR5VHlwZVwiOlwiTGVhZ3VlXCIsXCJ5SWRcIjpcIllfODJiYzhjZjUtODE3YS00Mzk3LTliODAtMjhjZWJkOGE1YTVkXCIsXCJ0YWJDb250ZW50UmVhc29uXCI6XCJUZWFtVnNUZWFtXCIsXCJ0YWJDb250ZW50VHlwZVwiOlwiUmVjb21tZW5kYXRpb25fTGVhZ3VlXCJ9LHtcInRhYlR5cGVcIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRVcmxcIjpcImh0dHBzOi8vYXBpLm1zbi5jb20vc3BvcnRzL2JsZW5kZWQ/bWFya2V0PWVuLWluJnNhdG9yaWlkPWVlZjEyZWYyLThkYmEtMWU3Yi1iNWM3LTg3ZjRiZTgxMTQ5NSZ1c2VyPW0tM0ZCMjg4QTc3RDdFNkZDMTNBMzc5QTEwN0MyQzZFMzMmbGF0PTEyLjk1NDk5MTM0MDYzNzIwNyZsb25nPTc3LjYwODU3MzkxMzU3NDIyJmNhbnZhcz1FZGdlTnRwJnRhYnR5cGU9VGVhbVZzVGVhbSZjYXJkVHlwZT1SZWNvbW1lbmRhdGlvbl9MZWFndWUmdmVyc2lvbj0zXCIsXCJwcmltYXJ5Q29sb3JIZXhcIjpcIjMzNjI5NVwiLFwicHJpbWFyeUVudGl0eUlkXCI6XCJlZWYxMmVmMi04ZGJhLTFlN2ItYjVjNy04N2Y0YmU4MTE0OTVcIixcImhhc2hcIjpcIlNwb3J0c01hdGNoX1RlYW1Wc1RlYW1fZWVmMTJlZjItOGRiYS0xZTdiLWI1YzctODdmNGJlODExNDk1XzQ4OTQ3NkExQzdBQzU3NDhcIixcInByaW1hcnlFbnRpdHlJbWFnZVwiOlwiT1NCLjZqRnBFcGZMeXFiM1kwNmM3cmJtb2ctLS5wbmdcIixcInByaW1hcnlFbnRpdHlOYW1lXCI6XCJVRUZBIENoYW1waW9ucyBMZWFndWVcIixcInByaW1hcnlFbnRpdHlUeXBlXCI6XCJMZWFndWVcIixcInlJZFwiOlwiWV9jMDI3YWYxZS01NjBhLTQ2YTMtYTE0NS1lODc5YWI3MDZhZDBcIixcInRhYkNvbnRlbnRSZWFzb25cIjpcIlRlYW1Wc1RlYW1cIixcInRhYkNvbnRlbnRUeXBlXCI6XCJSZWNvbW1lbmRhdGlvbl9MZWFndWVcIn0se1widGFiVHlwZVwiOlwiVGVhbVZzVGVhbVwiLFwidGFiQ29udGVudFVybFwiOlwiaHR0cHM6Ly9hcGkubXNuLmNvbS9zcG9ydHMvYmxlbmRlZD9tYXJrZXQ9ZW4taW4mc2F0b3JpaWQ9ZmNmMjZlNTktMWMyNy04YmM4LTIwNmYtZjhhZGIxNzBmNGEyJnVzZXI9bS0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzMyZsYXQ9MTIuOTU0OTkxMzQwNjM3MjA3Jmxvbmc9NzcuNjA4NTczOTEzNTc0MjImY2FudmFzPUVkZ2VOdHAmdGFidHlwZT1UZWFtVnNUZWFtJmNhcmRUeXBlPVJlY29tbWVuZGF0aW9uX0xlYWd1ZSZ2ZXJzaW9uPTNcIixcInByaW1hcnlDb2xvckhleFwiOlwiMTExMTExXCIsXCJwcmltYXJ5RW50aXR5SWRcIjpcImZjZjI2ZTU5LTFjMjctOGJjOC0yMDZmLWY4YWRiMTcwZjRhMlwiLFwiaGFzaFwiOlwiU3BvcnRzTWF0Y2hfVGVhbVZzVGVhbV9mY2YyNmU1OS0xYzI3LThiYzgtMjA2Zi1mOGFkYjE3MGY0YTJfNDg5NDc2QTFDN0FDNTc0OFwiLFwicHJpbWFyeUVudGl0eUltYWdlXCI6XCJPU0IuSjhTSm1tTnJHR2RLWHBOUXI4UnlVZy0tLnBuZ1wiLFwicHJpbWFyeUVudGl0eU5hbWVcIjpcIlVFRkEgRXVyb3BhIExlYWd1ZVwiLFwicHJpbWFyeUVudGl0eVR5cGVcIjpcIkxlYWd1ZVwiLFwieUlkXCI6XCJZX2IwYWY1YTgzLTE3NDEtNGYzZi05YzRiLTQzODRmOWMxYTM1NlwiLFwidGFiQ29udGVudFJlYXNvblwiOlwiVGVhbVZzVGVhbVwiLFwidGFiQ29udGVudFR5cGVcIjpcIlJlY29tbWVuZGF0aW9uX0xlYWd1ZVwifV19fSIsImRhdGFUeXBlIjoiU3BvcnRzVjIiLCJkYXRhVmVyc2lvbiI6MywiY2FyZElkIjo1NH0seyJpZCI6IkNhbm9uaWNhbE5hbWUtdG9wc3RvcmllcyIsInR5cGUiOiJUb3BpY0ZlZWQiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInN1YkNhcmRzIjpbeyJpZCI6IkJCMWlORWhkIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkFzc2FtIE1MQSBzYXlzIEhpbWFudGEgU2FybWEncyBsYXcgcmVwZWFsIG1vdmUgdGFyZ2V0cyBNdXNsaW1zLCBtYWtlcyAnVUNDJyBkYXJlIiwiYWJzdHJhY3QiOiJIYWZpeiBSYWZpcXVsIElzbGFtIHNhaWQgdGhlIEJKUCBnb3Zlcm5tZW50IGlzIGVtcGxveWluZyB0aGVzZSB0YWN0aWNzIGJlY2F1c2UgdGhlIGVsZWN0aW9ucyBhcmUgYXBwcm9hY2hpbmcuIiwicmVhZFRpbWVNaW4iOjIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbmV3cy9JbmRpYS9hc3NhbS1tbGEtc2F5cy1oaW1hbnRhLXNhcm1hLXMtbGF3LXJlcGVhbC1tb3ZlLXRhcmdldHMtbXVzbGltcy1tYWtlcy11Y2MtZGFyZS9hci1CQjFpTkVoZCIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjRUMDU6MjM6MTdaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjU0OSwiaGVpZ2h0IjozMDksInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy41ZWU2ODE3YjA0MDExNDM1ZDRkNjc4YTc5ZGJiM2UzOSZwaWQ9V2RwIiwidGl0bGUiOiJBSVVERiBNTEEgSGFmaXogUmFmaXF1bCBJc2xhbSIsImNhcHRpb24iOiJBSVVERiBNTEEgSGFmaXogUmFmaXF1bCBJc2xhbSIsImZvY2FsUmVnaW9uIjp7IngxIjoyNTQsIngyIjozODMsInkxIjo1MiwieTIiOjE4MX0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNTQ0ODM5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFQ0Y0Q0MiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzU0NDgzOSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRUNGNENDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFCM3JYIiwibmFtZSI6IkhpbmR1c3RhbiBUaW1lcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMThMd2JWLmltZyIsInByb2ZpbGVJZCI6InZpZC12Zmh2ZWR2anV4cnFxZTU3MHhqdXk1NjdpeDBzNTVqa3FxdmNpdGgwM204bjMyeThrdnBhIn0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxMCwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjYsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjQsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxLCJzdWJDb21tZW50U3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxLCJ0eXBlIjoiY29tbWVudCJ9XX0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfZTM0NTZlOTEtMjE1Zi00YTVjLWFiNzgtNjg3NDUwOTA3NWVmIiwiZmVlZE5hbWUiOiJJbmRpYSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQzLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlY29JZCI6IjdNRXBiTnVlcnhEZ0VHeFRWMWxQNFBpUFFtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlOamd3IiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IlVrcmFpbmUgY291bnRzIGNvc3Qgb2YgdHdvIHllYXJzIG9mIHdhciBhcyBhaWQgc2xvd3MsIFJ1c3NpYSBnYWlucyIsImFic3RyYWN0IjoiRGVzcGl0ZSBVa3JhaW5lJ3MgaW5pdGlhbCBkZWZpYW5jZSBhbmQgcmVzaWxpZW5jZSBpbiByZXBlbGxpbmcgUnVzc2lhJ3MgaW52YXNpb24gdHdvIHllYXJzIGFnbywgdGhlIG9uZ29pbmcgY29uZmxpY3QgaGFzIGxlZnQgdGhlIGNvdW50cnkgbW9yZSB2dWxuZXJhYmxlIHRoYW4gZXZlci4iLCJyZWFkVGltZU1pbiI6NCwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL3dvcmxkL3VrcmFpbmUtY291bnRzLWNvc3Qtb2YtdHdvLXllYXJzLW9mLXdhci1hcy1haWQtc2xvd3MtcnVzc2lhLWdhaW5zL2FyLUJCMWlOamd3IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yNFQwMTo0Mzo0OFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo2NzUsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy44NDU2YjRjNGE0OTljODIxYjExZmI0YTI2YTZhNzM5NyZwaWQ9V2RwIiwidGl0bGUiOiJVa3JhaW5lIGNvdW50cyBjb3N0IG9mIHR3byB5ZWFycyBvZiB3YXIgYXMgYWlkIHNsb3dzLCBSdXNzaWEgZ2FpbnMiLCJjYXB0aW9uIjoiVWtyYWluZSBjb3VudHMgY29zdCBvZiB0d28geWVhcnMgb2Ygd2FyIGFzIGFpZCBzbG93cywgUnVzc2lhIGdhaW5zIiwiZm9jYWxSZWdpb24iOnsieDEiOjc0NSwieDIiOjgzNSwieTEiOjEwMywieTIiOjE5M30sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNUQ0QzM4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFMEQ1QkQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzVENEMzOCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTBENUJEIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUF5RldHIiwibmFtZSI6IkluZGlhIFRvZGF5IiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExYTFSTEQuaW1nIiwicHJvZmlsZUlkIjoidmlkLXJldHQwZ2Zna3ZtNXNyN3JjZm5jOTZ2eHd1aTBrdnJ1ODZjc2k0aWVnOW41NzM3ZHY5OGEiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6MjksImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnRjZOIn0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjI5LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0Y2Ti1kYXJrIn19LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6OSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjksInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJkaXNhYmxlZCIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfYTEwMWU3YWYtZjlkMS00N2M0LTgxMjAtMjlhNDY4ODg4MDA3IiwiZmVlZE5hbWUiOiJXb3JsZCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQ0LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlY29JZCI6IjdNRXBiTnVlcnhEZ0VHeFRWMWxQNFBpUFFtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlNbXExIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IlRyaW5hbW9vbCBDcnVzaGVzIENvbmdyZXNzJyBIb3BlIGluIEJlbmdhbCwgU2F5cyAnV2lsbCBDb250ZXN0IEFsbCA0MiBMUyBTZWF0cyciLCJhYnN0cmFjdCI6IlRyaW5hbW9vbCBDb25ncmVzcyBsZWFkZXIgRGVyZWsgT+KAmUJyaWVuIG9uIEZyaWRheSBzYWlkIHRoZXJlIGhhcyBiZWVuIOKAnG5vIGNoYW5nZeKAnSBpbiB0aGUgcGFydHnigJlzIHN0YW5kIG9mIGNvbnRlc3RpbmcgYWxsIDQyIExvayBTYWJoYSBzZWF0cyBpbiBXZXN0IEJlbmdhbCwgYSBmZXcgaW4gQXNzYW0gYW5kIG9uZSBzZWF0IGluIE1lZ2hhbGF5YSwgYW1pZCByZXBvcnRzIGFib3V0IHRoZSBDb25ncmVzcyBzb29uIGZpbmFsaXNpbmcgaXRzIHNlYXQtc2hhcmluZyBhcnJhbmdlbWVudHMgd2l0aCB0aGUgcGFydHkuVGhlIENvbmdyZXNzIGFuZCB0aGUgTWFtYXRhIEJhbmVyamVlLWxlZCBUTUMsIHdoaWNoIGFyZSBwYXJ0IG9mIHRoZSBvcHBvc2l0aW9uIGJsb2MgSU5ESUEsIGFyZSBzYWlkIHRvIGhhdmUgcmV2aXZlZCB0aGVpciB0YWxrcyB0byB1bml0ZWRseSB0YWtlIG9uIHRoZS4uLiIsInJlYWRUaW1lTWluIjoxLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3MvcG9saXRpY3MvdHJpbmFtb29sLWNydXNoZXMtY29uZ3Jlc3MtaG9wZS1pbi1iZW5nYWwtc2F5cy13aWxsLWNvbnRlc3QtYWxsLTQyLWxzLXNlYXRzL2FyLUJCMWlNbXExIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QxNjo1NDoyMloiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo4MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5mYWY2Y2UxMjUzMDQ2ZTA0ZjlkODc0NTgzMGZhZWE1YyZwaWQ9V2RwIiwidGl0bGUiOiJFYXJsaWVyIGluIHRoZSBkYXksIHNvdXJjZXMgc2FpZCBkaXNjdXNzaW9ucyB3ZXJlIHVuZGVyd2F5IGJldHdlZW4gdGhlIENvbmdyZXNzIGFuZCB0aGUgVE1DIGZvciBzZWF0IHNoYXJpbmcgYW5kIHRoYXQgaXQgd291bGQgYmUgZmluYWxpc2VkIHNvb24uIChQVEkgRmlsZSkiLCJjYXB0aW9uIjoiRWFybGllciBpbiB0aGUgZGF5LCBzb3VyY2VzIHNhaWQgZGlzY3Vzc2lvbnMgd2VyZSB1bmRlcndheSBiZXR3ZWVuIHRoZSBDb25ncmVzcyBhbmQgdGhlIFRNQyBmb3Igc2VhdCBzaGFyaW5nIGFuZCB0aGF0IGl0IHdvdWxkIGJlIGZpbmFsaXNlZCBzb29uLiAoUFRJIEZpbGUpIiwiZm9jYWxSZWdpb24iOnsieDEiOjE2OCwieDIiOjMxMCwieTEiOjI3MywieTIiOjQxNX0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjM0UzMTM4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEOUQ5RDciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzNFMzEzOCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDlEOUQ3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFKVUZ4TSIsIm5hbWUiOiJOZXdzMTgiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQldEYlM1LmltZyIsInByb2ZpbGVJZCI6InZpZC1hYXhyNjd4ZzY1bTM3a204NTh1dDVjNHloNmNreTloYXl1bXMyMzdlbTh5cnVlZjJjZnhzIiwibGlnaHRUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjUwLCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0FaeiJ9LCJkYXJrVGhlbWVTVkdMb2dvIjp7IndpZHRoIjo1MCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dBWnotZGFyayJ9fSwiY2F0ZWdvcnkiOiJuZXdzIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjM2LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MzAsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjYsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxLCJzdWJDb21tZW50U3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxLCJ0eXBlIjoiY29tbWVudCJ9XX0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfZTM0NTZlOTEtMjE1Zi00YTVjLWFiNzgtNjg3NDUwOTA3NWVmIiwiZmVlZE5hbWUiOiJJbmRpYSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQ1LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlY29JZCI6IjdNRXBiTnVlcnhEZ0VHeFRWMWxQNFBpUFFtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIHJlcG9ydHMgb24gKioqVHJpbmFtb29sIENvbmdyZXNzJyoqKiAoVE1DKSBzdGFuZCBvZiAqKmNvbnRlc3RpbmcgYWxsIDQyIExvayBTYWJoYSBzZWF0cyoqIGluICpXZXN0IEJlbmdhbCosIGEgZmV3IGluICpBc3NhbSogYW5kIG9uZSBpbiAqTWVnaGFsYXlhKiwgaW4gdGhlIHVwY29taW5nIHBvbGxzLiBJdCBjaXRlcyAqKlRNQyBsZWFkZXIgRGVyZWsgTydCcmllbioqIGFzIHNheWluZyB0aGF0IHRoZXJlIGlzICoqXCJubyBjaGFuZ2VcIioqIGluIHRoaXMgcG9zaXRpb24sIGRlc3BpdGUgcmVwb3J0cyBvZiB0aGUgKipDb25ncmVzcyoqIGFuZCB0aGUgVE1DIHJldml2aW5nIHRoZWlyIHRhbGtzIHRvICoqdW5pdGUgYWdhaW5zdCB0aGUgQkpQLWxlZCBOREEqKi4gVGhlIFRNQyBoYXMgcmVwb3J0ZWRseSBzb3VnaHQgKip0d28gc2VhdHMgaW4gQXNzYW0gYW5kIG9uZSBpbiBNZWdoYWxheWEqKiBmb3Igc2VhdC1zaGFyaW5nLiAiLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaU5Na0YiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiSW5kaWEgcmVhY3RzIGFmdGVyIFVTIGNvcCBnZXRzIG9mZiBzY290LWZyZWUgaW4gSmFhaG5hdmkgS2FuZHVsYSBkZWF0aCBjYXNlIiwiYWJzdHJhY3QiOiJUaGUgU2VhdHRsZSBwb2xpY2Ugb2ZmaWNlciB3aG8gc3RydWNrIGFuZCBraWxsZWQgSW5kaWFuIHN0dWRlbnQgSmFhaG5hdmkgS2FuZHVsYSB3aWxsIG5vdCBmYWNlIGFueSBjcmltaW5hbCBjaGFyZ2VzIGR1ZSB0byBsYWNrIG9mIFwic3VmZmljaWVudFwiIGV2aWRlbmNlLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3MvSW5kaWEvaW5kaWEtcmVhY3RzLWFmdGVyLXVzLWNvcC1nZXRzLW9mZi1zY290LWZyZWUtaW4tamFhaG5hdmkta2FuZHVsYS1kZWF0aC1jYXNlL2FyLUJCMWlOTWtGIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yNFQwNToyMzo0MloiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6NTUwLCJoZWlnaHQiOjMwOSwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmRjZTI3YzlhZjBkNmIwMmI1OWM3MWY3YTViN2ViYzI1JnBpZD1XZHAiLCJ0aXRsZSI6IkEgcGhvdG8gb2YgSmFhaG5hdmkgS2FuZHVsYSBpcyBkaXNwbGF5ZWQgd2l0aCBmbG93ZXJzLCBKYW4uIDI5LCAyMDIzIGluIFNlYXR0bGUuIiwiY2FwdGlvbiI6IkEgcGhvdG8gb2YgSmFhaG5hdmkgS2FuZHVsYSBpcyBkaXNwbGF5ZWQgd2l0aCBmbG93ZXJzLCBKYW4uIDI5LCAyMDIzIGluIFNlYXR0bGUuIiwiZm9jYWxSZWdpb24iOnsieDEiOjM2MywieDIiOjQwNSwieTEiOjEzNSwieTIiOjE3N30sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMzU0NTY1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEMkRFRkIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM1NDU2NSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDJERUZCIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFCM3JYIiwibmFtZSI6IkhpbmR1c3RhbiBUaW1lcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMThMd2JWLmltZyIsInByb2ZpbGVJZCI6InZpZC12Zmh2ZWR2anV4cnFxZTU3MHhqdXk1NjdpeDBzNTVqa3FxdmNpdGgwM204bjMyeThrdnBhIn0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50Ijo5LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6NywidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MiwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzY4ZWUyYjY4LTc5YWMtNGRmOC1iMTFmLTYyMjEwMjhjMGMyOSIsImZlZWROYW1lIjoiTmV3cyIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQ2LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlY29JZCI6IjdNRXBiTnVlcnhEZ0VHeFRWMWxQNFBpUFFtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlOQVBZIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkluIHNldGJhY2sgZm9yIENvbmdyZXNzIGdvdnQgaW4gS2FybmF0YWthLCBCaWxsIG9uIHRlbXBsZSBmdW5kcyBkZWZlYXRlZCBpbiBjb3VuY2lsIiwiYWJzdHJhY3QiOiJUaGUgbGVnaXNsYXRpb24sIHByb3Bvc2luZyBhIENvbW1vbiBQb29sIEZ1bmQgdW5kZXIgSGluZHUgUmVsaWdpb3VzIEluc3RpdHV0aW9ucyBhbmQgQ2hhcml0YWJsZSBFbmRvd21lbnRzIERlcGFydG1lbnQgZm9yIGFpZGluZyByZWxpZ2lvdXMgYWN0aXZpdGllcyBpbiBLYXJuYXRha2EsIGhhcyBkcmF3biBmaXJlIGZyb20gdGhlIEJKUCIsInJlYWRUaW1lTWluIjozLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3Mvb3RoZXIvaW4tc2V0YmFjay1mb3ItY29uZ3Jlc3MtZ292dC1pbi1rYXJuYXRha2EtYmlsbC1vbi10ZW1wbGUtZnVuZHMtZGVmZWF0ZWQtaW4tY291bmNpbC9hci1CQjFpTkFQWSIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOnRydWUsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yNFQwMzoyMjoxNloiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTYwMCwiaGVpZ2h0Ijo5MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5kNDExY2ZiMmExOTI2ODA4NzVmZGNmOTM4ZjBkNWMwNyZwaWQ9V2RwIiwidGl0bGUiOiJJbiBzZXRiYWNrIGZvciBDb25ncmVzcyBnb3Z0IGluIEthcm5hdGFrYSwgQmlsbCBvbiB0ZW1wbGUgZnVuZHMgZGVmZWF0ZWQgaW4gY291bmNpbCIsImZvY2FsUmVnaW9uIjp7IngxIjoyNTgsIngyIjoxMjM4LCJ5MSI6MTU1LCJ5MiI6MzAwfSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMxRjU4NjkiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0QxRDlEQyIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMUY1ODY5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEMUQ5REMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTF4SzdSIiwibmFtZSI6IlRoZSBJbmRpYW4gRXhwcmVzcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWx0Nm9HLmltZyIsInByb2ZpbGVJZCI6InZpZC0wbjNyeXN0M2piNTRjZDI1cGk4N3NjeHA3aWpwcWZhanJiYjhpbWNnY2VoNjZoaWZmdjNzIn0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoyOSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjI1LCJ0eXBlIjoidXB2b3RlIn0seyJ0b3RhbENvdW50Ijo0LCJ0eXBlIjoiZG93bnZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MSwic3ViQ29tbWVudFN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MSwidHlwZSI6ImNvbW1lbnQifV19LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2UzNDU2ZTkxLTIxNWYtNGE1Yy1hYjc4LTY4NzQ1MDkwNzVlZiIsImZlZWROYW1lIjoiSW5kaWEiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjo0NywiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWNvSWQiOiI3TUVwYk51ZXJ4RGdFR3hUVjFsUDRQaVBRbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTkd6ViIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJQcml5YW5rYSBHYW5kaGkgSm9pbnMgUmFodWwncyBOeWF5YSBZYXRyYSBJbiBVUCdzIE1vcmFkYWJhZCwgQWtoaWxlc2ggWWFkYXYgVG8gRm9sbG93IiwiYWJzdHJhY3QiOiJDb25ncmVzcyBsZWFkZXIgUHJpeWFua2EgR2FuZGhpIFZhZHJhIGhhcyBqb2luZWQgQmhhcmF0IEpvZG8gTnlheSBZYXRyYSBsZWQgYnkgaGVyIE1QIGJyb3RoZXIgUmFodWwgR2FuZGhpIGluIFV0dGFyIFByYWRlc2gncyBNb3JhZGFiYWQsIGFuZCBzb29uLCB0aGUgcGFpciB3aWxsIGFkZHJlc3MgYSBwdWJsaWMgZXZlbnQuIiwicmVhZFRpbWVNaW4iOjEsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbmV3cy9JbmRpYS9wcml5YW5rYS1nYW5kaGktam9pbnMtcmFodWwtcy1ueWF5YS15YXRyYS1pbi11cC1zLW1vcmFkYWJhZC1ha2hpbGVzaC15YWRhdi10by1mb2xsb3cvYXItQkIxaU5HelYiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA1OjU2OjAzWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjo3MDAsImhlaWdodCI6NDAwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuMTc0MzZhNzU1YWM5Yzk2MjAzMWY1YzQyOTYwNTg3MDkmcGlkPVdkcCIsInRpdGxlIjoiUHJpeWFua2EgR2FuZGhpIEpvaW5zIFJhaHVsJ3MgTnlheWEgWWF0cmEgSW4gVVAncyBNb3JhZGFiYWQsIEFraGlsZXNoIFlhZGF2IFRvIEZvbGxvdyIsImZvY2FsUmVnaW9uIjp7IngxIjoyMjQsIngyIjoyNjksInkxIjoyNzEsInkyIjozMTZ9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzRCNDg1RCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjdGNUY3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM0QjQ4NUQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Y3RjVGNyIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkJCWDBaQmciLCJuYW1lIjoiWmVlIE5ld3MiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjFpTU5IbS5pbWciLCJwcm9maWxlSWQiOiJ2aWQtcmJkaGR5aXZuNjRwZWY0amZhYWdkNmdxNTB2c2h2cGZxdDd1bWtrZ25janJjaHVnN3U3cyIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjoyNiwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2d5eksifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6MjYsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNneXpLLWRhcmsifX0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2UzNDU2ZTkxLTIxNWYtNGE1Yy1hYjc4LTY4NzQ1MDkwNzVlZiIsImZlZWROYW1lIjoiSW5kaWEiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjo0OCwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWNvSWQiOiI3TUVwYk51ZXJ4RGdFR3hUVjFsUDRQaVBRbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTndpdCIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJUZWphc2h3aSBZYWRhdiBMYW5kcyBpbiBTb3VwIGFzIEhpcyBQaG90b3MgU2hhcmluZyBEaWFzIHdpdGggU2hhcnBzaG9vdGVyIEdvZXMgVmlyYWwgfCBXaG8gaXMgTW9oYW1tYWQgS2FpZiIsImFic3RyYWN0IjoiRm9ybWVyIEJpaGFyIERlcHV0eSBDaGllZiBNaW5pc3RlciBhbmQgUkpEIExlYWRlciBUZWphc2h3YWkgWWFkYXYgZm91bmQgaGltc2VsZiBhbWlkIGEgcmFnaW5nIGNvbnRyb3ZlcnN5IG9uIEZyaWRheSBhZnRlciBoZSB3YXMgc3BvdHRlZCBpbiBhIG1lZXRpbmcgd2l0aCBzaGFycHNob290ZXIgYW5kIG11cmRlciBhY2N1c2VkIE1vaGFtbWFkIEthaWYgYWxpYXMgQnVudHkuSW4gdmlzdWFscyBzaGFyZWQgYnkgTmF0aW9uYWwgZ2VuZXJhbCBzZWNyZXRhcnkgb2YgQkpQ4oCZcyBPQkMgTW9yY2hhIE5pa2hpbCBBbmFuZCwgVGVqYXNod2kgY2FuIGJlIHNlZW4gZXhjaGFuZ2luZyBncmVldGluZ3MgYW5kIGNsaWNraW5nIHBob3RvZ3JhcGhzIHdpdGggdGhlIGNyaW1pbmFsLlJKRCBpcyBub3QgYSBwYXJ0eSB3aXRoIG5ldyBvdXRsb29rIGluIFRlamFzaHdpJ3MgbGVhZGVyc2hpcCBidXQgaXQuLi4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL3BvbGl0aWNzL3RlamFzaHdpLXlhZGF2LWxhbmRzLWluLXNvdXAtYXMtaGlzLXBob3Rvcy1zaGFyaW5nLWRpYXMtd2l0aC1zaGFycHNob290ZXItZ29lcy12aXJhbC13aG8taXMtbW9oYW1tYWQta2FpZi9hci1CQjFpTndpdCIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjRUMDU6MzM6NTVaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjEyMDAsImhlaWdodCI6ODAwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuNjIyNzU3Mjk3NTA4Zjc3NGViMjIyZmM3NzFjMmVmZmEmcGlkPVdkcCIsInRpdGxlIjoiUkpEIExlYWRlciBUZWphc2h3aSBZYWRhdiB3aXRoIFNoYXJwIHNob290ZXIgTW9oYW1tYWQgS2FpZi4gKFgpIiwiY2FwdGlvbiI6IlJKRCBMZWFkZXIgVGVqYXNod2kgWWFkYXYgd2l0aCBTaGFycCBzaG9vdGVyIE1vaGFtbWFkIEthaWYuIChYKSIsImZvY2FsUmVnaW9uIjp7IngxIjozMCwieDIiOjEwMzMsInkxIjo1NiwieTIiOjc4Nn0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNjc0RTE5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFNERDRDIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzY3NEUxOSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTREQ0QyIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFKVUZ4TSIsIm5hbWUiOiJOZXdzMTgiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQldEYlM1LmltZyIsInByb2ZpbGVJZCI6InZpZC1hYXhyNjd4ZzY1bTM3a204NTh1dDVjNHloNmNreTloYXl1bXMyMzdlbTh5cnVlZjJjZnhzIiwibGlnaHRUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjUwLCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0FaeiJ9LCJkYXJrVGhlbWVTVkdMb2dvIjp7IndpZHRoIjo1MCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dBWnotZGFyayJ9fSwiY2F0ZWdvcnkiOiJuZXdzIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjUsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50Ijo1LCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2UzNDU2ZTkxLTIxNWYtNGE1Yy1hYjc4LTY4NzQ1MDkwNzVlZiIsImZlZWROYW1lIjoiSW5kaWEiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjo0OSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWNvSWQiOiI3TUVwYk51ZXJ4RGdFR3hUVjFsUDRQaVBRbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTW1adSIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJXaWxsIGRlY2lkZSBuZXh0IGNvdXJzZSBvZiBhY3Rpb24gb24gRmViIDI5OiBGYXJtZXIgbGVhZGVycyBvbiAnRGVsaGkgQ2hhbG8nIGNhbGwiLCJhYnN0cmFjdCI6IkNoYW5kaWdhcmgsIEZlYiAyMyAoUFRJKSBGYXJtZXJzIHByb3Rlc3RpbmcgdG8gcHJlc3MgdGhlIENlbnRyZSBmb3IgdGhlaXIgdmFyaW91cyBkZW1hbmRzIHdpbGwgc3RheSBwdXQgYXQgdGhlIHR3byBwcm90ZXN0IHNpdGVzIG9uIHRoZSBQdW5qYWItSGFyeWFuYSBib3JkZXIgdGlsbCBGZWJydWFyeSAyOSB3aGVuIHRoZSBuZXh0IGNvdXJzZSBvZiBhY3Rpb24gd2lsbCBiZSBkZWNpZGVkLCB0aGVpciBsZWFkZXIgU2Fyd2FuIFNpbmdoIFBhbmRoZXIgc2FpZCBvbiBGcmlkYXkiLCJyZWFkVGltZU1pbiI6MywidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL0luZGlhL3dpbGwtZGVjaWRlLW5leHQtY291cnNlLW9mLWFjdGlvbi1vbi1mZWItMjktZmFybWVyLWxlYWRlcnMtb24tZGVsaGktY2hhbG8tY2FsbC9hci1CQjFpTW1adSIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMjI6NTA6MDVaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjQxNjksImhlaWdodCI6MjgzMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmNmOTc5YTk0Nzc1YTU2N2NiNGQ4ZThmOGIxNjQ1NjRmJnBpZD1XZHAiLCJ0aXRsZSI6IldpbGwgZGVjaWRlIG5leHQgY291cnNlIG9mIGFjdGlvbiBvbiBGZWIgMjk6IEZhcm1lciBsZWFkZXJzIG9uICdEZWxoaSBDaGFsbycgY2FsbCIsImZvY2FsUmVnaW9uIjp7IngxIjo1MiwieDIiOjMxOTEsInkxIjo5MzgsInkyIjoxMzM3fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyNDIzMkYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0VCRDRCQiIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjQyMzJGIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFQkQ0QkIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTE1azdBMSIsIm5hbWUiOiJQcmVzcyBUcnVzdCBvZiBJbmRpYSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMTVrY1BqLmltZyIsInByb2ZpbGVJZCI6InZpZC1nbnYyMncyams4ZXFoa3d3NnBqZ2dpdjYyaDJ4ZGVocXBlMzN4MDY3anU3N2thaTYyOXRhIn0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2UzNDU2ZTkxLTIxNWYtNGE1Yy1hYjc4LTY4NzQ1MDkwNzVlZiIsImZlZWROYW1lIjoiSW5kaWEiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjo1MCwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWNvSWQiOiI3TUVwYk51ZXJ4RGdFR3hUVjFsUDRQaVBRbSIsInNvdXJjZSI6Im1zbiIsImhpZ2hsaWdodHMiOlt7InRleHQiOiJUaGUgYXJ0aWNsZSByZXBvcnRzIG9uIHRoZSBvbmdvaW5nICoqKmZhcm1lciBwcm90ZXN0KioqIGF0IHRoZSAqKlB1bmphYi1IYXJ5YW5hIGJvcmRlcioqIG92ZXIgdmFyaW91cyBkZW1hbmRzLiBJdCBhbm5vdW5jZXMgdGhhdCB0aGUgKipTYW15dWt0YSBLaXNhbiBNb3JjaGEgKE5vbi1Qb2xpdGljYWwpKiogYW5kICoqS2lzYW4gTWF6ZG9vciBNb3JjaGEgKEtNTSkqKiwgdGhlIG1haW4gZmFybWVyIGZvcnVtcywgaGF2ZSBkZWNpZGVkIHRvICoqc3RheSBwdXQgYXQgdGhlIHByb3Rlc3Qgc2l0ZXMgdGlsbCBGZWJydWFyeSAyOSoqIGFuZCBhbm5vdW5jZSB0aGUgbmV4dCBjb3Vyc2Ugb2YgYWN0aW9uIHRoZW4uIEl0IGRldGFpbHMgdGhlIHBsYW5uZWQgYWN0aXZpdGllcyBmb3IgdGhlIG5leHQgZmV3IGRheXMsIHN1Y2ggYXMgYSAqKmNhbmRsZSBtYXJjaCoqIG9uIEZlYnJ1YXJ5IDI0LCAqKnNlbWluYXJzKiogb24gRmVicnVhcnkgMjUsICoqZWZmaWd5IGJ1cm5pbmcqKiBvbiBGZWJydWFyeSAyNiwgYW5kICoqbWVldGluZ3MqKiBvZiB0aGUgZmFybWVyIGZvcnVtcy4gSXQgYWxzbyBoaWdobGlnaHRzIHRoZSBkaXNwdXRlIG92ZXIgdGhlICoqZGVhdGggb2YgU2h1YmhrYXJhbiBTaW5naCoqLCBhIHByb3Rlc3RlciB3aG8gd2FzIGtpbGxlZCBpbiBjbGFzaGVzIG9uIFdlZG5lc2RheSwgYW5kIHRoZSBkZW1hbmQgZm9yIHRoZSAqKnN0YXRlIGdvdmVybm1lbnQgdG8gcmVnaXN0ZXIgYW4gRklSKiogYWdhaW5zdCB0aGUgc2VjdXJpdHkgcGVyc29ubmVsIGZyb20gSGFyeWFuYS4gSXQgbWVudGlvbnMgdGhlICoqY29tcGVuc2F0aW9uIG9mIFJzIDEgY3JvcmUgYW5kIGEgZ292ZXJubWVudCBqb2IqKiBhbm5vdW5jZWQgYnkgdGhlICoqUHVuamFiIENoaWVmIE1pbmlzdGVyKiogZm9yIFNpbmdoJ3Mgc2lzdGVyLiBJdCBzdW1tYXJpemVzIHRoZSBtYWluIGRlbWFuZHMgb2YgdGhlIGZhcm1lcnMsIGluY2x1ZGluZyBhICoqbGVnYWwgZ3VhcmFudGVlIGZvciBNaW5pbXVtIFN1cHBvcnQgUHJpY2UqKiwgYSAqKmZhcm0gbG9hbiB3YWl2ZXIqKiwgYW5kIHRoZSAqKmltcGxlbWVudGF0aW9uIG9mIHRoZSBTd2FtaW5hdGhhbiBDb21taXNzaW9uJ3MgcmVjb21tZW5kYXRpb25zKiouICIsImluZGV4IjowfV19LHsiaWQiOiJCQjFpTnZwbCIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJLb3RhIEdvdnQgU2Nob29sIFRlYWNoZXJzICdGb3JjZWQnIFN0dWRlbnRzIHRvICdPZmZlciBOYW1heicsICdDb252ZXJ0IHRvIElzbGFtJzsgT25lIFByb21vdGVkICdMb3ZlIEppaGFkJzsgRWR1IE1pbmlzdGVyIFJlYWN0cyIsImFic3RyYWN0IjoiUmFqYXN0aGFuIEVkdWNhdGlvbiBNaW5pc3RlciBNYWRhbiBEaWxhd2FyIGhhcyBzdXNwZW5kZWQgdHdvIEtvdGEtYmFzZWQgZ292ZXJubWVudCBzY2hvb2wgdGVhY2hlcnMgYW5kIGluaXRpYXRlZCBhbiBpbnF1aXJ5IGFnYWluc3QgYSB0aGlyZCBmb3IgdGhlaXIgYWxsZWdlZCBpbnZvbHZlbWVudCBpbiByZWxpZ2lvdXMgY29udmVyc2lvbiwgbG92ZSBqaWhhZCwgYW5kIHRpZXMgdG8gYmFubmVkIGppaGFkaSBvdXRmaXRzLlRoZSBzdXNwZW5zaW9uIG9yZGVycyBvZiB0aGUgdGVhY2hlcnMsIHBvc3RlZCBhdCBhIHNjaG9vbCBpbiBLb3Rh4oCZcyBTYW5nb2QgYmxvY2ssIHdlcmUgaXNzdWVkIG9uIFRodXJzZGF5IG5pZ2h0IGJ5IHRoZSBLb3RhIGVkdWNhdGlvbiBvZmZpY2VyIChzZWNvbmRhcnkpLk1pbmlzdGVyIE1hZGFuIERpbGF3YXIgcmVsZWFzZWQgYSB2aWRlbyBzdGF0ZW1lbnQgb24uLi4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL0luZGlhL2tvdGEtZ292dC1zY2hvb2wtdGVhY2hlcnMtZm9yY2VkLXN0dWRlbnRzLXRvLW9mZmVyLW5hbWF6LWNvbnZlcnQtdG8taXNsYW0tb25lLXByb21vdGVkLWxvdmUtamloYWQtZWR1LW1pbmlzdGVyLXJlYWN0cy9hci1CQjFpTnZwbCIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjRUMDM6NTg6MzRaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjEyMDAsImhlaWdodCI6ODAwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuNzg2ZmMwYmYxNmJkNWIzYmJiNWQwOGRkOGRmMzU0NjcmcGlkPVdkcCIsInRpdGxlIjoiUmFqYXN0aGFuIEVkdWNhdGlvbiBNaW5pc3RlciBNYWRhbiBEaWxhd2FyIHNhaWQgSGluZHUgZ2lybHMgd2VyZSBiZWluZyBmb3JjZSB0byBvZmZlciAnTmFtYWF6JyBpbiB0aGUgS290YSBzY2hvb2wuIChQaG90bzogWCkiLCJjYXB0aW9uIjoiUmFqYXN0aGFuIEVkdWNhdGlvbiBNaW5pc3RlciBNYWRhbiBEaWxhd2FyIHNhaWQgSGluZHUgZ2lybHMgd2VyZSBiZWluZyBmb3JjZSB0byBvZmZlciAnTmFtYWF6JyBpbiB0aGUgS290YSBzY2hvb2wuIChQaG90bzogWCkiLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NDQ3LCJ4MiI6NjcwLCJ5MSI6MjQ4LCJ5MiI6NDcxfSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzRjRCNUMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Y3RUZFRCIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjM0Y0QjVDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGN0VGRUQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQUpVRnhNIiwibmFtZSI6Ik5ld3MxOCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCV0RiUzUuaW1nIiwicHJvZmlsZUlkIjoidmlkLWFheHI2N3hnNjVtMzdrbTg1OHV0NWM0eWg2Y2t5OWhheXVtczIzN2VtOHlydWVmMmNmeHMiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6NTAsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnQVp6In0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjUwLCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0Faei1kYXJrIn19LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MTEsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50Ijo5LCJ0eXBlIjoidXB2b3RlIn0seyJ0b3RhbENvdW50IjoyLCJ0eXBlIjoiZG93bnZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfZTM0NTZlOTEtMjE1Zi00YTVjLWFiNzgtNjg3NDUwOTA3NWVmIiwiZmVlZE5hbWUiOiJJbmRpYSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjUxLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlY29JZCI6IjdNRXBiTnVlcnhEZ0VHeFRWMWxQNFBpUFFtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlOSUtjIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6Ik5hc2VlcnVkZGluIFNoYWggZ2V0cyBhbmdyeSBhcyBmYW5zIHRyeSB0byBjbGljayBzZWxmaWVzIHdpdGggaGltIGF0IERlbGhpIGFpcnBvcnQ6IOKAmFlvdSBoYXZlIHNwb2lsZWQgbXkgbW9vZCciLCJhYnN0cmFjdCI6IkludGVybmV0IGhhcyBzdXBwb3J0ZWQgTmFzZWVydWRkaW4gU2hhaCBhZnRlciBoZSBnb3QgYW5ncnkgYXQgZmFucyBvdmVyIGNsaWNraW5nIHNlbGZpZXMuIFRoZSBpbmNpZGVudCB0b29rIHBsYWNlIGF0IHRoZSBEZWxoaSBhaXJwb3J0LiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3MvSW5kaWEvbmFzZWVydWRkaW4tc2hhaC1nZXRzLWFuZ3J5LWFzLWZhbnMtdHJ5LXRvLWNsaWNrLXNlbGZpZXMtd2l0aC1oaW0tYXQtZGVsaGktYWlycG9ydC15b3UtaGF2ZS1zcG9pbGVkLW15LW1vb2QvYXItQkIxaU5JS2MiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA1OjM3OjI0WiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjo1NDksImhlaWdodCI6MzA5LCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuY2U5ZDU2MTE0ZTVkN2Y4NGY0ZGZmZmUxNWM3ZDY4NzQmcGlkPVdkcCIsInRpdGxlIjoiTmFzZWVydWRkaW4gU2hhaCBhdCB0aGUgRGVsaGkgYWlycG9ydC4iLCJjYXB0aW9uIjoiTmFzZWVydWRkaW4gU2hhaCBhdCB0aGUgRGVsaGkgYWlycG9ydC4iLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6MjY0LCJ4MiI6MzAzLCJ5MSI6NDQsInkyIjo4M30sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDIzMzMzIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFNkU1RTUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQyMzMzMyIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTZFNUU1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFCM3JYIiwibmFtZSI6IkhpbmR1c3RhbiBUaW1lcyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMThMd2JWLmltZyIsInByb2ZpbGVJZCI6InZpZC12Zmh2ZWR2anV4cnFxZTU3MHhqdXk1NjdpeDBzNTVqa3FxdmNpdGgwM204bjMyeThrdnBhIn0sImNhdGVnb3J5IjoibmV3cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50Ijo0LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MiwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MiwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2FkNzIyMDYyLWM1N2YtNDlhYi05MTkyLWRhZWFkNzNiNzE3ZCIsImZlZWROYW1lIjoiQm9sbHl3b29kIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6NTIsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVjb0lkIjoiN01FcGJOdWVyeERnRUd4VFYxbFA0UGlQUW0iLCJzb3VyY2UiOiJtc24ifSx7ImlkIjoiQkIxaU5jQWoiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiV2F5bmUgTGFQaWVycmUsIEV4LU5SQSBDaGllZiwgRm91bmQgTGlhYmxlIEluIExhd3N1aXQgT3ZlciBMYXZpc2ggU3BlbmRpbmcsIENvc3QgR3VuIFJpZ2h0cyBHcm91cCAkNS40IE1pbGxpb24iLCJhYnN0cmFjdCI6IlRoZSBqdXJ5IHNhaWQgdGhhdCBMYVBpZXJyZSBoYWQgYWxyZWFkeSByZXBhaWQgdGhlIE5SQSBhIGxpdHRsZSBtb3JlIHRoYW4gJDEgbWlsbGlvbiwgYW5kIGEganVkZ2Ugd2lsbCB1bHRpbWF0ZWx5IGRlY2lkZSBob3cgbXVjaCBoZSBtdXN0IHBheSB0aGUgZ3JvdXAuIEl0IGFsc28gZm91bmQgdGhhdCBmb3JtZXIgTlJBIHRyZWFzdXJlciBhbmQgZm9ybWVyIENGTyBXaWxzb24gUGhpbGxpcHMgY29zdCB0aGUgb3JnYW5pemF0aW9uICQyIG1pbGxpb24gdGhyb3VnaCBtaXNtYW5hZ2VtZW50LiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3Mvb3RoZXIvd2F5bmUtbGFwaWVycmUtZXgtbnJhLWNoaWVmLWZvdW5kLWxpYWJsZS1pbi1sYXdzdWl0LW92ZXItbGF2aXNoLXNwZW5kaW5nLWNvc3QtZ3VuLXJpZ2h0cy1ncm91cC01LTQtbWlsbGlvbi9hci1CQjFpTmNBaiIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMjM6MzM6MjlaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjEyODAsImhlaWdodCI6NzIwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuNWMzNzIyYzIwZTQ2NjRiZTExNWEwNjcxODUzNjM4NDAmcGlkPVdkcCIsInRpdGxlIjoid2F5bmUgbGFwaWVycmUsIGV4LW5yYSBjaGllZiwgZm91bmQgbGlhYmxlIGluIGxhd3N1aXQgb3ZlciBsYXZpc2ggc3BlbmRpbmcsIGNvc3QgZ3VuIHJpZ2h0cyBncm91cCAkNS40IG1pbGxpb24iLCJjYXB0aW9uIjoid2F5bmUgbGFwaWVycmUsIGV4LW5yYSBjaGllZiwgZm91bmQgbGlhYmxlIGluIGxhd3N1aXQgb3ZlciBsYXZpc2ggc3BlbmRpbmcsIGNvc3QgZ3VuIHJpZ2h0cyBncm91cCAkNS40IG1pbGxpb24iLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6MjU0LCJ4MiI6NjQ1LCJ5MSI6MjA0LCJ5MiI6NTk1fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyNzI1MkMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0ZGRTNENiIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjcyNTJDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGRkUzRDYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTEwYkhzMSIsIm5hbWUiOiJUaW1lcyBOb3ciLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTEwYkZwQy5pbWciLCJwcm9maWxlSWQiOiJ2aWQtanNoazlwdTV0OTZhNjhoOHdkcjZlMjVmZzBkM2ZxdjJkZHJ2cXI3NWhicXQ5anYzczgwYSJ9LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6Miwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjIsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfNjhlZTJiNjgtNzlhYy00ZGY4LWIxMWYtNjIyMTAyOGMwYzI5IiwiZmVlZE5hbWUiOiJOZXdzIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6NTMsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVjb0lkIjoiN01FcGJOdWVyeERnRUd4VFYxbFA0UGlQUW0iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiKipKdXJ5IHZlcmRpY3Q6KiogQSBOZXcgWW9yayBzdGF0ZSBqdXJ5IGZvdW5kIHRoYXQgZm9ybWVyIE5SQSBjaGllZiBXYXluZSBMYVBpZXJyZSBhbmQgZm9ybWVyIHRyZWFzdXJlciBXaWxzb24gUGhpbGxpcHMgbWlzbWFuYWdlZCB0aGUgZ3VuIHJpZ2h0cyBncm91cCBhbmQgY29zdCBpdCAkNy40IG1pbGxpb24gaW4gdG90YWwuIExhUGllcnJlIGhhZCBhbHJlYWR5IHJlcGFpZCAkMSBtaWxsaW9uIHRvIHRoZSBOUkEuXG5cbioqQ2l2aWwgY29ycnVwdGlvbiBjYXNlOioqIFRoZSBsYXdzdWl0IHdhcyBmaWxlZCBpbiAyMDIwIGJ5IE5ldyBZb3JrIEF0dG9ybmV5IEdlbmVyYWwgTGV0aXRpYSBKYW1lcywgd2hvIGFjY3VzZWQgdGhlIE5SQSBvZiBsZXR0aW5nIHRvcCBleGVjdXRpdmVzIGRpdmVydCBtaWxsaW9ucyBvZiBkb2xsYXJzIGZvciBsdXh1cmllcy4gVGhlIGRlZmVuc2UgbGF3eWVycyBjYWxsZWQgdGhlIGxhd3N1aXQgYSBwb2xpdGljYWwgXCJ3aXRjaCBodW50XCIuXG5cbioqTlJBJ3MgZnV0dXJlOioqIEphbWVzIG9yaWdpbmFsbHkgc291Z2h0IHRvIGRpc3NvbHZlIHRoZSBOUkEsIGJ1dCB0aGUganVkZ2UgaW4gMjAyMiBzYWlkIHNoZSBoYWQgbm90IHNob3duIHN1ZmZpY2llbnQgcHVibGljIGhhcm0gdG8ganVzdGlmeSBhIFwiY29ycG9yYXRlIGRlYXRoIHBlbmFsdHlcIi4gVGhlIE5SQSBoYXMgc3RydWdnbGVkIGluIHJlY2VudCB5ZWFycywgd2l0aCByZXZlbnVlIGRvd24gNDQlIHNpbmNlIDIwMTYgYW5kIG1lbWJlcnNoaXAgZHJvcHBpbmcgYnkgbmVhcmx5IG9uZS10aGlyZCBzaW5jZSAyMDE4LiAiLCJpbmRleCI6MH1dfV0sImZlZWQiOnsiaWQiOiJZXzBiNDk1YWQzLTliZWItNDVmOC05MjE0LWM4ZTk1YWEyNDY4ZiIsImZlZWROYW1lIjoiVG9wIHN0b3JpZXMiLCJjYW5vbmljYWxOYW1lIjoidG9wc3RvcmllcyIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQyLCJpc1RyaWdnZXJlZEJ5Q2xpZW50IjpmYWxzZX0seyJpZCI6IkJCMWlMa2IxIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6Ikdvb2dsZSdzIEFJIGNoYXRib3QgR2VtaW5pIHZpb2xhdGVzIEluZGlhJ3MgSVQgbGF3czogUmFqZWV2IENoYW5kcmFzZWtoYXIiLCJhYnN0cmFjdCI6Ik5FVyBERUxISTogVW5pb24gTWluaXN0ZXIgb2YgU3RhdGUgZm9yIEVsZWN0cm9uaWNzIGFuZCBUZWNobm9sb2d5IFJhamVldiBDaGFuZHJhc2VraGFyIG9uIEZyaWRheSBleHByZXNzZWQgY29uY2VybiBvdmVyIHRoZSBwb3RlbnRpYWwgdmlvbGF0aW9uIG9mIEluZGlhbiBJVCBsYXdzIGJ5IEdvb2dsZSdzIEdlbWluaSBBSSBjaGF0Ym90LiBIaXMgcmVhY3Rpb24gY29tZXMgYWZ0ZXIgdXNlcnMgb24gdGhlIHNvY2lhbCBtZWRpYSBwbGF0Zm9ybSBYIHBvc3RlZCBHZW1pbmkgQUkgcmVzcG9uc2VzIHJlZ2FyZGluZyBQcmltZSBNaW5pc3RlciBOYXJlbmRyYSBNb2RpIGFuZCBvdGhlciB3ZWxsLWtub3duIHBvbGl0aWNhLi4uIiwicmVhZFRpbWVNaW4iOjEsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbmV3cy9JbmRpYS9nb29nbGUtcy1haS1jaGF0Ym90LWdlbWluaS12aW9sYXRlcy1pbmRpYS1zLWl0LWxhd3MtcmFqZWV2LWNoYW5kcmFzZWtoYXIvYXItQkIxaUxrYjEiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDExOjUxOjIyWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoyODAsImhlaWdodCI6MTk5LCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuMWQyNTA0ODY0NDc2ZThjZjNkZWQyYTUwMjk3ZWY1OWMmcGlkPVdkcCIsInRpdGxlIjoiR29vZ2xlJ3MgQUkgY2hhdGJvdCBHZW1pbmkgdmlvbGF0ZXMgSW5kaWEncyBJVCBsYXdzOiBSYWplZXYgQ2hhbmRyYXNla2hhciIsImZvY2FsUmVnaW9uIjp7IngxIjoxMjAsIngyIjoxODIsInkxIjozNiwieTIiOjk4fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyQTNCNjkiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q1RTFFNiIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMkEzQjY5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNENUUxRTYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTE4UlJ1VyIsIm5hbWUiOiJUaGUgTmV3IEluZGlhbiBFeHByZXNzIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExOFJJRW8uaW1nIiwicHJvZmlsZUlkIjoidmlkLTN5dnNpM2l0dWtpMmEybW1rY2RzeTY4eTRlY3Z3c3liaDNhcDhuajIwM21nbWM2YWVodXMifSwiY2F0ZWdvcnkiOiJuZXdzIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjEsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxLCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzQxZTM2OWEzLWE3MzQtNGM5Zi04YzA3LTlkMmYxYzBmYjU1NCIsImZlZWROYW1lIjoiR2FkZ2V0cyIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjE1LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6IlRlY2hub2xvZ3kiLCJ0aW1lIjoiIn19XSwicmkiOiIyMTMsMjI2IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiKioqUmFqZWV2IENoYW5kcmFzZWtoYXIqKiosIHRoZSBVbmlvbiBNaW5pc3RlciBvZiBTdGF0ZSBmb3IgRWxlY3Ryb25pY3MgYW5kIFRlY2hub2xvZ3ksICoqd2FybmVkIEdvb2dsZSoqIGFib3V0IHRoZSAqKnBvdGVudGlhbCB2aW9sYXRpb24gb2YgSW5kaWFuIElUIGxhd3MqKiBieSBpdHMgKipHZW1pbmkgQUkgY2hhdGJvdCoqLiBIZSBjaXRlZCB0aGUgKipJbnRlcm1lZGlhcnkgUnVsZXMgKElUIHJ1bGVzKSoqIGFuZCB0aGUgKipDcmltaW5hbCBjb2RlKiogYXMgdGhlIHNvdXJjZXMgb2YgdGhlIHZpb2xhdGlvbi4gSGlzIHdhcm5pbmcgY2FtZSBhZnRlciB1c2VycyBvbiAqKlgqKiBwb3N0ZWQgKipHZW1pbmkgQUkgcmVzcG9uc2VzKiogb24gKipwb2xpdGljYWwgZmlndXJlcyoqIGZyb20gSW5kaWEgYW5kIG90aGVyIGNvdW50cmllcywgd2hpY2ggd2VyZSBkZWVtZWQgKiptYWxpY2lvdXMgYW5kIHdva2UqKiBieSB0aGUgdXNlcnMuIEdvb2dsZSBoYWQgZWFybGllciAqKnBhdXNlZCB0aGUgaW1hZ2UgZ2VuZXJhdGlvbiBmZWF0dXJlKiogb2YgR2VtaW5pIEFJIGR1ZSB0byAqKmluYWNjdXJhY2llcyoqIGluIEFJLWdlbmVyYXRlZCAqKmhpc3RvcmljYWwgaW1hZ2VzKiogdGhhdCBkZXBpY3RlZCBzcGVjaWZpYyB3aGl0ZSBmaWd1cmVzIGFzICoqcGVvcGxlIG9mIGNvbG91cioqLiAiLCJpbmRleCI6MH1dfSx7InR5cGUiOiJjbXNhZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MH0seyJpZCI6IkJCMWlNcmNGIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IlBTTCAyMDI0OiBIYXdrLUV5ZSBJc3N1ZXMgQXBvbG9neSBUbyBQQ0IgRm9sbG93aW5nIE1pc3Rha2UgV2hpY2ggQ29zdGVkIElzbGFtYWJhZCBVbml0ZWQgQSBMb3NzIEFnYWluc3QgUXVldHRhIEdsYWRpYXRvciIsImFic3RyYWN0IjoiVGhlIGZpZWxkaW5nIHRlYW0gYW5kIHVtcGlyZXMgd2VyZSB2aXNpYmx5IGluIGEgc3RhdGUgb2Ygc2hvY2sgYWZ0ZXIgc2VlaW5nIHRoZSByZXZpZXcgb2YgUmlsZWUgUm9zc291dy4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9zcG9ydHMvY3JpY2tldC9wc2wtMjAyNC1oYXdrLWV5ZS1pc3N1ZXMtYXBvbG9neS10by1wY2ItZm9sbG93aW5nLW1pc3Rha2Utd2hpY2gtY29zdGVkLWlzbGFtYWJhZC11bml0ZWQtYS1sb3NzLWFnYWluc3QtcXVldHRhLWdsYWRpYXRvci9hci1CQjFpTXJjRiIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMTc6MTQ6MzhaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjcwMCwiaGVpZ2h0Ijo0MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy44ZDM2NzIzYzYzOTVhMDRhYjU2OTUzNTBkODViOGMyZSZwaWQ9V2RwIiwidGl0bGUiOiJQU0wgMjAyNDogSGF3ay1FeWUgSXNzdWVzIEFwb2xvZ3kgVG8gUENCIEZvbGxvd2luZyBNaXN0YWtlIFdoaWNoIENvc3RlZCBJc2xhbWFiYWQgVW5pdGVkIEEgTG9zcyBBZ2FpbnN0IFF1ZXR0YSBHbGFkaWF0b3IiLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NTA0LCJ4MiI6NTQ5LCJ5MSI6MzksInkyIjo4NH0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNTI1ODM0IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNEM0Q2QzQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzUyNTgzNCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDNENkM0IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkJYMFpCZyIsIm5hbWUiOiJaZWUgTmV3cyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCWERpVnYuaW1nIiwicHJvZmlsZUlkIjoidmlkLXJiZGhkeWl2bjY0cGVmNGpmYWFnZDZncTUwdnNodnBmcXQ3dW1ra2duY2pyY2h1Zzd1N3MiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6MjYsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNneXpLIn0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjI2LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ3l6Sy1kYXJrIn19LCJjYXRlZ29yeSI6InNwb3J0cyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzY1MGUxNTM5LWZiNTctNDdkNy04NTEwLTBiZmM1OWZjZTk2NCIsImZlZWROYW1lIjoiQ3JpY2tldCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjE2LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJmb2xsb3dUb3BpYyIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IllfNjUwZTE1MzktZmI1Ny00N2Q3LTg1MTAtMGJmYzU5ZmNlOTY0IiwibmFtZSI6IkNyaWNrZXQiLCJ0aW1lIjoiMjAyNC0wMi0yMlQxNDowODo1MloifX1dLCJyaSI6IjIzMCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlRoZSBhcnRpY2xlIHJlcG9ydHMgb24gKioqSGF3ay1FeWUncyoqKiBlcnJvciB0aGF0ICoqY29zdGVkIElzbGFtYWJhZCBVbml0ZWQgYSBsb3NzKiogYWdhaW5zdCBRdWV0dGEgR2xhZGlhdG9ycyBpbiB0aGUgKipQYWtpc3RhbiBTdXBlciBMZWFndWUgKFBTTCkgMjAyNCoqLiBUaGUgZXJyb3Igb2NjdXJyZWQgaW4gdGhlIDExdGggb3ZlciBvZiB0aGUgR2xhZGlhdG9ycycgaW5uaW5ncywgd2hlbiB0aGVpciBjYXB0YWluICpSaWxlZSBSb3Nzb3V3KiB3YXMgd3JvbmdseSBhZGp1ZGdlZCBvdXQgYnkgdW1waXJlICpBbGVlbSBEYXIqIGFmdGVyIG1pc3NpbmcgYSBzd2VlcCBzaG90LiBUaGUgR2xhZGlhdG9ycyByZXF1ZXN0ZWQgYSByZXZpZXcgYW5kIHRoZSBIYXdrLUV5ZSBzaG93ZWQgdGhhdCB0aGUgYmFsbCBoaXQgUm9zc291dydzIHBhZCBvdXRzaWRlIHRoZSBzdHVtcHMsIGJ1dCBhbHNvIG1pc3NlZCB0aGUgd2lja2V0cy4gVGhlIGZpZWxkaW5nIHRlYW0gYW5kIHVtcGlyZXMgd2VyZSAqKnNob2NrZWQqKiBieSB0aGUgcmV2aWV3IG91dGNvbWUuIEhhd2stRXllICoqYXBvbG9naXNlZCoqIHRvIHRoZSBQYWtpc3RhbiBDcmlja2V0IEJvYXJkIChQQ0IpIGluIGEgbGV0dGVyLCBhY2tub3dsZWRnaW5nIHRoZSBlcnJvciBhbmQgZXhwbGFpbmluZyBpdHMgY2F1c2UuIElzbGFtYWJhZCBza2lwcGVyICpTaGFkYWIgS2hhbiogY3JpdGljaXplZCB0aGUgdGVjaG5vbG9neSBhbmQgc2FpZCBpdCB3YXMgYSAqKm1hdGNoLWNoYW5naW5nIG1vbWVudCoqIHRoYXQgc2hvdWxkIG5vdCBoYXBwZW4gaW4gYSBiaWcgdG91cm5hbWVudC4gVGhlIEdsYWRpYXRvcnMgKipjaGFzZWQgZG93biB0aGUgdGFyZ2V0Kiogb2YgMTM5IHdpdGggUm9zc291dyB1bmJlYXRlbiBvbiAzNC4gIiwiaW5kZXgiOjB9XX0seyJ0eXBlIjoiV2VhdGhlclN1bW1hcnkiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInBvc2l0aW9uIjowLCJkYXRhIjoie1wicmVzcG9uc2VzXCI6W3tcIndlYXRoZXJcIjpbe1wiYWxlcnRzXCI6W10sXCJjdXJyZW50XCI6e1wiYmFyb1wiOjEwMTguMCxcImNhcFwiOlwiU3VubnlcIixcImNhcEFiYnJcIjpcIlN1bm55XCIsXCJkYXl0aW1lXCI6XCJkXCIsXCJkZXdQdFwiOjE2LjAsXCJmZWVsc1wiOjMyLjAsXCJyaFwiOjQxLjAsXCJpY29uXCI6MSxcInN5bWJvbFwiOlwiZDAwMDBcIixcInB2ZHJJY29uXCI6XCIxXCIsXCJ3eFwiOlwiXCIsXCJza3lcIjpcIkZFV1wiLFwidGVtcFwiOjI4LjAsXCJ0ZW1wRGVzY1wiOjksXCJ1dGNpXCI6MzQuMCxcInV2XCI6OC4wLFwidXZEZXNjXCI6XCJWZXJ5IEhpZ2hcIixcInZpc1wiOjguMCxcIndpbmREaXJcIjoyMDAsXCJ3aW5kU3BkXCI6MTAuMCxcIndpbmRUaFwiOjIyLjAsXCJ3aW5kR3VzdFwiOjI3LjAsXCJjcmVhdGVkXCI6XCIyMDI0LTAyLTI0VDEyOjQ2OjU5KzA2OjAwXCIsXCJwdmRyQ2FwXCI6XCJTdW5ueVwiLFwiYXFpXCI6MTAxLjAsXCJhcWlTZXZlcml0eVwiOlwiTW9kZXJhdGUgYWlyIHF1YWxpdHlcIixcImFxTGV2ZWxcIjozLFwicHJpbWFyeVBvbGx1dGFudFwiOlwiUE0yLjUgNDIgzrxnL23Cs1wiLFwiYXFpVmFsaWRUaW1lXCI6XCIyMDI0LTAyLTI0VDIwOjAwOjAwKzA2OjAwXCIsXCJjbG91ZENvdmVyXCI6MTIuMCxcInVmQ0NcIjowLjAsXCJvcmlDQ1wiOjAuMH0sXCJmb3JlY2FzdFwiOntcImRheXNcIjpbe1wiaG91cmx5XCI6W3tcInJoXCI6MzcuMCxcImljb25cIjoyLFwic3ltYm9sXCI6XCJkMTAwMFwiLFwicHZkckljb25cIjpcIjJcIixcInByZWNpcFwiOjEuMCxcInNreVwiOlwiRkVXXCIsXCJ0ZW1wXCI6MzAuMCxcInRlbXBEZXNjXCI6OSxcInZhbGlkXCI6XCIyMDI0LTAyLTI0VDEzOjMwOjAwKzA2OjAwXCIsXCJ3aW5kRGlyXCI6MTk1LFwid2luZFNwZFwiOjkuMCxcIndpbmRHdXN0XCI6MjguMCxcInJhaW5BbW91bnRcIjowLjAsXCJzbm93QW1vdW50XCI6MC4wLFwicmFBY2N1XCI6MC4wLFwic2FBY2N1XCI6MC4wfSx7XCJyaFwiOjM0LjAsXCJpY29uXCI6MixcInN5bWJvbFwiOlwiZDEwMDBcIixcInB2ZHJJY29uXCI6XCIyXCIsXCJwcmVjaXBcIjoyLjAsXCJza3lcIjpcIkZFV1wiLFwidGVtcFwiOjMxLjAsXCJ0ZW1wRGVzY1wiOjksXCJ2YWxpZFwiOlwiMjAyNC0wMi0yNFQxNDozMDowMCswNjowMFwiLFwid2luZERpclwiOjE4NyxcIndpbmRTcGRcIjo4LjAsXCJ3aW5kR3VzdFwiOjI4LjAsXCJyYWluQW1vdW50XCI6MC4wLFwic25vd0Ftb3VudFwiOjAuMCxcInJhQWNjdVwiOjAuMCxcInNhQWNjdVwiOjAuMH0se1wicmhcIjozMy4wLFwiaWNvblwiOjIsXCJzeW1ib2xcIjpcImQxMDAwXCIsXCJwdmRySWNvblwiOlwiMlwiLFwicHJlY2lwXCI6NC4wLFwic2t5XCI6XCJGRVdcIixcInRlbXBcIjozMS4wLFwidGVtcERlc2NcIjo5LFwidmFsaWRcIjpcIjIwMjQtMDItMjRUMTU6MzA6MDArMDY6MDBcIixcIndpbmREaXJcIjoxNzgsXCJ3aW5kU3BkXCI6MTAuMCxcIndpbmRHdXN0XCI6MjcuMCxcInJhaW5BbW91bnRcIjowLjAsXCJzbm93QW1vdW50XCI6MC4wLFwicmFBY2N1XCI6MC4wLFwic2FBY2N1XCI6MC4wfSx7XCJyaFwiOjMzLjAsXCJpY29uXCI6MSxcInN5bWJvbFwiOlwiZDAwMDBcIixcInB2ZHJJY29uXCI6XCIxXCIsXCJwcmVjaXBcIjo1LjAsXCJza3lcIjpcIkZFV1wiLFwidGVtcFwiOjMyLjAsXCJ0ZW1wRGVzY1wiOjksXCJ2YWxpZFwiOlwiMjAyNC0wMi0yNFQxNjozMDowMCswNjowMFwiLFwid2luZERpclwiOjE2OCxcIndpbmRTcGRcIjoxMi4wLFwid2luZEd1c3RcIjoyNi4wLFwicmFpbkFtb3VudFwiOjAuMCxcInNub3dBbW91bnRcIjowLjAsXCJyYUFjY3VcIjowLjAsXCJzYUFjY3VcIjowLjB9LHtcInJoXCI6MzUuMCxcImljb25cIjoyLFwic3ltYm9sXCI6XCJkMTAwMFwiLFwicHZkckljb25cIjpcIjJcIixcInByZWNpcFwiOjcuMCxcInNreVwiOlwiRkVXXCIsXCJ0ZW1wXCI6MzIuMCxcInRlbXBEZXNjXCI6OCxcInZhbGlkXCI6XCIyMDI0LTAyLTI0VDE3OjMwOjAwKzA2OjAwXCIsXCJ3aW5kRGlyXCI6MTU4LFwid2luZFNwZFwiOjE0LjAsXCJ3aW5kR3VzdFwiOjI1LjAsXCJyYWluQW1vdW50XCI6MC4wLFwic25vd0Ftb3VudFwiOjAuMCxcInJhQWNjdVwiOjAuMCxcInNhQWNjdVwiOjAuMH1dLFwiZGFpbHlcIjp7XCJkYXlcIjp7XCJzeW1ib2xcIjpcImQxMDAwXCIsXCJ3aW5kU3BkXCI6MTEuMCxcInN1bW1hcmllc1wiOltcIlRoZXJlIHdpbGwgYmUgbW9zdGx5IHN1bm55IHNraWVzLlwiLFwiVGhlIGhpZ2ggd2lsbCBiZSAzMsKwLlwiXX0sXCJuaWdodFwiOntcInN5bWJvbFwiOlwibjEwMDBcIixcIndpbmRTcGRcIjoxMS4wLFwic3VtbWFyaWVzXCI6W1wiVGhlIHNraWVzIHdpbGwgYmUgbW9zdGx5IGNsZWFyLlwiLFwiVGhlIGxvdyB3aWxsIGJlIDIywrAuXCJdfSxcInB2ZHJDYXBcIjpcIk1vc3RseSBzdW5ueVwiLFwidmFsaWRcIjpcIjIwMjQtMDItMjRUMDA6MzA6MDArMDY6MDBcIixcImljb25cIjoyLFwic3ltYm9sXCI6XCJkMTAwMFwiLFwicHZkckljb25cIjpcIjJcIixcInByZWNpcFwiOjguMCxcInJoSGlcIjo5MC4wLFwicmhMb1wiOjM4LjAsXCJ0ZW1wSGlcIjozMi4wLFwidGVtcExvXCI6MjIuMCxcInV2XCI6OS4wLFwidXZEZXNjXCI6XCJWZXJ5IEhpZ2hcIixcImNyZWF0ZWRcIjpcIjIwMjQtMDItMjRUMTI6NDU6MDArMDY6MDBcIixcInJhaW5BbW91bnRcIjowLjAsXCJzbm93QW1vdW50XCI6MC4wLFwicmFUb01OXCI6MC4wLFwic2FUb01OXCI6MC4wfSxcImFsbWFuYWNcIjp7XCJ2YWxpZFwiOlwiMjAyNC0wMi0yNFQwMDowMDowMCswNjowMFwiLFwic3VucmlzZVwiOlwiMjAyNC0wMi0yNFQwNzowODoyMSswNjowMFwiLFwic3Vuc2V0XCI6XCIyMDI0LTAyLTI0VDE4OjU3OjI5KzA2OjAwXCJ9fSx7XCJob3VybHlcIjpbXSxcImRhaWx5XCI6e1wiZGF5XCI6e1wic3ltYm9sXCI6XCJkMTAwMFwiLFwid2luZFNwZFwiOjEyLjB9LFwibmlnaHRcIjp7XCJzeW1ib2xcIjpcIm4xMDAwXCIsXCJ3aW5kU3BkXCI6MTQuMH0sXCJwdmRyQ2FwXCI6XCJNb3N0bHkgc3VubnlcIixcInZhbGlkXCI6XCIyMDI0LTAyLTI1VDAwOjMwOjAwKzA2OjAwXCIsXCJpY29uXCI6MixcInN5bWJvbFwiOlwiZDEwMDBcIixcInB2ZHJJY29uXCI6XCIyXCIsXCJwcmVjaXBcIjo2LjAsXCJyaEhpXCI6OTAuMCxcInJoTG9cIjozOC4wLFwidGVtcEhpXCI6MzIuMCxcInRlbXBMb1wiOjIwLjAsXCJ1dlwiOjkuMCxcInV2RGVzY1wiOlwiVmVyeSBIaWdoXCIsXCJjcmVhdGVkXCI6XCIyMDI0LTAyLTI0VDEyOjQ1OjAwKzA2OjAwXCIsXCJyYWluQW1vdW50XCI6MC4wLFwic25vd0Ftb3VudFwiOjAuMCxcInJhVG9NTlwiOjAuMCxcInNhVG9NTlwiOjAuMH19LHtcImhvdXJseVwiOltdLFwiZGFpbHlcIjp7XCJkYXlcIjp7XCJzeW1ib2xcIjpcImQwMDAwXCIsXCJ3aW5kU3BkXCI6MTUuMH0sXCJuaWdodFwiOntcInN5bWJvbFwiOlwibjEwMDBcIixcIndpbmRTcGRcIjoxNC4wfSxcInB2ZHJDYXBcIjpcIlN1bm55XCIsXCJ2YWxpZFwiOlwiMjAyNC0wMi0yNlQwMDozMDowMCswNjowMFwiLFwiaWNvblwiOjEsXCJzeW1ib2xcIjpcImQwMDAwXCIsXCJwdmRySWNvblwiOlwiMVwiLFwicHJlY2lwXCI6Mi4wLFwicmhIaVwiOjkyLjAsXCJyaExvXCI6MzguMCxcInRlbXBIaVwiOjMxLjAsXCJ0ZW1wTG9cIjoyMC4wLFwidXZcIjoxMS4wLFwidXZEZXNjXCI6XCJFeHRyZW1lXCIsXCJjcmVhdGVkXCI6XCIyMDI0LTAyLTI0VDEyOjQ1OjAwKzA2OjAwXCIsXCJyYWluQW1vdW50XCI6MC4wLFwic25vd0Ftb3VudFwiOjAuMCxcInJhVG9NTlwiOjAuMCxcInNhVG9NTlwiOjAuMH19LHtcImhvdXJseVwiOltdLFwiZGFpbHlcIjp7XCJkYXlcIjp7XCJzeW1ib2xcIjpcImQxMDAwXCIsXCJ3aW5kU3BkXCI6MTQuMH0sXCJuaWdodFwiOntcInN5bWJvbFwiOlwibjEwMDBcIixcIndpbmRTcGRcIjoxMS4wfSxcInB2ZHJDYXBcIjpcIk1vc3RseSBzdW5ueVwiLFwidmFsaWRcIjpcIjIwMjQtMDItMjdUMDA6MzA6MDArMDY6MDBcIixcImljb25cIjoyLFwic3ltYm9sXCI6XCJkMTAwMFwiLFwicHZkckljb25cIjpcIjJcIixcInByZWNpcFwiOjQuMCxcInJoSGlcIjo4OS4wLFwicmhMb1wiOjM4LjAsXCJ0ZW1wSGlcIjozMS4wLFwidGVtcExvXCI6MjAuMCxcInV2XCI6MTEuMCxcInV2RGVzY1wiOlwiRXh0cmVtZVwiLFwiY3JlYXRlZFwiOlwiMjAyNC0wMi0yNFQxMjo0NTowMCswNjowMFwiLFwicmFpbkFtb3VudFwiOjAuMCxcInNub3dBbW91bnRcIjowLjAsXCJyYVRvTU5cIjowLjAsXCJzYVRvTU5cIjowLjB9fSx7XCJob3VybHlcIjpbXSxcImRhaWx5XCI6e1wiZGF5XCI6e1wic3ltYm9sXCI6XCJkMDAwMFwiLFwid2luZFNwZFwiOjExLjB9LFwibmlnaHRcIjp7XCJzeW1ib2xcIjpcIm4wMDAwXCIsXCJ3aW5kU3BkXCI6OS4wfSxcInB2ZHJDYXBcIjpcIlN1bm55XCIsXCJ2YWxpZFwiOlwiMjAyNC0wMi0yOFQwMDozMDowMCswNjowMFwiLFwiaWNvblwiOjEsXCJzeW1ib2xcIjpcImQwMDAwXCIsXCJwdmRySWNvblwiOlwiMVwiLFwicHJlY2lwXCI6Mi4wLFwicmhIaVwiOjgwLjAsXCJyaExvXCI6MjQuMCxcInRlbXBIaVwiOjMzLjAsXCJ0ZW1wTG9cIjoyMC4wLFwidXZcIjoxMS4wLFwidXZEZXNjXCI6XCJFeHRyZW1lXCIsXCJjcmVhdGVkXCI6XCIyMDI0LTAyLTI0VDEyOjQ1OjAwKzA2OjAwXCIsXCJyYWluQW1vdW50XCI6MC4wLFwic25vd0Ftb3VudFwiOjAuMCxcInJhVG9NTlwiOjAuMCxcInNhVG9NTlwiOjAuMH19LHtcImhvdXJseVwiOltdLFwiZGFpbHlcIjp7XCJkYXlcIjp7XCJzeW1ib2xcIjpcImQwMDAwXCIsXCJ3aW5kU3BkXCI6MTEuMH0sXCJuaWdodFwiOntcInN5bWJvbFwiOlwibjAwMDBcIixcIndpbmRTcGRcIjo5LjB9LFwicHZkckNhcFwiOlwiU3VubnlcIixcInZhbGlkXCI6XCIyMDI0LTAyLTI5VDAwOjMwOjAwKzA2OjAwXCIsXCJpY29uXCI6MSxcInN5bWJvbFwiOlwiZDAwMDBcIixcInB2ZHJJY29uXCI6XCIxXCIsXCJwcmVjaXBcIjoxLjAsXCJyaEhpXCI6NzYuMCxcInJoTG9cIjoxOC4wLFwidGVtcEhpXCI6MzMuMCxcInRlbXBMb1wiOjIwLjAsXCJ1dlwiOjExLjAsXCJ1dkRlc2NcIjpcIkV4dHJlbWVcIixcImNyZWF0ZWRcIjpcIjIwMjQtMDItMjRUMTI6NDU6MDArMDY6MDBcIixcInJhaW5BbW91bnRcIjowLjAsXCJzbm93QW1vdW50XCI6MC4wLFwicmFUb01OXCI6MC4wLFwic2FUb01OXCI6MC4wfX0se1wiaG91cmx5XCI6W10sXCJkYWlseVwiOntcImRheVwiOntcInN5bWJvbFwiOlwiZDAwMDBcIixcIndpbmRTcGRcIjoxMi4wfSxcIm5pZ2h0XCI6e1wic3ltYm9sXCI6XCJuMDAwMFwiLFwid2luZFNwZFwiOjkuMH0sXCJwdmRyQ2FwXCI6XCJTdW5ueVwiLFwidmFsaWRcIjpcIjIwMjQtMDMtMDFUMDA6MzA6MDArMDY6MDBcIixcImljb25cIjoxLFwic3ltYm9sXCI6XCJkMDAwMFwiLFwicHZkckljb25cIjpcIjFcIixcInByZWNpcFwiOjIuMCxcInJoSGlcIjo3OS4wLFwicmhMb1wiOjIwLjAsXCJ0ZW1wSGlcIjozMi4wLFwidGVtcExvXCI6MjAuMCxcInV2XCI6OS4wLFwidXZEZXNjXCI6XCJWZXJ5IEhpZ2hcIixcImNyZWF0ZWRcIjpcIjIwMjQtMDItMjRUMTI6NDU6MDArMDY6MDBcIixcInJhaW5BbW91bnRcIjowLjAsXCJzbm93QW1vdW50XCI6MC4wLFwicmFUb01OXCI6MC4wLFwic2FUb01OXCI6MC4wfX1dfSxcIm1hcHNtZXRhZGF0YVwiOntcIlRpbGVJbWFnZU1ldGFkYXRhXCI6e1widXJpc1wiOntcIjIwMjQwMjIzMTIwMFwiOlwiaHR0cHM6Ly9hc3NldHMubXNuLmNvbS93ZWF0aGVybWFwZGF0YS8xL3tzY2VuYXJpb30vMDIyMzEyL3t4fV97eX1fe3p9X3t0aW1lfS57Zm9ybWF0fVwifX0sXCJBaXJRdWFsaXR5SGVhdE1hcFwiOntcInVyaXNcIjp7XCIyMDI0MDIyNDA2MDBcIjpcImh0dHBzOi8vYXNzZXRzLm1zbi5jb20vd2VhdGhlcm1hcGRhdGEvMS9haXJxdWFsaXR5aGVhdG1hcC97Y291bnRyeX0ve3h9X3t5fV97en1fe3RpbWV9LmpwZ1wifX0sXCJUZW1wZXJhdHVyZUdyaWRcIjp7XCJ1cmlzXCI6e1wiMjAyNDAyMjQwNDAwXCI6XCJodHRwczovL2Fzc2V0cy5tc24uY29tL3dlYXRoZXJtYXBkYXRhLzEve3NjZW5hcmlvfS97dmVyc2lvbn1fMC97eH1fe3l9X3t6fV97dGltZX0wMC57Zm9ybWF0fVwifX0sXCJUZW1wZXJhdHVyZUdyaWRSUlwiOntcInVyaXNcIjp7XCIyMDI0MDIyNDA2MjBcIjpcImh0dHBzOi8vYXNzZXRzLm1zbi5jb20vd2VhdGhlcm1hcGRhdGEvMS97c2NlbmFyaW99L3t2ZXJzaW9ufV8xL3t4fV97eX1fe3p9X3t0aW1lfTAwLntmb3JtYXR9P2VuZD0yMDI0MDIyNTA2XCJ9fSxcIkFpclF1YWxpdHlIZWF0TWFwRXVcIjp7XCJ1cmlzXCI6e1wiMjAyNDAyMjQwNjAwXCI6XCJodHRwczovL2Fzc2V0cy5tc24uY29tL3dlYXRoZXJtYXBkYXRhLzEvYWlycXVhbGl0eWhlYXRtYXAve2NvdW50cnl9L3t4fV97eX1fe3p9X3t0aW1lfS5qcGdcIn19fSxcImNvbnRlbnRkYXRhXCI6W3tcImlkXCI6XCJ3eG53dHN3aW5kXCIsXCJjaWRcIjoxNixcInJhbmtpbmdcIjoxMjc4LFwiY29udGVudHR5cGVcIjpcIlRlYXNlcldpbmREYXlcIixcImlzU3BvdGxpZ2h0XCI6ZmFsc2UsXCJjb250ZW50XCI6W3tcInRpdGxlXCI6XCJXaW5keSB0b21vcnJvd1wiLFwiY2FwXCI6XCJTdHJvbmcgZ3VzdHkgd2luZHMgdG9tb3Jyb3dcIixcImNhcEljb25cIjpcIldpbmR5VjIuc3ZnXCIsXCJpbWdVcmxcIjpcInwvZm9yZWNhc3QvfC9ob3VybHlmb3JlY2FzdC98LCZkYXk9MiZob3VyPTBcIn1dfSx7XCJpZFwiOlwid3hud3RzdXYxMVwiLFwiY2lkXCI6MTQsXCJyYW5raW5nXCI6MTYwMyxcImNvbnRlbnR0eXBlXCI6XCJUZWFzZXJVVkluZGV4XCIsXCJpc1Nwb3RsaWdodFwiOmZhbHNlLFwiY29udGVudFwiOlt7XCJ0aXRsZVwiOlwiVmVyeSBoaWdoIFVWXCIsXCJjYXBcIjpcIlZlcnkgaGlnaCBVVi4gTWluaW1pemUgc3VuIGV4cG9zdXJlLlwiLFwiY2FwSWNvblwiOlwidXYwLnN2Z1wiLFwiaW1nVXJsXCI6XCJ8L2ZvcmVjYXN0L3wvaG91cmx5Zm9yZWNhc3QvfCwmZmNzdHRhYj11dmluZGV4XCJ9XX0se1wiaWRcIjpcInd4YXFpXCIsXCJjaWRcIjo5LFwicmFua2luZ1wiOjM1MCxcImNvbnRlbnR0eXBlXCI6XCJBUUlDYXJkXCIsXCJpc1Nwb3RsaWdodFwiOmZhbHNlLFwiY29udGVudFwiOlt7XCJtZXRhZGF0YVwiOlwie1xcXCJQcmltYXJ5UG9sbHV0YW50XFxcIjpcXFwiUE0yLjUgNDIgzrxnL23Cs1xcXCJ9XCJ9XX1dLFwicHJvdmlkZXJcIjp7XCJuYW1lXCI6XCJGb3JlY2FcIixcInVybFwiOlwiaHR0cDovL3d3dy5mb3JlY2EuY29tXCJ9LFwiYXFpUHJvdmlkZXJcIjp7XCJuYW1lXCI6XCJDUENCXCIsXCJ1cmxcIjpcImh0dHBzOi8vYXBwLmNwY2JjY3IuY29tL1wifX1dLFwic291cmNlXCI6e1wiaWRcIjpcIjQzMjk2XCIsXCJjb29yZGluYXRlc1wiOntcImxhdFwiOjEyLjk0OTk5LFwibG9uXCI6NzcuNjI5OTl9LFwibG9jYXRpb25cIjp7XCJUaW1lem9uZU5hbWVcIjpcIkFzaWEvS29sa2F0YVwifX19XSxcInVzZXJQcm9maWxlXCI6e1wibG9jYXRpb25TZXR0aW5nTW9kZVwiOlwiMVwiLFwibG9jYXRpb25cIjp7XCJDb3VudHJ5XCI6XCJJbmRpYVwiLFwiQ291bnRyeUNvZGVcIjpcIklOXCIsXCJTdGF0ZVwiOlwiS2FybmF0YWthXCIsXCJDaXR5XCI6XCJCZW5nYWx1cnUgTm9ydGhcIixcIlBvc3RhbENvZGVcIjpcIjU2MDAyNVwiLFwiVXRjT2Zmc2V0XCI6XCIwMDowMDowMFwiLFwiSXNMb2NhbGl6ZWRcIjp0cnVlLFwiQWNjdXJhY3lcIjozMzIuNDk3NjgwNjY0MDYyNSxcIlBvcElwRGlhbG9nXCI6ZmFsc2UsXCJMYXRpdHVkZVwiOjEyLjk1NDk5MTM0MDYzNzIwNyxcIkxvbmdpdHVkZVwiOjc3LjYwODU3MzkxMzU3NDIyfSxcImZvbGxvd2VkTG9jYXRpb25zXCI6W10sXCJkZXRlY3RlZExvY2F0aW9uXCI6e1wiQ291bnRyeVwiOlwiSW5kaWFcIixcIkNvdW50cnlDb2RlXCI6XCJJTlwiLFwiU3RhdGVcIjpcIkthcm5hdGFrYVwiLFwiQ2l0eVwiOlwiQmVuZ2FsdXJ1IE5vcnRoXCIsXCJQb3N0YWxDb2RlXCI6XCI1NjAwMjVcIixcIlV0Y09mZnNldFwiOlwiMDA6MDA6MDBcIixcIklzTG9jYWxpemVkXCI6dHJ1ZSxcIkFjY3VyYWN5XCI6MzMyLjQ5NzY4MDY2NDA2MjUsXCJQb3BJcERpYWxvZ1wiOmZhbHNlLFwiTGF0aXR1ZGVcIjoxMi45NTQ5OTEzNDA2MzcyMDcsXCJMb25naXR1ZGVcIjo3Ny42MDg1NzM5MTM1NzQyMn0sXCJzaWdcIjp7XCJ1dFwiOjAsXCJmdFwiOlwidmRsd3wxLHZ3M218MSx2d2xtfDEsZnZ0bXw2LjM4MzQyMjA4RSsxNyxsdnRtfDYuMzgzNTYwMzJFKzE3LDE0fDBfMF8wXzBfMF8yLDl8MF8wXzBfMF8wXzEsYWx8MF8wXzBfMF8wXzEzLHd4fDBfMF8wXzBfMF8zXCIsXCJjaWRzXCI6WzIyXX0sXCJlcGxhbnRcIjp7XCJhZFwiOmZhbHNlfX0sXCJwcmV2aWV3c1wiOlt7XCJQcmV2aWV3VHlwZVwiOlwiV2VhdGhlcl9UZWFzZXJVVkluZGV4X1RlYXNlclVWSW5kZXhfd3hud3RzdXYxMV9Ua1J0LTFcIixcIkJvZHlcIjpbe1wiVHlwZVwiOlwiSW1hZ2VcIixcIlVybFwiOlwiaHR0cHM6Ly9hc3NldHMubXNuLmNvbS93ZWF0aGVybWFwZGF0YS8xL3N0YXRpYy93ZWF0aGVyL0ljb25zL0tSWUZHQUE9L1RlYXNlci91djAuc3ZnXCJ9LHtcIlR5cGVcIjpcIlRleHRCbG9ja1wiLFwiVGV4dFwiOlwiVmVyeSBoaWdoIFVWXCIsXCJDb2xvclwiOlwiRGVmYXVsdFwiLFwiSXNTdWJ0bGVcIjpmYWxzZX1dfV0sXCJjYXJkc1wiOlt7XCJiYXNlVXJsXCI6XCJodHRwczovL2Fzc2V0cy5tc24uY29tL3dlYXRoZXJtYXBkYXRhLzEvc3RhdGljL2JhY2tncm91bmQvdjIuMC9qcGcvXCIsXCJpY29uQmFzZVwiOlwiaHR0cHM6Ly9hc3NldHMubXNuLmNvbS93ZWF0aGVybWFwZGF0YS8xL3N0YXRpYy93ZWF0aGVyL0ljb25zL3Rhc2tiYXJfdjEwL1wiLFwiYmdcIjp7XCJpbmZvXCI6W1wic3VubnkuanBnXCIsXCIjRkZFQ0IxXCIsXCJsaW5lYXItZ3JhZGllbnQoMzE1ZGVnLCAjRkZFQ0IxIDAlLCByZ2JhKDI1NSwgMjM2LCAxNzcsIDApIDEwMCUpXCIsXCIxXCIsXCJTVU5OWVwiXX0sXCJsb2NcIjpbXCJleUpzSWpvaVFtVnVaMkZzZFhKMUlFNXZjblJvSWl3aWNpSTZJa3RoY201aGRHRnJZU0lzSW1NaU9pSkpibVJwWVNJc0lta2lPaUpKVGlJc0ltY2lPaUpsYmkxcGJpSXNJbmdpT2pjM0xqWXdPRFUzTXpreE16VTNOREl5TENKNUlqb3hNaTQ1TlRRNU9URXpOREEyTXpjeU1EZDlcIl0sXCJjdXJcIjp7XCJpY29uXCI6XCJDb25kaXRpb24vQUFlaFIzUy5zdmdcIn19LHtcImN1clwiOntcImljb25cIjpcIkNvbmRpdGlvbi9BQWVoUjNTLnN2Z1wifX1dLFwiaXNTcG90bGlnaHRcIjpmYWxzZSxcInVuaXRzXCI6e1widGVtcGVyYXR1cmVcIjpcIsKwQ1wiLFwic3BlZWRcIjpcImttL2hcIixcImhlaWdodFwiOlwiY21cIn19IiwiZGF0YVR5cGUiOiJXZWF0aGVyT3ZlcnZpZXciLCJkYXRhVmVyc2lvbiI6MSwiY2FyZElkIjo1NX1dfSx7ImRhdGFUZW1wbGF0ZSI6Im1zZnQtZWlnaHQtY2FyZC1maXZlLWNvbC1idGYiLCJsYXlvdXRUZW1wbGF0ZSI6Im1zZnQtZWlnaHQtY2FyZC1maXZlLWNvbC1idGYiLCJjYXJkcyI6W3siaWQiOiJCQjFpTkw3dCIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJBcmp1biBSYW1wYWwgUmV2ZWFscyBEYXVnaHRlciBNYWhpa2FhIFdpbGwgSm9pbiBCb2xseXdvb2QsIFNheXMgU2hlJ3MgJ1ZlcnkgS2VlbiBPbiBCZWNvbWluZyBBbiBBY3RvciciLCJhYnN0cmFjdCI6IkFyanVuIFJhbXBhbCByZWNlbnRseSByZXZlYWxlZCB0aGF0IGhpcyBlbGRlciBkYXVnaHRlciBNYWhpa2FhIHdpbGwgYmUgdmVudHVyaW5nIGludG8gQm9sbHl3b29kIHNvb24gYW5kIHdhbnRzIHRvIGJlY29tZSBhbiBhY3RyZXNzLiBBcmp1biBSYW1wYWwgcmVjZW50bHkgc3Bva2UgYWJvdXQgdGhlIGFkdmljZSBoZSBzaGFyZWQgd2l0aCBNYWhpa2FhIGJlZm9yZSBoZXIgZGVidXQgYW5kIGhvdyBrZWVuIGhpcyBkYXVnaHRlciBpcyBvbiBiZWNvbWluZyBhbiBhY3RyZXNzLuKAnE1haGlrYWEsIG15IGVsZGVyIGRhdWdodGVyLCBpcyB2ZXJ5IG11Y2gga2VlbiBvbiBiZWNvbWluZyBhbiBhY3Rvci4gU2hlIGFsd2F5cyBoYWQgdGhhdCBpbiBoZXIuIEZyb20gc2Nob29sIGRheXMsIHNoZSB3b3VsZCBiZSBpbiBwbGF5cywgc2hlIHdvdWxkIGdldCBuaWNlIHBhcnRzIHRvIGRvIGFuZCBzaGXigJlkLi4uIiwicmVhZFRpbWVNaW4iOjIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vZW50ZXJ0YWlubWVudC9vdGhlci9hcmp1bi1yYW1wYWwtcmV2ZWFscy1kYXVnaHRlci1tYWhpa2FhLXdpbGwtam9pbi1ib2xseXdvb2Qtc2F5cy1zaGUtcy12ZXJ5LWtlZW4tb24tYmVjb21pbmctYW4tYWN0b3IvYXItQkIxaU5MN3QiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTI0VDA1OjUwOjM0WiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxMjAwLCJoZWlnaHQiOjgwMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjY1MGQ0YTQ4NDg1ZWNkMjdjNmYyNGIxNWU1NThjMDc0JnBpZD1XZHAiLCJ0aXRsZSI6IkFyanVuIFJhbXBhbCB3aXRoIGRhdWdodGVyIE1haGlrYWEuIiwiY2FwdGlvbiI6IkFyanVuIFJhbXBhbCB3aXRoIGRhdWdodGVyIE1haGlrYWEuIiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyRTJFMkUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Y1RjVGNSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMkUyRTJFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGNUY1RjUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQUpVRnhNIiwibmFtZSI6Ik5ld3MxOCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCV0RiUzUuaW1nIiwicHJvZmlsZUlkIjoidmlkLWFheHI2N3hnNjVtMzdrbTg1OHV0NWM0eWg2Y2t5OWhheXVtczIzN2VtOHlydWVmMmNmeHMiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6NTAsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnQVp6In0sImRhcmtUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjUwLCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0Faei1kYXJrIn19LCJjYXRlZ29yeSI6ImVudGVydGFpbm1lbnQiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV81NTkwMWUxMi1iMDMxLTRhZmItOTZjNC0zNzVlNTc1YzA5MTkiLCJmZWVkTmFtZSI6Ik1vdmllcyIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjE3LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJjRl9VMnUiLCJyYW5rIjowfV0sInJpIjoiMjIwIiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24ifSx7InR5cGUiOiJjbXNhZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MH0seyJpZCI6IkJCMWlLdHM4IiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IlJvdyBFcnVwdHMgT3ZlciBLYXJuYXRha2EncyBUYXggT24gVGVtcGxlcyBXaXRoIFJldmVudWUgT3ZlciBScyAxIENyIiwiYWJzdHJhY3QiOiJLYXJuYXRha2EgZ292ZXJubWVudCBhcHByb3ZlZCAnS2FybmF0YWthIEhpbmR1IFJlbGlnaW91cyBJbnN0aXR1dGlvbnMgYW5kIENoYXJpdGFibGUgRW5kb3dtZW50cyBCaWxsIDIwMjQnIGdyYW50aW5nIGl0IHRoZSBhdXRob3JpdHkgdG8gaW1wb3NlIHRheGVzIG9uIHRlbXBsZXMgZ2VuZXJhdGluZyByZXZlbnVlcy4gVGhlIHRlbXBsZXMgZXhjZWVkaW5nIFJzIDEgY3JvcmUgd2lsbCBiZSBzdWJqZWN0IHRvIGEgMTAlIHRheCB3aGlsZSB0aG9zZSB3aXRoIHJldmVudWVzIHJhbmdpbmcgYmV0d2VlbiBScyAxMCBsYWtoIGFuZCBScyAxIGNyb3JlIHdpbGwgZmFjZSBhIDUlIHRheCBsZXZ5LiBIb3dldmVyLCB0aGUgQmlsbCBsZWQgdG8gYSB3YXIgb2Ygd29yZHMgYmV0d2VlbiBLYXJuYXRha2EgQ00gU2lkZGFyYW1haWFoIGFuZCBCSlAgc3RhdGUgdW5pdCBjaGllZiBCIFkuLi4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9hdXRvcy9waG90b3Mvcm93LWVydXB0cy1vdmVyLWthcm5hdGFrYS1zLXRheC1vbi10ZW1wbGVzLXdpdGgtcmV2ZW51ZS1vdmVyLXJzLTEtY3IvYXItQkIxaUt0czgiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDA2OjA2OjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxMjAwLCJoZWlnaHQiOjY3NSwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmJkZDc4OWJlMjk3OTk0NGJhNTIzNmRiYjdhODllYjBkJnBpZD1XZHAiLCJ0aXRsZSI6IlJvdyBFcnVwdHMgT3ZlciBLYXJuYXRha2EncyBUYXggT24gVGVtcGxlcyBXaXRoIFJldmVudWUgT3ZlciBScyAxIENyIiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyRTI2MjgiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0M4REFGNSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMkUyNjI4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNDOERBRjUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTE5TW43WSIsIm5hbWUiOiJBQlAgTGl2ZSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMTlNd2thLmltZyIsInByb2ZpbGVJZCI6InZpZC04dnk3NTZ0YjZnZjl1ZzA5dWZjMjgycmU1Yng2NjJkeTVobjBxcGVpcHF0NGFuYThyZjRzIn0sImNhdGVnb3J5IjoiYXV0b3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MjYsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoyNCwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MiwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjEsInN1YkNvbW1lbnRTdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEsInR5cGUiOiJjb21tZW50In1dfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9lYTgwODhhZS03ZWRhLTRmNjAtOGJkMi0yZjY0NDQzNzYwMTUiLCJmZWVkTmFtZSI6IkF1dG9zIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MTgsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImV4cGxvcmUiLCJyYW5rIjowLCJmb2xsb3ciOnsiaWQiOiIiLCJuYW1lIjoiTW9uZXkiLCJ0aW1lIjoiIn19XSwicmkiOiIyMDQiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiIsImhpZ2hsaWdodHMiOlt7InRleHQiOiJUaGUgYXJ0aWNsZSBkaXNjdXNzZXMgdGhlICoqKkthcm5hdGFrYSBIaW5kdSBSZWxpZ2lvdXMgSW5zdGl0dXRpb25zIGFuZCBDaGFyaXRhYmxlIEVuZG93bWVudHMgQmlsbCAyMDI0KioqLCB3aGljaCBncmFudHMgdGhlIHN0YXRlIGdvdmVybm1lbnQgdGhlIGF1dGhvcml0eSB0byAqKnRheCB0ZW1wbGVzKiogYmFzZWQgb24gdGhlaXIgcmV2ZW51ZXMuIFRoZSBiaWxsIHNwZWNpZmllcyBhICoqMTAlIHRheCoqIGZvciB0ZW1wbGVzIHdpdGggcmV2ZW51ZXMgb3ZlciAqKlJzIDEgY3JvcmUqKiwgYW5kIGEgKio1JSB0YXgqKiBmb3IgdGhvc2UgYmV0d2VlbiAqKlJzIDEwIGxha2ggYW5kIFJzIDEgY3JvcmUqKi4gVGhlIGJpbGwgc3BhcmtlZCBhICoqcm93KiogYmV0d2VlbiB0aGUgc3RhdGUncyBDaGllZiBNaW5pc3RlciAqU2lkZGFyYW1haWFoKiBhbmQgQkpQIHN0YXRlIHVuaXQgY2hpZWYgKkIgWSBWaWpheWVuZHJhKiwgd2hvIGFjY3VzZWQgZWFjaCBvdGhlciBvZiBiZWluZyAqKmFudGktSGluZHUqKiBhbmQgbWlzbGVhZGluZyB0aGUgcHVibGljLiBUaGUgYmlsbCdzIHNwb25zb3IsIE1pbmlzdGVyICpSYW1hbGluZ2EgUmVkZHkqLCBkZWZlbmRlZCB0aGUgYmlsbCBhcyBhIHdheSB0byAqKnN1cHBvcnQgbmVnbGVjdGVkIHRlbXBsZXMqKiBhbmQgdXJnZWQgdGhlIHlvdXRoIHRvICoqYWJhbmRvbiB0aGVpciBqb2JzKiogZm9yIHBvbGl0aWNhbCBnYWluLiAiLCJpbmRleCI6MH1dfSx7InR5cGUiOiJUcmFmZmljRGVsYXlzIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwb3NpdGlvbiI6MCwiZGF0YSI6IntcIkltcHJlc3Npb25GbGlnaHRzXCI6W10sXCJMb2NhdGlvblwiOntcIkNvdW50cnlcIjpcIkluZGlhXCIsXCJDb3VudHJ5Q29kZVwiOlwiSU5cIixcIlN0YXRlXCI6XCJLYXJuYXRha2FcIixcIlBvc3RhbENvZGVcIjpcIjU2MDAyNVwiLFwiVXRjT2Zmc2V0XCI6MCxcIkRtYUNvZGVcIjpudWxsLFwiSXNMb2NhbGl6ZWRcIjp0cnVlLFwiQWNjdXJhY3lcIjozMzIuNDk3NjgwNjY0MDYyNSxcIklzQXV0b0RldGVjdGVkXCI6dHJ1ZSxcIkNpdHlcIjpcIkJlbmdhbHVydSBOb3J0aFwiLFwiRGV0ZWN0aW9uTWV0YWRhdGFcIjp7XCJJUENhdGVnb3J5XCI6XCJcIixcIklQQ2F0ZWdvcnlDb25maWRlbmNlXCI6XCJcIn0sXCJMYXRpdHVkZVwiOjEyLjk1NDk5MTM0MDYzNzIwNyxcIkxvbmdpdHVkZVwiOjc3LjYwODU3MzkxMzU3NDIyfSxcIkNlbnRlckxvY2F0aW9uXCI6e1wiQ291bnRyeVwiOm51bGwsXCJDb3VudHJ5Q29kZVwiOm51bGwsXCJTdGF0ZVwiOm51bGwsXCJQb3N0YWxDb2RlXCI6bnVsbCxcIlV0Y09mZnNldFwiOm51bGwsXCJEbWFDb2RlXCI6bnVsbCxcIklzTG9jYWxpemVkXCI6ZmFsc2UsXCJBY2N1cmFjeVwiOi0xLjAsXCJJc0F1dG9EZXRlY3RlZFwiOmZhbHNlLFwiQ2l0eVwiOlwiXCIsXCJEZXRlY3Rpb25NZXRhZGF0YVwiOm51bGwsXCJMYXRpdHVkZVwiOjEyLjk1ODkxMTA2NzcyMzcxMixcIkxvbmdpdHVkZVwiOjc3LjYwMzQ3OTAwOTcyNTF9LFwiRGV0ZWN0ZWRMb2NhdGlvblwiOntcIkNvdW50cnlcIjpcIkluZGlhXCIsXCJDb3VudHJ5Q29kZVwiOlwiSU5cIixcIlN0YXRlXCI6XCJLYXJuYXRha2FcIixcIlBvc3RhbENvZGVcIjpcIjU2MDAyNVwiLFwiVXRjT2Zmc2V0XCI6MCxcIkRtYUNvZGVcIjpudWxsLFwiSXNMb2NhbGl6ZWRcIjp0cnVlLFwiQWNjdXJhY3lcIjozMzIuNDk3NjgwNjY0MDYyNSxcIklzQXV0b0RldGVjdGVkXCI6dHJ1ZSxcIkNpdHlcIjpcIkJlbmdhbHVydSBOb3J0aFwiLFwiRGV0ZWN0aW9uTWV0YWRhdGFcIjp7XCJJUENhdGVnb3J5XCI6XCJcIixcIklQQ2F0ZWdvcnlDb25maWRlbmNlXCI6XCJcIn0sXCJMYXRpdHVkZVwiOjEyLjk1NDk5MTM0MDYzNzIwNyxcIkxvbmdpdHVkZVwiOjc3LjYwODU3MzkxMzU3NDIyfSxcIkF0dHJpYnV0aW9uXCI6XCJUb210b21cIixcIkhlYWRpbmdcIjpcIkJlbmdhbHVydSBOb3J0aFwiLFwiVmVyc2lvblwiOm51bGwsXCJUcmFmZmljSW5jaWRlbnRzXCI6W3tcIkxvY2F0aW9uXCI6e1wiTGF0aXR1ZGVcIjoxMi45NDc0MTEsXCJMb25naXR1ZGVcIjo3Ny42NTA4MDh9LFwiSXNFeHBpcmluZ0ZvclRhc2tiYXJQcmV2aWV3XCI6ZmFsc2UsXCJEZWxheUNvbG9yXCI6MSxcIkluY2lkZW50XCI6XCJXaW5kIFR1bm5lbCBSb2FkXCIsXCJJbmNpZGVudElkXCI6ODA2NTkyNDkwOTIwMDIwMDAsXCJJc1ByaW9yaXR5T25DYXJkXCI6dHJ1ZSxcIkRlc2NyaXB0aW9uXCI6XCJSb2Fkd29yayBvbiBXaW5kIFR1bm5lbCBSb2FkIGZyb20gQ2hhbGxhZ2hhdHRhIEpjdCBSb2FkIHRvIFllbWFsdXIgTWFpbiBSb2FkLlwiLFwiU2hvd09uQ2FyZFwiOnRydWUsXCJTaG93T25CYWRnZVwiOnRydWUsXCJTdGFydFRpbWVcIjpcIjIwMjQtMDItMjFUMTM6Mzc6MzBaXCIsXCJFbmRUaW1lXCI6XCIwMDAxLTAxLTAxVDAwOjAwOjAwXCIsXCJBbGVydENDb2Rlc1wiOls1XSxcIkV2ZW50TGlzdFwiOls3MDFdLFwiQ2F0ZWdvcnlcIjo5LFwiQ3JpdGljYWxpdHlcIjozLFwiSXNDbG9zZWRGb3JSb3V0aW5nXCI6ZmFsc2UsXCJSb2FkQ2xhc3NcIjozLFwiSXNKYW1jaWRlbnRcIjpmYWxzZSxcIkRlbGF5XCI6MCxcIlJvYWROYW1lXCI6XCJXaW5kIFR1bm5lbCBSb2FkXCJ9LHtcIkxvY2F0aW9uXCI6e1wiTGF0aXR1ZGVcIjoxMi45NjIxNjgsXCJMb25naXR1ZGVcIjo3Ny42MDY3MDZ9LFwiSXNFeHBpcmluZ0ZvclRhc2tiYXJQcmV2aWV3XCI6ZmFsc2UsXCJEZWxheUNvbG9yXCI6MixcIkluY2lkZW50XCI6XCJTaDg1IC8gSG9zdXIgTWFpbiBSb2FkXCIsXCJJbmNpZGVudElkXCI6ODA2MzkwNTExMTIwMTgwMDAsXCJJc1ByaW9yaXR5T25DYXJkXCI6dHJ1ZSxcIkRlc2NyaXB0aW9uXCI6XCJTbG93IHRyYWZmaWMgb24gU2g4NSAvIEhvc3VyIE1haW4gUm9hZCBmcm9tIExhbmdmb3JkIFJvYWQgdG8gQnJpZ2FkZSBSb2FkIC8gUmljaG1vbmQgQ2lyY2xlIFJvYWQuXCIsXCJTaG93T25DYXJkXCI6dHJ1ZSxcIlNob3dPbkJhZGdlXCI6dHJ1ZSxcIlN0YXJ0VGltZVwiOlwiMjAyNC0wMi0yNFQwNDoxOTowMFpcIixcIkVuZFRpbWVcIjpcIjIwMjQtMDItMjRUMDc6MDA6MzBaXCIsXCJBbGVydENDb2Rlc1wiOlszXSxcIkV2ZW50TGlzdFwiOlsxMDhdLFwiQ2F0ZWdvcnlcIjoyLFwiQ3JpdGljYWxpdHlcIjoxLFwiSXNDbG9zZWRGb3JSb3V0aW5nXCI6ZmFsc2UsXCJSb2FkQ2xhc3NcIjozLFwiSXNKYW1jaWRlbnRcIjp0cnVlLFwiRGVsYXlcIjoyNjEsXCJSb2FkTmFtZVwiOlwiU2g4NSAvIEhvc3VyIE1haW4gUm9hZFwifSx7XCJMb2NhdGlvblwiOntcIkxhdGl0dWRlXCI6MTIuOTYzMDU0LFwiTG9uZ2l0dWRlXCI6NzcuNjA2NzE3fSxcIklzRXhwaXJpbmdGb3JUYXNrYmFyUHJldmlld1wiOmZhbHNlLFwiRGVsYXlDb2xvclwiOjIsXCJJbmNpZGVudFwiOlwiU2g4NSAvIEhvc3VyIE1haW4gUm9hZFwiLFwiSW5jaWRlbnRJZFwiOjgwNjM5MDUxMTEyMDE4MDAwMSxcIklzUHJpb3JpdHlPbkNhcmRcIjp0cnVlLFwiRGVzY3JpcHRpb25cIjpcIlNsb3cgdHJhZmZpYyBvbiBTaDg1IC8gSG9zdXIgTWFpbiBSb2FkIGZyb20gTGFuZ2ZvcmQgUm9hZCB0byBCcmlnYWRlIFJvYWQgLyBSaWNobW9uZCBDaXJjbGUgUm9hZC5cIixcIlNob3dPbkNhcmRcIjp0cnVlLFwiU2hvd09uQmFkZ2VcIjp0cnVlLFwiU3RhcnRUaW1lXCI6XCIyMDI0LTAyLTI0VDA2OjM5OjMwWlwiLFwiRW5kVGltZVwiOlwiMjAyNC0wMi0yNFQwNzowMDozMFpcIixcIkFsZXJ0Q0NvZGVzXCI6WzNdLFwiRXZlbnRMaXN0XCI6WzEwOF0sXCJDYXRlZ29yeVwiOjIsXCJDcml0aWNhbGl0eVwiOjEsXCJJc0Nsb3NlZEZvclJvdXRpbmdcIjpmYWxzZSxcIlJvYWRDbGFzc1wiOjMsXCJJc0phbWNpZGVudFwiOnRydWUsXCJEZWxheVwiOjI3MixcIlJvYWROYW1lXCI6XCJTaDg1IC8gSG9zdXIgTWFpbiBSb2FkXCJ9LHtcIkxvY2F0aW9uXCI6e1wiTGF0aXR1ZGVcIjoxMi45NzYzODIsXCJMb25naXR1ZGVcIjo3Ny42MDI0NTh9LFwiSXNFeHBpcmluZ0ZvclRhc2tiYXJQcmV2aWV3XCI6ZmFsc2UsXCJEZWxheUNvbG9yXCI6MixcIkluY2lkZW50XCI6XCJTaDg1IC8gTWFoYXRtYSBHYW5kaGkgUm9hZFwiLFwiSW5jaWRlbnRJZFwiOjgwNjMwMzk0ODc2MDEwMDAyLFwiSXNQcmlvcml0eU9uQ2FyZFwiOnRydWUsXCJEZXNjcmlwdGlvblwiOlwiU2xvdyB0cmFmZmljIG9uIFNoODUgLyBNYWhhdG1hIEdhbmRoaSBSb2FkIGZyb20gTXVzZXVtIFJvYWQgdG8gS2FzdHVyYmEgUm9hZCAvIFF1ZWVucyBSb2FkLlwiLFwiU2hvd09uQ2FyZFwiOnRydWUsXCJTaG93T25CYWRnZVwiOnRydWUsXCJTdGFydFRpbWVcIjpcIjIwMjQtMDItMjRUMDY6Mzc6MDBaXCIsXCJFbmRUaW1lXCI6XCIyMDI0LTAyLTI0VDA3OjAzOjMwWlwiLFwiQWxlcnRDQ29kZXNcIjpbM10sXCJFdmVudExpc3RcIjpbMTE1XSxcIkNhdGVnb3J5XCI6MixcIkNyaXRpY2FsaXR5XCI6MSxcIklzQ2xvc2VkRm9yUm91dGluZ1wiOmZhbHNlLFwiUm9hZENsYXNzXCI6MyxcIklzSmFtY2lkZW50XCI6dHJ1ZSxcIkRlbGF5XCI6MTQ1LFwiUm9hZE5hbWVcIjpcIlNoODUgLyBNYWhhdG1hIEdhbmRoaSBSb2FkXCJ9LHtcIkxvY2F0aW9uXCI6e1wiTGF0aXR1ZGVcIjoxMi45MzE2MjIsXCJMb25naXR1ZGVcIjo3Ny42MTM4NzR9LFwiSXNFeHBpcmluZ0ZvclRhc2tiYXJQcmV2aWV3XCI6ZmFsc2UsXCJEZWxheUNvbG9yXCI6MixcIkluY2lkZW50XCI6XCJTaDg1IC8gSG9zdXIgTWFpbiBSb2FkXCIsXCJJbmNpZGVudElkXCI6ODA2NTM0Nzc4ODQwMTgwMDIsXCJJc1ByaW9yaXR5T25DYXJkXCI6dHJ1ZSxcIkRlc2NyaXB0aW9uXCI6XCJTdGF0aW9uYXJ5IHRyYWZmaWMgb24gU2g4NSAvIEhvc3VyIE1haW4gUm9hZCBmcm9tIDV0aCBNYWluIFJvYWQgdG8gU2FyamFwdXIgUm9hZC5cIixcIlNob3dPbkNhcmRcIjp0cnVlLFwiU2hvd09uQmFkZ2VcIjp0cnVlLFwiU3RhcnRUaW1lXCI6XCIyMDI0LTAyLTI0VDA2OjM2OjMwWlwiLFwiRW5kVGltZVwiOlwiMjAyNC0wMi0yNFQwNjo1OTozMFpcIixcIkFsZXJ0Q0NvZGVzXCI6WzJdLFwiRXZlbnRMaXN0XCI6WzEwMV0sXCJDYXRlZ29yeVwiOjIsXCJDcml0aWNhbGl0eVwiOjEsXCJJc0Nsb3NlZEZvclJvdXRpbmdcIjpmYWxzZSxcIlJvYWRDbGFzc1wiOjMsXCJJc0phbWNpZGVudFwiOnRydWUsXCJEZWxheVwiOjEzMSxcIlJvYWROYW1lXCI6XCJTaDg1IC8gSG9zdXIgTWFpbiBSb2FkXCJ9XSxcIkFyZWFUcmFmZmljRGVsYXlcIjp7XCJBcmVhVHJhZmZpY0Nvbmdlc3Rpb25cIjoyLFwiRGVsYXlDb2xvclwiOjEsXCJBcmVhRGVsYXlTdXBwb3J0ZWRcIjp0cnVlfSxcIlRyYWZmaWNUaW1lXCI6W3tcIlRyYXZlbER1cmF0aW9uXCI6NTcuMCxcIlRyYXZlbERpc3RhbmNlXCI6NDkuMzQzMDAwNDIwNzM2MDA0LFwiVHJhZmZpY0RlbHRhXCI6LTIuMCxcIlRyYWZmaWNDb25nZXN0aW9uXCI6NCxcIklkXCI6XCJ2NzAsaDE4MzUwNjE5MDksaTAsYTAsY2VuLVVTLGRBQUFBQUFBQUFBQTEseTAsczEsbTEsbzEsdDE1LHc2UF9fWF9Na0trRDlfXy1fczNKVFFBMn5BQW96eVpxQnFXTlpBQURnQVRJUW9ENEEwfmNtOWhaQTJ+fn5+fn5+fnYxMix3OXZfX3Z6ZVlLa0FCQUFBZ2RXSlRRQTJ+QUFvenlacWRyVmhaQUFEZ0FSYkhJejhCMH5VMGczTkNBdklFNWxkeUJDZFhNZ1UzUmhibVFnVW05aFpBMn5+fn5+fn5+djEyLGswLHFhdHQ6MjU3XCIsXCJHdWlkXCI6XCJcIixcIlN0YXJ0XCI6e1wiTG9jYXRpb25cIjp7XCJDb3VudHJ5XCI6XCJJbmRpYVwiLFwiQ291bnRyeUNvZGVcIjpudWxsLFwiU3RhdGVcIjpudWxsLFwiUG9zdGFsQ29kZVwiOm51bGwsXCJVdGNPZmZzZXRcIjpudWxsLFwiRG1hQ29kZVwiOm51bGwsXCJJc0xvY2FsaXplZFwiOmZhbHNlLFwiQWNjdXJhY3lcIjotMS4wLFwiSXNBdXRvRGV0ZWN0ZWRcIjpmYWxzZSxcIkNpdHlcIjpcIkhvc2tvdGVcIixcIkRldGVjdGlvbk1ldGFkYXRhXCI6bnVsbCxcIkxhdGl0dWRlXCI6MTMuMDcyMTY5MzAzODk0LFwiTG9uZ2l0dWRlXCI6NzcuNzkyMjIxMDY5MzM1OX0sXCJBZGRyZXNzXCI6XCJcIixcIkFkZHJlc3NMaW5lMVwiOm51bGwsXCJBZGRyZXNzVHlwZVwiOjAsXCJBZGRyZXNzU291cmNlXCI6MCxcIlRpbWV6b25lSWRcIjpcIlwiLFwiVXBkYXRlVGltZVwiOlwiXCJ9LFwiRW5kXCI6e1wiTG9jYXRpb25cIjp7XCJDb3VudHJ5XCI6XCJJbmRpYVwiLFwiQ291bnRyeUNvZGVcIjpudWxsLFwiU3RhdGVcIjpudWxsLFwiUG9zdGFsQ29kZVwiOm51bGwsXCJVdGNPZmZzZXRcIjpudWxsLFwiRG1hQ29kZVwiOm51bGwsXCJJc0xvY2FsaXplZFwiOmZhbHNlLFwiQWNjdXJhY3lcIjotMS4wLFwiSXNBdXRvRGV0ZWN0ZWRcIjpmYWxzZSxcIkNpdHlcIjpcIkRvZGJhbGxhcHVyYVwiLFwiRGV0ZWN0aW9uTWV0YWRhdGFcIjpudWxsLFwiTGF0aXR1ZGVcIjoxMy4yOTczMDAzMzg3NDUxLFwiTG9uZ2l0dWRlXCI6NzcuNTM4Mzk4NzQyNjc1OH0sXCJBZGRyZXNzXCI6XCJcIixcIkFkZHJlc3NMaW5lMVwiOm51bGwsXCJBZGRyZXNzVHlwZVwiOjAsXCJBZGRyZXNzU291cmNlXCI6MCxcIlRpbWV6b25lSWRcIjpcIlwiLFwiVXBkYXRlVGltZVwiOlwiXCJ9LFwiQm91bmRpbmdCb3hcIjpudWxsLFwiVmlhUm9hZHNcIjpcIk5INjQ4XCIsXCJSb3V0ZVR5cGVcIjowLFwiUm91dGVPcHRpb25zXCI6bnVsbCxcIlJvdXRlUGF0aFwiOlwiXCIsXCJJbmNpZGVudHNcIjpudWxsLFwiU2VnbWVudENvbmdlc3Rpb25cIjpudWxsLFwiVHJhdmVsRHVyYXRpb25IaXN0b3JpY1wiOjAuMH0se1wiVHJhdmVsRHVyYXRpb25cIjo1Ny4wLFwiVHJhdmVsRGlzdGFuY2VcIjo0OC40OTU5OTk0NTQ4NDgwMDQsXCJUcmFmZmljRGVsdGFcIjo0LjAsXCJUcmFmZmljQ29uZ2VzdGlvblwiOjAsXCJJZFwiOlwidjcwLGgxNjYwOTg4Mjg0LGkwLGEwLGNlbi1VUyxkQUFBQUFBQUFBQUExLHkwLHMxLG0xLG8xLHQxNSx3NnZfXzN6UTBLa0Q5X18tXzIxaFRRQTJ+QUFvenlacDV0VmxaQUFEZ0FRQUFnRDhCMH5jbTloWkEyfn5+fn5+fn52MTIsdzZmX19IelNKS2tBQUFBQ2dtMFZUUUEyfkFBb3p5Wm9kQzA5WkFBRGdBV2ltV0Q4QjB+VTJnek15QXZJRlIxYld0MWNpQlNiMkZrMH5+fn5+fn5+djEyLGswLHFhdHQ6MjU3XCIsXCJHdWlkXCI6XCJcIixcIlN0YXJ0XCI6e1wiTG9jYXRpb25cIjp7XCJDb3VudHJ5XCI6XCJJbmRpYVwiLFwiQ291bnRyeUNvZGVcIjpudWxsLFwiU3RhdGVcIjpudWxsLFwiUG9zdGFsQ29kZVwiOm51bGwsXCJVdGNPZmZzZXRcIjpudWxsLFwiRG1hQ29kZVwiOm51bGwsXCJJc0xvY2FsaXplZFwiOmZhbHNlLFwiQWNjdXJhY3lcIjotMS4wLFwiSXNBdXRvRGV0ZWN0ZWRcIjpmYWxzZSxcIkNpdHlcIjpcIk5lbGFtYW5nYWxhXCIsXCJEZXRlY3Rpb25NZXRhZGF0YVwiOm51bGwsXCJMYXRpdHVkZVwiOjEzLjEwMTk2NTkwNDIzNTgsXCJMb25naXR1ZGVcIjo3Ny4zODg0MTI0NzU1ODU5fSxcIkFkZHJlc3NcIjpcIlwiLFwiQWRkcmVzc0xpbmUxXCI6bnVsbCxcIkFkZHJlc3NUeXBlXCI6MCxcIkFkZHJlc3NTb3VyY2VcIjowLFwiVGltZXpvbmVJZFwiOlwiXCIsXCJVcGRhdGVUaW1lXCI6XCJcIn0sXCJFbmRcIjp7XCJMb2NhdGlvblwiOntcIkNvdW50cnlcIjpcIkluZGlhXCIsXCJDb3VudHJ5Q29kZVwiOm51bGwsXCJTdGF0ZVwiOm51bGwsXCJQb3N0YWxDb2RlXCI6bnVsbCxcIlV0Y09mZnNldFwiOm51bGwsXCJEbWFDb2RlXCI6bnVsbCxcIklzTG9jYWxpemVkXCI6ZmFsc2UsXCJBY2N1cmFjeVwiOi0xLjAsXCJJc0F1dG9EZXRlY3RlZFwiOmZhbHNlLFwiQ2l0eVwiOlwiVHVta3VyXCIsXCJEZXRlY3Rpb25NZXRhZGF0YVwiOm51bGwsXCJMYXRpdHVkZVwiOjEzLjI2Nzk3NTgwNzE4OTksXCJMb25naXR1ZGVcIjo3Ny4wODc2MjM1OTYxOTE0fSxcIkFkZHJlc3NcIjpcIlwiLFwiQWRkcmVzc0xpbmUxXCI6bnVsbCxcIkFkZHJlc3NUeXBlXCI6MCxcIkFkZHJlc3NTb3VyY2VcIjowLFwiVGltZXpvbmVJZFwiOlwiXCIsXCJVcGRhdGVUaW1lXCI6XCJcIn0sXCJCb3VuZGluZ0JveFwiOm51bGwsXCJWaWFSb2Fkc1wiOlwiQUg0NywgTkg3M1wiLFwiUm91dGVUeXBlXCI6MCxcIlJvdXRlT3B0aW9uc1wiOm51bGwsXCJSb3V0ZVBhdGhcIjpcIlwiLFwiSW5jaWRlbnRzXCI6bnVsbCxcIlNlZ21lbnRDb25nZXN0aW9uXCI6bnVsbCxcIlRyYXZlbER1cmF0aW9uSGlzdG9yaWNcIjowLjB9LHtcIlRyYXZlbER1cmF0aW9uXCI6NTYuMCxcIlRyYXZlbERpc3RhbmNlXCI6MzIuODQwOTk5NDc4MTQ0MDA2LFwiVHJhZmZpY0RlbHRhXCI6Ni4wLFwiVHJhZmZpY0Nvbmdlc3Rpb25cIjoxLFwiSWRcIjpcInY3MCxoMjU4MDA2MzYyLGkwLGEwLGNlbi1VUyxkQUFBQUFBQUFBQUExLHkwLHMxLG0xLG8xLHQxNSx3NnZfXzN6UTBLa0Q5X18tXzIxaFRRQTJ+QUFvenlacDV0VmxaQUFEZ0FRQUFnRDhCMH5jbTloWkEyfn5+fn5+fn52MTIsdzl2X192emVZS2tBQkFBQWdkV0pUUUEyfkFBb3p5WnFkclZoWkFBRGdBUmJISXo4QjB+VTBnM05DQXZJRTVsZHlCQ2RYTWdVM1JoYm1RZ1VtOWhaQTJ+fn5+fn5+fnYxMixrMCxxYXR0OjI1N1wiLFwiR3VpZFwiOlwiXCIsXCJTdGFydFwiOntcIkxvY2F0aW9uXCI6e1wiQ291bnRyeVwiOlwiSW5kaWFcIixcIkNvdW50cnlDb2RlXCI6bnVsbCxcIlN0YXRlXCI6bnVsbCxcIlBvc3RhbENvZGVcIjpudWxsLFwiVXRjT2Zmc2V0XCI6bnVsbCxcIkRtYUNvZGVcIjpudWxsLFwiSXNMb2NhbGl6ZWRcIjpmYWxzZSxcIkFjY3VyYWN5XCI6LTEuMCxcIklzQXV0b0RldGVjdGVkXCI6ZmFsc2UsXCJDaXR5XCI6XCJOZWxhbWFuZ2FsYVwiLFwiRGV0ZWN0aW9uTWV0YWRhdGFcIjpudWxsLFwiTGF0aXR1ZGVcIjoxMy4xMDE5NjU5MDQyMzU4LFwiTG9uZ2l0dWRlXCI6NzcuMzg4NDEyNDc1NTg1OX0sXCJBZGRyZXNzXCI6XCJcIixcIkFkZHJlc3NMaW5lMVwiOm51bGwsXCJBZGRyZXNzVHlwZVwiOjAsXCJBZGRyZXNzU291cmNlXCI6MCxcIlRpbWV6b25lSWRcIjpcIlwiLFwiVXBkYXRlVGltZVwiOlwiXCJ9LFwiRW5kXCI6e1wiTG9jYXRpb25cIjp7XCJDb3VudHJ5XCI6XCJJbmRpYVwiLFwiQ291bnRyeUNvZGVcIjpudWxsLFwiU3RhdGVcIjpudWxsLFwiUG9zdGFsQ29kZVwiOm51bGwsXCJVdGNPZmZzZXRcIjpudWxsLFwiRG1hQ29kZVwiOm51bGwsXCJJc0xvY2FsaXplZFwiOmZhbHNlLFwiQWNjdXJhY3lcIjotMS4wLFwiSXNBdXRvRGV0ZWN0ZWRcIjpmYWxzZSxcIkNpdHlcIjpcIkRvZGJhbGxhcHVyYVwiLFwiRGV0ZWN0aW9uTWV0YWRhdGFcIjpudWxsLFwiTGF0aXR1ZGVcIjoxMy4yOTczMDAzMzg3NDUxLFwiTG9uZ2l0dWRlXCI6NzcuNTM4Mzk4NzQyNjc1OH0sXCJBZGRyZXNzXCI6XCJcIixcIkFkZHJlc3NMaW5lMVwiOm51bGwsXCJBZGRyZXNzVHlwZVwiOjAsXCJBZGRyZXNzU291cmNlXCI6MCxcIlRpbWV6b25lSWRcIjpcIlwiLFwiVXBkYXRlVGltZVwiOlwiXCJ9LFwiQm91bmRpbmdCb3hcIjpudWxsLFwiVmlhUm9hZHNcIjpcIlNINzRcIixcIlJvdXRlVHlwZVwiOjAsXCJSb3V0ZU9wdGlvbnNcIjpudWxsLFwiUm91dGVQYXRoXCI6XCJcIixcIkluY2lkZW50c1wiOm51bGwsXCJTZWdtZW50Q29uZ2VzdGlvblwiOm51bGwsXCJUcmF2ZWxEdXJhdGlvbkhpc3RvcmljXCI6MC4wfV0sXCJUcmFmZmljRGVsYXlzXCI6W3tcIkRlbGF5XCI6NSxcIkxvY2FsaXR5XCI6XCJIb3Nrb3RlXCIsXCJCb3VuZGluZ0JveE1pblwiOntcIkxhdGl0dWRlXCI6MTIuOTM3OTUwNTc0ODEzMTgxLFwiTG9uZ2l0dWRlXCI6NzcuNjExMjkyNjU2NTY2NDZ9LFwiQm91bmRpbmdCb3hNYXhcIjp7XCJMYXRpdHVkZVwiOjEyLjk1NjQ4MDU3NDgxMzE4MyxcIkxvbmdpdHVkZVwiOjc3LjYzMzI1MjY1NjU2NjQ3fSxcIlRyYWZmaWNDb25nZXN0aW9uXCI6MixcIkluY2lkZW50XCI6XCJFamlwdXJhIE1haW4gUm9hZCBFQlwiLFwiRGVsYXlDb2xvclwiOjF9LHtcIkRlbGF5XCI6MixcIkxvY2FsaXR5XCI6XCJIb3Nrb3RlXCIsXCJCb3VuZGluZ0JveE1pblwiOntcIkxhdGl0dWRlXCI6MTIuOTYxOTQwMjUyMjQyMjY2LFwiTG9uZ2l0dWRlXCI6NzcuNTkxMzU0MzMzNTA3NTd9LFwiQm91bmRpbmdCb3hNYXhcIjp7XCJMYXRpdHVkZVwiOjEyLjk3NDk1MDI1MjI0MjI2OCxcIkxvbmdpdHVkZVwiOjc3LjYxMTQ0NDMzMzUwNzU4fSxcIlRyYWZmaWNDb25nZXN0aW9uXCI6MSxcIkluY2lkZW50XCI6XCJtaXNzaW9uIHJvYWQgV0JcIixcIkRlbGF5Q29sb3JcIjowfSx7XCJEZWxheVwiOjEsXCJMb2NhbGl0eVwiOlwiSG9za290ZVwiLFwiQm91bmRpbmdCb3hNaW5cIjp7XCJMYXRpdHVkZVwiOjEyLjk1ODU5Mjg1NTM5MTY5NixcIkxvbmdpdHVkZVwiOjc3LjU5Mjg3NzgyODIyODAzfSxcIkJvdW5kaW5nQm94TWF4XCI6e1wiTGF0aXR1ZGVcIjoxMi45NjI2NzI4NTUzOTE2OTgsXCJMb25naXR1ZGVcIjo3Ny41OTQ5ODc4MjgyMjgwM30sXCJUcmFmZmljQ29uZ2VzdGlvblwiOjIsXCJJbmNpZGVudFwiOlwiU3JpIEtlbmdhbCBIYW51bWFudGhhaWFoIFJvYWQgTkJcIixcIkRlbGF5Q29sb3JcIjoxfV0sXCJUcmFmZmljQ2FtZXJhc1wiOltdLFwiVHJhZmZpY1N0YXR1c0xpc3RcIjpbe1wiS2V5XCI6XCJjb25zdHJ1Y3Rpb25cIixcIlN0YXRWYWx1ZVwiOjYsXCJQZXJpb2RcIjpcIlwifSx7XCJLZXlcIjpcInJvYWRDbG9zdXJlc1wiLFwiU3RhdFZhbHVlXCI6MTYsXCJQZXJpb2RcIjpcIlwifV0sXCJUcmFmZmljTmV3c1wiOm51bGwsXCJHYXNTdGF0aW9uc1wiOltdLFwiVHJhZmZpY0luc2lnaHRSZXNwb25zZVwiOm51bGwsXCJUcmFuc2l0TmVhcmJ5TGluZXNcIjpudWxsLFwiTG9jYXRpb25Nb2RlXCI6XCJBdXRvRGV0ZWN0XCIsXCJTdXBwb3J0ZWRBcmVhXCI6dHJ1ZSxcIlN1Z2dlc3RlZFpvb21MZXZlbFwiOjE0LFwiSG9tZVwiOm51bGwsXCJXb3JrXCI6bnVsbCxcIlJvdXRlc1wiOm51bGwsXCJDdXN0b21Sb3V0ZXNcIjpudWxsLFwiQ29tbXV0ZURlc3RpbmF0aW9uc1wiOm51bGwsXCJVc2VyRG9lc250SGF2ZVdvcmtcIjpmYWxzZSxcIkRpc3RhbmNlVW5pdFwiOlwiS2lsb21ldGVyc1wiLFwiQXZhaWxhYmxlSW5mb1R5cGVzXCI6WzksNSw3LDhdLFwiSW5mb1R5cGVzRm9yRmFsbGJhY2tcIjpbOSw1LDcsOCwyNTVdLFwiTXVsdGlTY2VuYXJpb0Nhcm91c2VsSW5mb1R5cGVzXCI6bnVsbCxcIldlYXRoZXJUcmFmZmljQ29tYm9JbmZvVHlwZVwiOjAsXCJDb21tdXRlT3V0Y29tZVwiOjUsXCJQcmV2aWV3SW5mb1wiOltdLFwiQmFkZ2VJbmZvXCI6W10sXCJJc1Nwb3RsaWdodFwiOlwiMFwiLFwiVXBzZWxsRW5hYmxlZEZvcldwb1wiOmZhbHNlLFwiRW5hYmxlSW5saW5lQ29tbXV0ZVVwc2VsbFwiOmZhbHNlLFwiRW5hYmxlSW5saW5lQ29tbXV0ZVVwc2VsbFdpdGhSZXdhcmRzXCI6ZmFsc2UsXCJFbmFibGVNb2JpbGVDb21tdXRlVXBzZWxsV2l0aFJld2FyZHNcIjpmYWxzZSxcIklzTW9iaWxlVXBzZWxsV2l0aFJld2FyZHNIaWRkZW5cIjpmYWxzZSxcIkVuYWJsZU1vYmlsZUNvbW11dGVVcHNlbGxcIjpmYWxzZSxcIklzTW9iaWxlVXBzZWxsSGlkZGVuXCI6ZmFsc2UsXCJJc0NvbWJvQ2FyZEVsaWdpYmxlXCI6ZmFsc2UsXCJUcmFmZmljSW5mb1R5cGVcIjo5fSIsImNhcmRJZCI6NjB9LHsiaWQiOiJBQTE5RmxpMiIsInR5cGUiOiJzbGlkZXNob3ciLCJ0aXRsZSI6IldoYXQgZG8geW91IG5lZWQgdG8ga25vdyBhYm91dCBjbGltYmluZyBNb3VudCBFdmVyZXN0PyIsImFic3RyYWN0IjoiV2hhdCBkbyB5b3UgbmVlZCB0byBrbm93IGFib3V0IGNsaW1iaW5nIE1vdW50IEV2ZXJlc3Q/IiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9tb25leS90b3BzdG9yaWVzL3doYXQtZG8teW91LW5lZWQtdG8ta25vdy1hYm91dC1jbGltYmluZy1tb3VudC1ldmVyZXN0L3NzLUFBMTlGbGkyIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInNsaWRlcyI6W3sidGl0bGUiOiJIZXJlJ3MgZXZlcnl0aGluZyB5b3UnZCBldmVyIHdhbnQgdG8ga25vdyBhYm91dCB0aGUgd29ybGQncyB0YWxsZXN0IG1vdW50YWluIiwiYm9keSI6IjxwPk1vdW50IEV2ZXJlc3QgaXMgb25lIG9mIHRoZSBtb3N0IGltcG9zaW5nIG1vdW50YWlucyBvbiBFYXJ0aCBhbmQgY2xpbWJpbmcgdG8gdGhlIHRvcCBvZiB0aGlzIGdlb2xvZ2ljYWwgYmVoZW1vdGggaGFzIGJlY29tZSBhIHJpZ2h0IG9mIHBhc3NhZ2UgZm9yIHNvbWUgb2YgdGhlIHdvcmxkJ3MgbW9zdCBleHRyZW1lIGRhcmVkZXZpbHMuIEJ1dCB3aGF0IGRvIHlvdSBrbm93IGFib3V0IHdoYXQgaXQgdGFrZXMgdG8gc2NhbGUgdGhlIHdvcmxkJ3MgdGFsbGVzdCBwZWFrPzwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMjgwLCJxdWFsaXR5Ijo4MSwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFrbU5mci5pbWciLCJhdHRyaWJ1dGlvbiI6IlByb3ZpZGVkIGJ5IFRoZSBEYWlseSBEaWdlc3QiLCJ0aXRsZSI6IkhlcmUncyBldmVyeXRoaW5nIHlvdSdkIGV2ZXIgd2FudCB0byBrbm93IGFib3V0IHRoZSB3b3JsZCdzIHRhbGxlc3QgbW91bnRhaW4iLCJjYXB0aW9uIjoiPHA+TW91bnQgRXZlcmVzdCBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3NpbmcgbW91bnRhaW5zIG9uIEVhcnRoIGFuZCBjbGltYmluZyB0byB0aGUgdG9wIG9mIHRoaXMgZ2VvbG9naWNhbCBiZWhlbW90aCBoYXMgYmVjb21lIGEgcmlnaHQgb2YgcGFzc2FnZSBmb3Igc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IGV4dHJlbWUgZGFyZWRldmlscy4gQnV0IHdoYXQgZG8geW91IGtub3cgYWJvdXQgd2hhdCBpdCB0YWtlcyB0byBzY2FsZSB0aGUgd29ybGQncyB0YWxsZXN0IHBlYWs/PC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiQW4gaW5jcmVhc2luZ2x5IGFjY2Vzc2libGUgYWNjb21wbGlzaG1lbnQiLCJib2R5IjoiPHA+U3VtbWl0aW5nIE1vdW50IEV2ZXJlc3QgdXNlZCB0byBiZSBhIGZlYXQgcmVzZXJ2ZWQgZm9yIG9ubHkgdGhlIG1vc3Qgc2Vhc29uZWQgbW91bnRhaW5lZXJzIGJ1dCBpdCdzIGluY3JlYXNpbmdseSBiZWNvbWUgYW4gYWNjb21wbGlzaG1lbnQgdGhhdCBhbG1vc3QgYW55b25lIGluIHRoZSB3b3JsZCBjYW4gY2hlY2sgb2ZmIHRoZWlyIGJ1Y2tldCBsaXN0LjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMjgwLCJxdWFsaXR5Ijo4MSwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFrbUlsZy5pbWciLCJhdHRyaWJ1dGlvbiI6IlByb3ZpZGVkIGJ5IFRoZSBEYWlseSBEaWdlc3QiLCJ0aXRsZSI6IkFuIGluY3JlYXNpbmdseSBhY2Nlc3NpYmxlIGFjY29tcGxpc2htZW50IiwiY2FwdGlvbiI6IjxwPlN1bW1pdGluZyBNb3VudCBFdmVyZXN0IHVzZWQgdG8gYmUgYSBmZWF0IHJlc2VydmVkIGZvciBvbmx5IHRoZSBtb3N0IHNlYXNvbmVkIG1vdW50YWluZWVycyBidXQgaXQncyBpbmNyZWFzaW5nbHkgYmVjb21lIGFuIGFjY29tcGxpc2htZW50IHRoYXQgYWxtb3N0IGFueW9uZSBpbiB0aGUgd29ybGQgY2FuIGNoZWNrIG9mZiB0aGVpciBidWNrZXQgbGlzdC48L3A+Iiwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiJJdCdzIHN0aWxsIHZlcnkgZGFuZ2Vyb3VzIiwiYm9keSI6IjxwPlRoYXQncyBub3QgdG8gc2F5IHRoYXQgY2xpbWJpbmcgdG8gdGhlIHN1bW1pdCBvZiBNb3VudCBFdmVyZXN0IGlzbid0IHN0aWxsIGRhbmdlcm91cy4gSXQncyBjZXJ0YWlubHkgbm90IGZvciB0aGUgZmFpbnQgb2YgaGVhcnRzLiBCdXQgbWFraW5nIGl0IHRvIHRoZSB0b3AgaXMgZWFzaWVyIHRoYW4gZXZlci4gSWYgeW91J3JlIHRoaW5raW5nIGFib3V0IG1ha2luZyB0aGUgdHJlayB0aGVyZSBhcmUgYSBmZXcgdGhpbmdzIHlvdSBtaWdodCB3YW50IHRvIGtub3chPC9wPiIsImltYWdlIjp7IndpZHRoIjoxOTIwLCJoZWlnaHQiOjEyODAsInF1YWxpdHkiOjgxLCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWttTmZCLmltZyIsImF0dHJpYnV0aW9uIjoiUHJvdmlkZWQgYnkgVGhlIERhaWx5IERpZ2VzdCIsInRpdGxlIjoiSXQncyBzdGlsbCB2ZXJ5IGRhbmdlcm91cyIsImNhcHRpb24iOiI8cD5UaGF0J3Mgbm90IHRvIHNheSB0aGF0IGNsaW1iaW5nIHRvIHRoZSBzdW1taXQgb2YgTW91bnQgRXZlcmVzdCBpc24ndCBzdGlsbCBkYW5nZXJvdXMuIEl0J3MgY2VydGFpbmx5IG5vdCBmb3IgdGhlIGZhaW50IG9mIGhlYXJ0cy4gQnV0IG1ha2luZyBpdCB0byB0aGUgdG9wIGlzIGVhc2llciB0aGFuIGV2ZXIuIElmIHlvdSdyZSB0aGlua2luZyBhYm91dCBtYWtpbmcgdGhlIHRyZWsgdGhlcmUgYXJlIGEgZmV3IHRoaW5ncyB5b3UgbWlnaHQgd2FudCB0byBrbm93ITwvcD4iLCJzb3VyY2UiOiJtc24ifX1dLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMDM6MDA6MjFaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE5MjAsImhlaWdodCI6MTI4MCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjU4NThjYTQ5NDU5ZjcxOTc4Y2MxMjBmNDc5NTI1OTdiJnBpZD1XZHAiLCJ0aXRsZSI6IkhlcmUncyBldmVyeXRoaW5nIHlvdSdkIGV2ZXIgd2FudCB0byBrbm93IGFib3V0IHRoZSB3b3JsZCdzIHRhbGxlc3QgbW91bnRhaW4iLCJjYXB0aW9uIjoiPHA+TW91bnQgRXZlcmVzdCBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3NpbmcgbW91bnRhaW5zIG9uIEVhcnRoIGFuZCBjbGltYmluZyB0byB0aGUgdG9wIG9mIHRoaXMgZ2VvbG9naWNhbCBiZWhlbW90aCBoYXMgYmVjb21lIGEgcmlnaHQgb2YgcGFzc2FnZSBmb3Igc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IGV4dHJlbWUgZGFyZWRldmlscy4gQnV0IHdoYXQgZG8geW91IGtub3cgYWJvdXQgd2hhdCBpdCB0YWtlcyB0byBzY2FsZSB0aGUgd29ybGQncyB0YWxsZXN0IHBlYWs/PC9wPiIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjM0U0NzVEIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFREYzRjkiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzNFNDc1RCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRURGM0Y5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkIxZTdFb0wiLCJuYW1lIjoiVGhlIERhaWx5IERpZ2VzdCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWdKT1dBLmltZyIsInByb2ZpbGVJZCI6InZpZC1tOW00anZ2bnMyajA3cjhyeW5hNHVreXVzdjl5Njl2ZzhjZ250ZXhyNGtpZDJ1dzd3Z3ZzIn0sImNhdGVnb3J5IjoibW9uZXkiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MTIsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50IjoxMiwidHlwZSI6InVwdm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9hZDdkZThmMC01M2VkLTQxZTAtYmI4Ni04NmZiMGJiODFhNGQiLCJmZWVkTmFtZSI6IkxpZmVzdHlsZSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjE5LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJ1MlUiLCJyYW5rIjowfV0sInJpIjoiMjA4LDIwOSIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWlOd294IiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkJyYWluIFRlYXNlcjogQ2FuIFlvdSBGaW5kIFRoZSBBcHBsZSBIaWRkZW4gSW4gVGhlIEZvcmVzdCBXaXRoaW4gMTAgU2Vjb25kcz8iLCJhYnN0cmFjdCI6IkxldCdzIGRlbHZlIGludG8gb25lIHN1Y2ggb3B0aWNhbCBpbGx1c2lvbiBjaGFsbGVuZ2U6IHNwb3R0aW5nIGEgaGlkZGVuIGFwcGxlIGluIGEgZm9yZXN0IHNjZW5lLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2VudGVydGFpbm1lbnQvb3NjYXJzL2JyYWluLXRlYXNlci1jYW4teW91LWZpbmQtdGhlLWFwcGxlLWhpZGRlbi1pbi10aGUtZm9yZXN0LXdpdGhpbi0xMC1zZWNvbmRzL2FyLUJCMWlOd294IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yNFQwNTo0MjozOFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTI4MCwiaGVpZ2h0Ijo3MjAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy42ODRlNjZkMmU4OWYzNjJlZjgyNTBhMWQxZjIxYjExNSZwaWQ9V2RwIiwidGl0bGUiOiJicmFpbiB0ZWFzZXI6IGNhbiB5b3UgZmluZCB0aGUgYXBwbGUgaGlkZGVuIGluIHRoZSBmb3Jlc3Qgd2l0aGluIDEwIHNlY29uZHM/IiwiY2FwdGlvbiI6ImJyYWluIHRlYXNlcjogY2FuIHlvdSBmaW5kIHRoZSBhcHBsZSBoaWRkZW4gaW4gdGhlIGZvcmVzdCB3aXRoaW4gMTAgc2Vjb25kcz8iLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzRGNTYyNiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDRFMkI1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM0RjU2MjYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q0RTJCNSIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBMTBiSHMxIiwibmFtZSI6IlRpbWVzIE5vdyIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMTBiRnBDLmltZyIsInByb2ZpbGVJZCI6InZpZC1qc2hrOXB1NXQ5NmE2OGg4d2RyNmUyNWZnMGQzZnF2MmRkcnZxcjc1aGJxdDlqdjNzODBhIn0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MSwidHlwZSI6InVwdm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9iNDU5MjE3Mi0yN2I4LTQ5NTUtYTE2OS0wMmE4YTEzNGI1MmUiLCJmZWVkTmFtZSI6IkVudGVydGFpbm1lbnQiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoyMCwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiY0ZfVTJ1IiwicmFuayI6MH1dLCJyaSI6IjIyMCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJ0eXBlIjoibmF0aXZlYWQiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjB9LHsiaWQiOiJIZWFsdGgiLCJ0eXBlIjoiaGVhbHRodGlwY2FyZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicG9zaXRpb24iOjAsImRhdGEiOiJ7XHJcbiAgXCJoZWFsdGhUaXBcIjogXCJBdm9pZCBwcm90ZWluIGJhcnMgdGhhdCBjb250YWluIHNvcmJpdG9sLCB4eWxpdG9sIGFuZCBtYWx0aXRvbC5cIixcclxuICBcInB1Ymxpc2hlck5hbWVcIjogXCJUaGVqYSBLZWVydGhpXCIsXHJcbiAgXCJtc25BcnRpY2xlVVJMXCI6IFwiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9oZWFsdGgvYXNrLXByb2Zlc3Npb25hbHMvaW4tZXhwZXJ0LWFuc3dlcnMtb24tUHJvdGVpbi1CYXIvaW4tUHJvdGVpbiUyMEJhcj9xdWVzdGlvbmlkPWhjbzhpYXZkJnR5cGU9bnV0cml0aW9uJnNvdXJjZT1odGlwcFwiLFxyXG4gIFwiaGVhZGVyVGV4dFwiOiBudWxsLFxyXG4gIFwiZm9vdGVyQ1RBXCI6IFwiU2VlIE1vcmVcIixcclxuICBcInB1YmxpY2F0aW9uRGF0ZVwiOiBcIjIvMTgvMjAyNCA1OjI1OjU4IFBNXCIsXHJcbiAgXCJhcnRpY2xlVGh1bWJuYWlsXCI6IHtcclxuICAgIFwicHVibGlzaGVySWNvblwiOiBcImh0dHBzOi8vd3d3LmJpbmcuY29tL3RoP2lkPU9TQUhJLkVDNUM5MUJFRjA3RkZDMzc0QjEyQ0E5MzYzMkVFRTQ4XCIsXHJcbiAgICBcImltYWdlVVJMXCI6IFwiaHR0cHM6Ly93d3cuYmluZy5jb20vdGg/aWQ9T1NBSEkuREMwOTRFRjM0RUVBOTBEMjJBNjhDREUyQ0Y5MzM3MTgmdz0yMDAwXCIsXHJcbiAgICBcImZsYWdJbWFnZVVSTFwiOiBcIlwiLFxyXG4gICAgXCJsaWdodE1vZGVCYWNrZ3JvdW5kQ29sb3JcIjogXCIjMkEzMTM0XCIsXHJcbiAgICBcImRhcmtNb2RlQmFja2dyb3VuZENvbG9yXCI6IFwiIzJBMzEzNFwiXHJcbiAgfSxcclxuICBcInN1YkNhdGVnb3J5XCI6IFwiRm9vZFwiLFxyXG4gIFwiY2FyZFR5cGVcIjogXCJsYW5kaW5nX2Fza19wcm9mZXNzaW9uYWxzX3BhZ2VcIixcclxuICBcImV4cGVydFF1YWxpZmljYXRpb25cIjogXCJNLlNjIEZvb2QgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBhbmQgTnV0cml0aW9uXCJcclxufSIsImRhdGFUeXBlIjoiaGVhbHRodGlwY2FyZCIsImRhdGFWZXJzaW9uIjoxLCJjYXJkSWQiOjU5fV19LHsiZGF0YVRlbXBsYXRlIjoibXNmdC1mdWxsLXdpZGUtb25lLWNhcmQtZml2ZS1jb2wiLCJsYXlvdXRUZW1wbGF0ZSI6Im1zZnQtZnVsbC13aWRlLW9uZS1jYXJkLWZpdmUtY29sIiwiY2FyZHMiOlt7InR5cGUiOiJTaG9wcGluZ0Nhcm91c2VsIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwb3NpdGlvbiI6MCwiZGF0YSI6IntcInNob3BwaW5nRW50aXRpZXNcIjpbe1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1QdXJpdGFuJTI3cytQcmlkZStPcmdhbmljK0hlcmJhbCtTbGVlcCtDb21wbGV4JTJDKzMwK1RhYmxldHMmZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjExNzgxMTEzMjYxMyUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxMTc4MTExMzI2MTMlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCJcIixcImZyb21IaXN0b3J5XCI6XCIxXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIkhpc3RvcnlPTUEtMTE3ODExMTMyNjEzXCIsXCJ0aXRsZVwiOlwiUHVyaXRhbidzIFByaWRlIE9yZ2FuaWMgSGVyYmFsIFNsZWVwIENvbXBsZXgsIDMwIFRhYmxldHNcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcInRoZUtpd2xhXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJQdXJpdGFuJ3MgUHJpZGUgT3JnYW5pYyBIZXJiYWwgU2xlZXAgQ29tcGxleCwgMzAgVGFibGV0c1wiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLm56SEw5ZFBndkx4diUyYkE0NzRDNDc0Jm89NSZwaWQ9MjEuMVwiLFwiaW1hZ2VUaW50XCI6MCxcImJhY2tncm91bmRDb2xvclwiOlwiXCIsXCJmb250U3R5bGVcIjp7fSxcImNzc1N0eWxlXCI6e30sXCJzb3VyY2VJbWFnZXNVcmxzXCI6W119LFwicHJpY2VJbmZvXCI6e1wib3JpZ2luYWxQcmljZVwiOlwiXCIsXCJwcmljZVwiOlwi4oK5NDk5OC4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpIaXN0b3J5T01BLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPU9uZVBsdXMrMTIrNUcrRHVhbCtTaW0rU21hcnRwaG9uZSsoMTJHQitSQU0lMkMrMjU2R0IrU3RvcmFnZSkrU25hcGRyYWdvbis4K0dlbiszKyU3Qys0dGgrR2VuK0hhc3NlbGJsYWQrQ2FtZXJhKyU3QysxMjArSHorUHJvWERSK0Rpc3BsYXkrKFNpbGt5K0JsYWNrKSZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyMTgzNTExNTE2NTY5JTIyJTIwZ0dsb2JhbE9mZmVySWRzOiUyMjE4MzUxMTUxNjU2OSUyMiUyMGdJZEhhc2g6JTIyMCUyMiZwcm9kdWN0cGFnZT10cnVlJnZhcmlhbnRzPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwJnNyY3RtdGlkPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwXCIsXCJ0cmVuZFJhbmtcIjpcIlwiLFwiZnJvbUhpc3RvcnlcIjpcIjFcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiSGlzdG9yeU9NQS0xODM1MTE1MTY1NjlcIixcInRpdGxlXCI6XCJPbmVQbHVzIDEyIDVHIER1YWwgU2ltIFNtYXJ0cGhvbmUgKDEyR0IgUkFNLCAyNTZHQiBTdG9yYWdlKSBTbmFwZHJhZ29uIDggR2VuIDMgfCA0dGggR2VuIEhhc3NlbGJsYWQgQ2FtZXJhIHwgMTIwIEh6IFByb1hEUiBEaXNwbGF5IChTaWxreSBCbGFjaylcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIlZpamF5IFNhbGVzXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJPbmVQbHVzIDEyIDVHIER1YWwgU2ltIFNtYXJ0cGhvbmUgKDEyR0IgUkFNLCAyNTZHQiBTdG9yYWdlKSBTbmFwZHJhZ29uIDggR2VuIDMgfCA0dGggR2VuIEhhc3NlbGJsYWQgQ2FtZXJhIHwgMTIwIEh6IFByb1hEUiBEaXNwbGF5IChTaWxreSBCbGFjaylcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy5sR0ZJS2lyam5pJTJia1hRNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTY0OTk5LjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOkhpc3RvcnlPTUEsUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9TW92YXZpK0J1bmRsZSstK1ZpZGVvK1N1aXRlKyUyQitQaG90bytFZGl0b3IrLStNb3ZhdmkrT2ZmaWNpYWwrU2l0ZSZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyNTk5OTgyNDc2MjIlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyNTk5OTgyNDc2MjIlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCJcIixcImZyb21IaXN0b3J5XCI6XCIxXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIkhpc3RvcnlPTUEtNTk5OTgyNDc2MjJcIixcInRpdGxlXCI6XCJNb3ZhdmkgQnVuZGxlIC0gVmlkZW8gU3VpdGUgKyBQaG90byBFZGl0b3IgLSBNb3ZhdmkgT2ZmaWNpYWwgU2l0ZVwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwibW92YXZpLmNvbVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiTW92YXZpIEJ1bmRsZSAtIFZpZGVvIFN1aXRlICsgUGhvdG8gRWRpdG9yIC0gTW92YXZpIE9mZmljaWFsIFNpdGVcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy5RZmtOalIxYklaeTdkdzQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCJcIixcInByaWNlXCI6XCLigrkzNzk5LjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOkhpc3RvcnlPTUEsUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9VkFTVFJBTUFZK0JveXMrTWFyb29uK1JlZCtQcmludGVkK1NsaW0tRml0K1NpbmdsZS1CcmVhc3RlZCtCbGF6ZXJzJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxMjI3MDQ2MTM5NjIlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTIyNzA0NjEzOTYyJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiXCIsXCJmcm9tSGlzdG9yeVwiOlwiMVwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJIaXN0b3J5T01BLTEyMjcwNDYxMzk2MlwiLFwidGl0bGVcIjpcIlZBU1RSQU1BWSBCb3lzIE1hcm9vbiBSZWQgUHJpbnRlZCBTbGltLUZpdCBTaW5nbGUtQnJlYXN0ZWQgQmxhemVyc1wiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwiTXludHJhXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJWQVNUUkFNQVkgQm95cyBNYXJvb24gUmVkIFByaW50ZWQgU2xpbS1GaXQgU2luZ2xlLUJyZWFzdGVkIEJsYXplcnNcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy41TUF5eVBSc3RWeEZyUTQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrk1OTk5LjAwXCIsXCJwcmljZVwiOlwi4oK5MjE1OS4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpIaXN0b3J5T01BLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPVNhbXN1bmcrR2FsYXh5LUExNCsoNCtHQiUyQysxMjgrR0IpJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxODI3MzIxNDkxMzMlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTgyNzMyMTQ5MTMzJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiXCIsXCJmcm9tSGlzdG9yeVwiOlwiMVwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJIaXN0b3J5T01BLTE4MjczMjE0OTEzM1wiLFwidGl0bGVcIjpcIlNhbXN1bmcgR2FsYXh5LUExNCAoNCBHQiwgMTI4IEdCKVwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwiU2Ftc3VuZyBJbmRpYVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiU2Ftc3VuZyBHYWxheHktQTE0ICg0IEdCLCAxMjggR0IpXCIsXCJjbGlja1VybFwiOlwiXCIsXCJvdmVybGF5VGV4dHNcIjp7fSxcIm92ZXJsYXlJbWFnZXNcIjp7fSxcInNvdXJjZUltYWdlVXJsXCI6XCJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9QQUMud01MWmY1eGNRRUQlMmZuQTQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrkxODQ5OS4wMFwiLFwicHJpY2VcIjpcIuKCuTEzOTk5LjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOkhpc3RvcnlPTUEsUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9TmV3K0dhbGF4eStTMjQrVWx0cmErKFNwZWNpYWwrRWRpdGlvbikrNTEyR0IrT3JhbmdlKygyMDI0KSslN0MrU2Ftc3VuZytTK1NlcmllcytTbWFydHBob25lKyU3QytEdWFsK1NJTSttb2JpbGUrJTdDK0dhbGF4eStBSStpcytoZXJlJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxODI3MzIxNDkxNjIlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTgyNzMyMTQ5MTYyJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xODI3MzIxNDkxNjJcIixcInRpdGxlXCI6XCJOZXcgR2FsYXh5IFMyNCBVbHRyYSAoU3BlY2lhbCBFZGl0aW9uKSA1MTJHQiBPcmFuZ2UgKDIwMjQpIHwgU2Ftc3VuZyBTIFNlcmllcyBTbWFydHBob25lIHwgRHVhbCBTSU0gbW9iaWxlIHwgR2FsYXh5IEFJIGlzIGhlcmVcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCIzJVwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCIzJVwiLFwic2VsbGVyXCI6XCJTYW1zdW5nIEluZGlhXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJOZXcgR2FsYXh5IFMyNCBVbHRyYSAoU3BlY2lhbCBFZGl0aW9uKSA1MTJHQiBPcmFuZ2UgKDIwMjQpIHwgU2Ftc3VuZyBTIFNlcmllcyBTbWFydHBob25lIHwgRHVhbCBTSU0gbW9iaWxlIHwgR2FsYXh5IEFJIGlzIGhlcmVcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy5sdHkxc21nczJKZGVDQTQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrkxNDQ5OTkuMDBcIixcInByaWNlXCI6XCLigrkxMzk5OTkuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1Gb3JldmVya2lkeitTcGFya2xpbmcrU3ltcGhvbnkrRHJlc3MrRm9yK0dpcmxzKy1EdXN0eStQaW5rJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxNDcyODE5NjY1MTMlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTQ3MjgxOTY2NTEzJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xNDcyODE5NjY1MTNcIixcInRpdGxlXCI6XCJGb3JldmVya2lkeiBTcGFya2xpbmcgU3ltcGhvbnkgRHJlc3MgRm9yIEdpcmxzIC1EdXN0eSBQaW5rXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJkZWFsUGVyY2VudGFnZVwiOlwiXCIsXCJwcmljZURyb3BQZXJjZW50YWdlXCI6XCJcIixcImFubm90YXRpb25cIjpcIlwiLFwic2VsbGVyXCI6XCJGaXJzdENyeSBJbmRpYVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiRm9yZXZlcmtpZHogU3BhcmtsaW5nIFN5bXBob255IERyZXNzIEZvciBHaXJscyAtRHVzdHkgUGlua1wiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLk93WHkzZm5SbGVNYUFRNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTM5OTkuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1UaGUrVGllK0h1YitNZW4rQnJvd24rU29saWQrQ2xpcC1PbitTdXNwZW5kZXJzJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxODIxMDEzMDA3ODElMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTgyMTAxMzAwNzgxJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xODIxMDEzMDA3ODFcIixcInRpdGxlXCI6XCJUaGUgVGllIEh1YiBNZW4gQnJvd24gU29saWQgQ2xpcC1PbiBTdXNwZW5kZXJzXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJkZWFsUGVyY2VudGFnZVwiOlwiNzAlXCIsXCJwcmljZURyb3BQZXJjZW50YWdlXCI6XCJcIixcImFubm90YXRpb25cIjpcIjcwJVwiLFwic2VsbGVyXCI6XCJNeW50cmFcIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIlRoZSBUaWUgSHViIE1lbiBCcm93biBTb2xpZCBDbGlwLU9uIFN1c3BlbmRlcnNcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy5IOGduUHlkM1BBZ3ZUZzQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrk1MDAwLjAwXCIsXCJwcmljZVwiOlwi4oK5MTUwMC4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPVNvbGlkcyUzQStCbGFjaytNZW4rQ2FyZ28rUGFudHMrQnkrVGhlK1NvdWxlZCtTdG9yZSZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyMTc4Mzg2OTgzMDEzJTIyJTIwZ0dsb2JhbE9mZmVySWRzOiUyMjE3ODM4Njk4MzAxMyUyMiUyMGdJZEhhc2g6JTIyMCUyMiZwcm9kdWN0cGFnZT10cnVlJnZhcmlhbnRzPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwJnNyY3RtdGlkPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwXCIsXCJ0cmVuZFJhbmtcIjpcIjEwMDAwXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIlJlY28tMTc4Mzg2OTgzMDEzXCIsXCJ0aXRsZVwiOlwiU29saWRzOiBCbGFjayBNZW4gQ2FyZ28gUGFudHMgQnkgVGhlIFNvdWxlZCBTdG9yZVwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIjEwJVwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCIxMCVcIixcInNlbGxlclwiOlwiVGhlIFNvdWxlZCBTdG9yZVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiU29saWRzOiBCbGFjayBNZW4gQ2FyZ28gUGFudHMgQnkgVGhlIFNvdWxlZCBTdG9yZVwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLk1LcTFkbzJWTWh3dE5RNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIuKCuTE5OTkuMDBcIixcInByaWNlXCI6XCLigrkxNzk5LjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOlJlY28sUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9V29yZCtQb3dlcitNYWRlK0Vhc3kmZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjEwMjU3NTA5MjAyNiUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxMDI1NzUwOTIwMjYlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTEwMjU3NTA5MjAyNlwiLFwidGl0bGVcIjpcIldvcmQgUG93ZXIgTWFkZSBFYXN5XCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJkZWFsUGVyY2VudGFnZVwiOlwiXCIsXCJwcmljZURyb3BQZXJjZW50YWdlXCI6XCJcIixcImFubm90YXRpb25cIjpcIlwiLFwic2VsbGVyXCI6XCJNZXJpcHVzdGFrXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJXb3JkIFBvd2VyIE1hZGUgRWFzeVwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLkNUUHRxUW9MMVZFRHpRNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTI1Ny4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPVRpdGFuK05SMjY3NFNNMDErUHJlbWl1bStXb3Jrd2VhcitBbmFsb2crV2F0Y2grZm9yK1dvbWVuJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxNzE2NDUxODA5NDUlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTcxNjQ1MTgwOTQ1JTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xNzE2NDUxODA5NDVcIixcInRpdGxlXCI6XCJUaXRhbiBOUjI2NzRTTTAxIFByZW1pdW0gV29ya3dlYXIgQW5hbG9nIFdhdGNoIGZvciBXb21lblwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwiVGF0YSBDTGlRXCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJUaXRhbiBOUjI2NzRTTTAxIFByZW1pdW0gV29ya3dlYXIgQW5hbG9nIFdhdGNoIGZvciBXb21lblwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLm56Ym52NzhzOHFOdzl3NDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTg4NDUuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1GYXN0cmFjaytOcDM4MDU1cHAwMStNZWFuK01hY2hpbmVzK0FuYWxvZy1kaWdpdGFsK1dhdGNoKy0rRm9yK01lbiZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyODA2NzM5NTk4OTMlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyODA2NzM5NTk4OTMlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTgwNjczOTU5ODkzXCIsXCJ0aXRsZVwiOlwiRmFzdHJhY2sgTnAzODA1NXBwMDEgTWVhbiBNYWNoaW5lcyBBbmFsb2ctZGlnaXRhbCBXYXRjaCAtIEZvciBNZW5cIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIkZsaXBrYXJ0XCIsXCJyYXRpbmdJbmZvXCI6e1wicmF0aW5nXCI6MC4wLFwibWF4UmF0aW5nXCI6XCJcIixcInJhdGluZ0xpbmtcIjpcIlwiLFwibnVtYmVyT2ZSZXZpZXdzXCI6MH0sXCJpbWFnZUluZm9cIjp7XCJhbHRUZXh0XCI6XCJGYXN0cmFjayBOcDM4MDU1cHAwMSBNZWFuIE1hY2hpbmVzIEFuYWxvZy1kaWdpdGFsIFdhdGNoIC0gRm9yIE1lblwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLnA1R2oyUnNYMGJZQjlBNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTM2OTUuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1XYXZlc2hhcmUrU1QtTElOSyUyRlYyKyhtaW5pKSUyQytTVE0rUHJvZ3JhbW1lcnMrJTI2K0RlYnVnZ2VycyZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyMTY4NDk3ODI5Njc5JTIyJTIwZ0dsb2JhbE9mZmVySWRzOiUyMjE2ODQ5NzgyOTY3OSUyMiUyMGdJZEhhc2g6JTIyMCUyMiZwcm9kdWN0cGFnZT10cnVlJnZhcmlhbnRzPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwJnNyY3RtdGlkPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwXCIsXCJ0cmVuZFJhbmtcIjpcIjEwMDAwXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIlJlY28tMTY4NDk3ODI5Njc5XCIsXCJ0aXRsZVwiOlwiV2F2ZXNoYXJlIFNULUxJTksvVjIgKG1pbmkpLCBTVE0gUHJvZ3JhbW1lcnMgJiBEZWJ1Z2dlcnNcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIlJvYnUuaW5cIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIldhdmVzaGFyZSBTVC1MSU5LL1YyIChtaW5pKSwgU1RNIFByb2dyYW1tZXJzICYgRGVidWdnZXJzXCIsXCJjbGlja1VybFwiOlwiXCIsXCJvdmVybGF5VGV4dHNcIjp7fSxcIm92ZXJsYXlJbWFnZXNcIjp7fSxcInNvdXJjZUltYWdlVXJsXCI6XCJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9QQUMuYURUQjUzRld2emI1WEE0NzRDNDc0Jm89NSZwaWQ9MjEuMVwiLFwiaW1hZ2VUaW50XCI6MCxcImJhY2tncm91bmRDb2xvclwiOlwiXCIsXCJmb250U3R5bGVcIjp7fSxcImNzc1N0eWxlXCI6e30sXCJzb3VyY2VJbWFnZXNVcmxzXCI6W119LFwicHJpY2VJbmZvXCI6e1wib3JpZ2luYWxQcmljZVwiOlwiXCIsXCJwcmljZVwiOlwi4oK5MTA0OS4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPVJlZCtUYXBlK01lbitNZXNoK1dhbGtpbmcrU2hvZXMmZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjE4NTgxNDA5Njg2MCUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxODU4MTQwOTY4NjAlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTE4NTgxNDA5Njg2MFwiLFwidGl0bGVcIjpcIlJlZCBUYXBlIE1lbiBNZXNoIFdhbGtpbmcgU2hvZXNcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCI3MCVcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiNzAlXCIsXCJzZWxsZXJcIjpcIk15bnRyYVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiUmVkIFRhcGUgTWVuIE1lc2ggV2Fsa2luZyBTaG9lc1wiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLjVvV1ZpSXgzQUNOa3R3NDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIuKCuTc2OTkuMDBcIixcInByaWNlXCI6XCLigrkyMzA5LjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOlJlY28sUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9T25lUGx1cytOb3JkK0J1ZHMrMnIrVFdTK0VhcmJ1ZHMrd2l0aCtBSStOb2lzZStDYW5jZWxsYXRpb24rKElQNTUrV2F0ZXIrUmVzaXN0YW50JTJDKzM4K0hvdXJzK1BsYXliYWNrJTJDK0RlZXArR3JleSkmZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjE2NzU5NjA1MjExNiUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxNjc1OTYwNTIxMTYlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTE2NzU5NjA1MjExNlwiLFwidGl0bGVcIjpcIk9uZVBsdXMgTm9yZCBCdWRzIDJyIFRXUyBFYXJidWRzIHdpdGggQUkgTm9pc2UgQ2FuY2VsbGF0aW9uIChJUDU1IFdhdGVyIFJlc2lzdGFudCwgMzggSG91cnMgUGxheWJhY2ssIERlZXAgR3JleSlcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCI0JVwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCI0JVwiLFwic2VsbGVyXCI6XCJDcm9tYVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiT25lUGx1cyBOb3JkIEJ1ZHMgMnIgVFdTIEVhcmJ1ZHMgd2l0aCBBSSBOb2lzZSBDYW5jZWxsYXRpb24gKElQNTUgV2F0ZXIgUmVzaXN0YW50LCAzOCBIb3VycyBQbGF5YmFjaywgRGVlcCBHcmV5KVwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLnNrQjRheSUyYmdWenNsTGc0NzRDNDc0Jm89NSZwaWQ9MjEuMVwiLFwiaW1hZ2VUaW50XCI6MCxcImJhY2tncm91bmRDb2xvclwiOlwiXCIsXCJmb250U3R5bGVcIjp7fSxcImNzc1N0eWxlXCI6e30sXCJzb3VyY2VJbWFnZXNVcmxzXCI6W119LFwicHJpY2VJbmZvXCI6e1wib3JpZ2luYWxQcmljZVwiOlwi4oK5MjI5OS4wMFwiLFwicHJpY2VcIjpcIuKCuTIxOTkuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1TQU1TVU5HK0dhbGF4eStBNTQrNUcrKEF3ZXNvbWUrVmlvbGV0JTJDKzI1NitHQikmZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjE2NTA0NTM2ODY2NSUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxNjUwNDUzNjg2NjUlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTE2NTA0NTM2ODY2NVwiLFwidGl0bGVcIjpcIlNBTVNVTkcgR2FsYXh5IEE1NCA1RyAoQXdlc29tZSBWaW9sZXQsIDI1NiBHQilcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIkZsaXBrYXJ0LkNvbVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiU0FNU1VORyBHYWxheHkgQTU0IDVHIChBd2Vzb21lIFZpb2xldCwgMjU2IEdCKVwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLk9HYUJyJTJiVmwlMmJPOHBKUTQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCJcIixcInByaWNlXCI6XCLigrkzNzQ5OS4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPUNyb2NzK0Nyb2NiYW5kJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxNzkzNDYzMzI2ODQlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTc5MzQ2MzMyNjg0JTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xNzkzNDYzMzI2ODRcIixcInRpdGxlXCI6XCJDcm9jcyBDcm9jYmFuZFwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwiQ3JvY3MuaW5cIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIkNyb2NzIENyb2NiYW5kXCIsXCJjbGlja1VybFwiOlwiXCIsXCJvdmVybGF5VGV4dHNcIjp7fSxcIm92ZXJsYXlJbWFnZXNcIjp7fSxcInNvdXJjZUltYWdlVXJsXCI6XCJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9QQUMubWVvQUFib2hnTTlwN1E0NzRDNDc0Jm89NSZwaWQ9MjEuMVwiLFwiaW1hZ2VUaW50XCI6MCxcImJhY2tncm91bmRDb2xvclwiOlwiXCIsXCJmb250U3R5bGVcIjp7fSxcImNzc1N0eWxlXCI6e30sXCJzb3VyY2VJbWFnZXNVcmxzXCI6W119LFwicHJpY2VJbmZvXCI6e1wib3JpZ2luYWxQcmljZVwiOlwiXCIsXCJwcmljZVwiOlwi4oK5Mzg0Ny4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPUJ1eStNYWlzb24rRGUrRm91emRhcitPdWQrSW1wZXJpYWwrNTArbWwrT25saW5lKyU0MCtUYXRhK0NMaVErTHV4dXJ5JmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxODIwMDgxMzcyNTUlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTgyMDA4MTM3MjU1JTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xODIwMDgxMzcyNTVcIixcInRpdGxlXCI6XCJCdXkgTWFpc29uIERlIEZvdXpkYXIgT3VkIEltcGVyaWFsIDUwIG1sIE9ubGluZSBAIFRhdGEgQ0xpUSBMdXh1cnlcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIkx1eHVyeS5UYXRhY2xpcS5Db21cIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIkJ1eSBNYWlzb24gRGUgRm91emRhciBPdWQgSW1wZXJpYWwgNTAgbWwgT25saW5lIEAgVGF0YSBDTGlRIEx1eHVyeVwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLkFNVGh1UkRETUF4amtRNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTY0OTkuMDBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1PbmxpbmUrU2hvcHBpbmcrZm9yK0JhZ3MlMkMrQ2xvdGhlcyUyQytTaG9lcyUyQytXYXRjaGVzKyUyNitNb3JlK2ZvcitNZW4rJTI2K1dvbWVuK2F0K1RhdGErQ0xpUStMdXh1cnkuJmZpbHRlcnM9c2NlbmFyaW86JTIyMTclMjIlMjBnVHlwZTolMjIxMiUyMiUyMGdJZDolMjIxODIwMDgyMDE4ODIlMjIlMjBnR2xvYmFsT2ZmZXJJZHM6JTIyMTgyMDA4MjAxODgyJTIyJTIwZ0lkSGFzaDolMjIwJTIyJnByb2R1Y3RwYWdlPXRydWUmdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRyZW5kUmFua1wiOlwiMTAwMDBcIixcImhhc1ZpZGVvXCI6ZmFsc2UsXCJwcm9kdWN0SW5zaWdodHNEYXRhXCI6e30sXCJpZFwiOlwiUmVjby0xODIwMDgyMDE4ODJcIixcInRpdGxlXCI6XCJPbmxpbmUgU2hvcHBpbmcgZm9yIEJhZ3MsIENsb3RoZXMsIFNob2VzLCBXYXRjaGVzICYgTW9yZSBmb3IgTWVuICYgV29tZW4gYXQgVGF0YSBDTGlRIEx1eHVyeS5cIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIkx1eHVyeS5UYXRhY2xpcS5Db21cIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIk9ubGluZSBTaG9wcGluZyBmb3IgQmFncywgQ2xvdGhlcywgU2hvZXMsIFdhdGNoZXMgJiBNb3JlIGZvciBNZW4gJiBXb21lbiBhdCBUYXRhIENMaVEgTHV4dXJ5LlwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLmFMOENHSVozbHBGT2dnNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTQ0NTAwLjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOlJlY28sUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9U3lzdHdlYWsrUERGK0VkaXRvciZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyMTcxODcwMDQyODY4JTIyJTIwZ0dsb2JhbE9mZmVySWRzOiUyMjE3MTg3MDA0Mjg2OCUyMiUyMGdJZEhhc2g6JTIyMCUyMiZwcm9kdWN0cGFnZT10cnVlJnZhcmlhbnRzPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwJnNyY3RtdGlkPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwXCIsXCJ0cmVuZFJhbmtcIjpcIjEwMDAwXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIlJlY28tMTcxODcwMDQyODY4XCIsXCJ0aXRsZVwiOlwiU3lzdHdlYWsgUERGIEVkaXRvclwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIlwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCJcIixcInNlbGxlclwiOlwiU3lzdHdlYWsgUERGIEVkaXRvclwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiU3lzdHdlYWsgUERGIEVkaXRvclwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLkJBUUpRMk9iR2hUU09nNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTQ5OS4wMFwiLFwicHJpY2VDdXJyZW5jeVN5bWJvbFwiOlwi4oK5XCIsXCJkZWFsU3RhcnRUaW1lXCI6XCJcIixcImRlYWxFeHBpcnlUaW1lXCI6XCJcIn0sXCJwcm9kdWN0QWRzU2NlbmFyaW9UeXBlXCI6MCxcImdyb3VwaW5nSWRcIjpcIlwiLFwiZ2xvYmFsT2ZmZXJJZFwiOlwiXCIsXCJpbnN0YWxsbWVudEluZm9cIjp7XCJhbW91bnRcIjpcIlwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiYW1vdW50VmFsdWVcIjowLjAsXCJkb3duUGF5bWVudFwiOlwiXCIsXCJkb3duUGF5bWVudFZhbHVlXCI6MC4wLFwicGF5bWVudFR5cGVcIjpcIlwiLFwibW9udGhzXCI6MCxcInNjaGVtYU5hbWVcIjpcIkFkcy5JbnN0YWxsbWVudEluZm9cIixcImtpZk1ham9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uMlwiOjB9LFwiaW1hZ2VzXCI6W10sXCJjbGlja1BpbmdVcmxcIjpcIlwiLFwiaW1wcmVzc2lvblRva2VuXCI6XCJcIixcInNvdXJjZVR5cGVcIjpcInhwXCIsXCJ2aWRlb3NcIjpbXSxcImZvcnVtQ291cG9uc0RhdGFcIjpbXSxcImJycVwiOlwiXCIsXCJwcm9kdWN0TWV0YURhdGFDb2x1bW5cIjp7XCJidWxsZXRQb2ludHNcIjpbXSxcInNwZWNpZmljYXRpb25zXCI6e30sXCJjb21wbGlhbmNlXCI6e30sXCJzYWxlSW5mb3JtYXRpb25cIjp7fX0sXCJpc0JkT2ZmZXJcIjpmYWxzZSxcImNhc2hiYWNrSW5mb1wiOntcImNhc2hiYWNrUGVyY2VudGFnZVwiOjAuMCxcImNhc2hiYWNrQW1vdW50XCI6MC4wfSxcInJlY2FsbEZlYXR1cmVzXCI6XCJSZWNhbGxGZWF0dXJlX0luZGV4Oi0xLFJlY2FsbEZlYXR1cmVfUGF0aDpSZWNvLFJlY2FsbEZlYXR1cmVfTDJTY29yZTowXCIsXCJtZXRhRGF0YVwiOnt9fSx7XCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC9wcm9kdWN0cGFnZT9xPVRJU1NPVCtUMTI5NDEwMTYwMTMwMCtDTEFTU0lDK0RSRUFNK1dhdGNoK2ZvcitNZW4mZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjE0ODY4NjIwODA1MCUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxNDg2ODYyMDgwNTAlMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTE0ODY4NjIwODA1MFwiLFwidGl0bGVcIjpcIlRJU1NPVCBUMTI5NDEwMTYwMTMwMCBDTEFTU0lDIERSRUFNIFdhdGNoIGZvciBNZW5cIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImRlYWxQZXJjZW50YWdlXCI6XCJcIixcInByaWNlRHJvcFBlcmNlbnRhZ2VcIjpcIlwiLFwiYW5ub3RhdGlvblwiOlwiXCIsXCJzZWxsZXJcIjpcIlRhdGEgQ0xpUVwiLFwicmF0aW5nSW5mb1wiOntcInJhdGluZ1wiOjAuMCxcIm1heFJhdGluZ1wiOlwiXCIsXCJyYXRpbmdMaW5rXCI6XCJcIixcIm51bWJlck9mUmV2aWV3c1wiOjB9LFwiaW1hZ2VJbmZvXCI6e1wiYWx0VGV4dFwiOlwiVElTU09UIFQxMjk0MTAxNjAxMzAwIENMQVNTSUMgRFJFQU0gV2F0Y2ggZm9yIE1lblwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLmJLTlNYbVN4ek1JOWtRNDc0QzQ3NCZvPTUmcGlkPTIxLjFcIixcImltYWdlVGludFwiOjAsXCJiYWNrZ3JvdW5kQ29sb3JcIjpcIlwiLFwiZm9udFN0eWxlXCI6e30sXCJjc3NTdHlsZVwiOnt9LFwic291cmNlSW1hZ2VzVXJsc1wiOltdfSxcInByaWNlSW5mb1wiOntcIm9yaWdpbmFsUHJpY2VcIjpcIlwiLFwicHJpY2VcIjpcIuKCuTI0NTAwLjAwXCIsXCJwcmljZUN1cnJlbmN5U3ltYm9sXCI6XCLigrlcIixcImRlYWxTdGFydFRpbWVcIjpcIlwiLFwiZGVhbEV4cGlyeVRpbWVcIjpcIlwifSxcInByb2R1Y3RBZHNTY2VuYXJpb1R5cGVcIjowLFwiZ3JvdXBpbmdJZFwiOlwiXCIsXCJnbG9iYWxPZmZlcklkXCI6XCJcIixcImluc3RhbGxtZW50SW5mb1wiOntcImFtb3VudFwiOlwiXCIsXCJkZXNjcmlwdGlvblwiOlwiXCIsXCJhbW91bnRWYWx1ZVwiOjAuMCxcImRvd25QYXltZW50XCI6XCJcIixcImRvd25QYXltZW50VmFsdWVcIjowLjAsXCJwYXltZW50VHlwZVwiOlwiXCIsXCJtb250aHNcIjowLFwic2NoZW1hTmFtZVwiOlwiQWRzLkluc3RhbGxtZW50SW5mb1wiLFwia2lmTWFqb3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvblwiOjAsXCJraWZNaW5vclZlcnNpb24yXCI6MH0sXCJpbWFnZXNcIjpbXSxcImNsaWNrUGluZ1VybFwiOlwiXCIsXCJpbXByZXNzaW9uVG9rZW5cIjpcIlwiLFwic291cmNlVHlwZVwiOlwieHBcIixcInZpZGVvc1wiOltdLFwiZm9ydW1Db3Vwb25zRGF0YVwiOltdLFwiYnJxXCI6XCJcIixcInByb2R1Y3RNZXRhRGF0YUNvbHVtblwiOntcImJ1bGxldFBvaW50c1wiOltdLFwic3BlY2lmaWNhdGlvbnNcIjp7fSxcImNvbXBsaWFuY2VcIjp7fSxcInNhbGVJbmZvcm1hdGlvblwiOnt9fSxcImlzQmRPZmZlclwiOmZhbHNlLFwiY2FzaGJhY2tJbmZvXCI6e1wiY2FzaGJhY2tQZXJjZW50YWdlXCI6MC4wLFwiY2FzaGJhY2tBbW91bnRcIjowLjB9LFwicmVjYWxsRmVhdHVyZXNcIjpcIlJlY2FsbEZlYXR1cmVfSW5kZXg6LTEsUmVjYWxsRmVhdHVyZV9QYXRoOlJlY28sUmVjYWxsRmVhdHVyZV9MMlNjb3JlOjBcIixcIm1ldGFEYXRhXCI6e319LHtcImNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS9zaG9wL3Byb2R1Y3RwYWdlP3E9UGluZStLaWRzK0JvdythbmQrU3VzcGVuZGVyK1NldCstK1JlZCZmaWx0ZXJzPXNjZW5hcmlvOiUyMjE3JTIyJTIwZ1R5cGU6JTIyMTIlMjIlMjBnSWQ6JTIyMTQ4NjA0ODI2NzIyJTIyJTIwZ0dsb2JhbE9mZmVySWRzOiUyMjE0ODYwNDgyNjcyMiUyMiUyMGdJZEhhc2g6JTIyMCUyMiZwcm9kdWN0cGFnZT10cnVlJnZhcmlhbnRzPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwJnNyY3RtdGlkPXByZy1zaC1iZC1kaXNnYixwcmctc2gtYmQtbmV3YmFubmVyLHByZy1zaC1iZC1uZXdjaGNrb3QscHJnLXNoLWJkLW53Y2hrLHByZy1zaC1iZC14dHJhY2FzaCxwcmctc2gtcmVjb3BkcCxwcmctc2gtcm1pdG1sbmsscHJnLXNoLXVzZWNzaGsscHJnLXNoLXVzZWNzaGtwZHAscHJnLXNoLW50cGNhcmRkZHVwXCIsXCJ0cmVuZFJhbmtcIjpcIjEwMDAwXCIsXCJoYXNWaWRlb1wiOmZhbHNlLFwicHJvZHVjdEluc2lnaHRzRGF0YVwiOnt9LFwiaWRcIjpcIlJlY28tMTQ4NjA0ODI2NzIyXCIsXCJ0aXRsZVwiOlwiUGluZSBLaWRzIEJvdyBhbmQgU3VzcGVuZGVyIFNldCAtIFJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIjEzJVwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCIxMyVcIixcInNlbGxlclwiOlwiRmlyc3RDcnkgSW5kaWFcIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIlBpbmUgS2lkcyBCb3cgYW5kIFN1c3BlbmRlciBTZXQgLSBSZWRcIixcImNsaWNrVXJsXCI6XCJcIixcIm92ZXJsYXlUZXh0c1wiOnt9LFwib3ZlcmxheUltYWdlc1wiOnt9LFwic291cmNlSW1hZ2VVcmxcIjpcImh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1BBQy5lUXdtWVVLYUpEa1V5dzQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrkyMjkuMDBcIixcInByaWNlXCI6XCLigrkxOTkuMjNcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX0se1wiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvcHJvZHVjdHBhZ2U/cT1aZXJvK0NvdHRvbitJbnRlcmxvY2srRnVsbCtTbGVldmVzK0JlYXIrUHJpbnRlZCtWZXN0cytQYWNrK29mKzMrLStQaW4mZmlsdGVycz1zY2VuYXJpbzolMjIxNyUyMiUyMGdUeXBlOiUyMjEyJTIyJTIwZ0lkOiUyMjE2MDMzOTQ5NzY0MSUyMiUyMGdHbG9iYWxPZmZlcklkczolMjIxNjAzMzk0OTc2NDElMjIlMjBnSWRIYXNoOiUyMjAlMjImcHJvZHVjdHBhZ2U9dHJ1ZSZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidHJlbmRSYW5rXCI6XCIxMDAwMFwiLFwiaGFzVmlkZW9cIjpmYWxzZSxcInByb2R1Y3RJbnNpZ2h0c0RhdGFcIjp7fSxcImlkXCI6XCJSZWNvLTE2MDMzOTQ5NzY0MVwiLFwidGl0bGVcIjpcIlplcm8gQ290dG9uIEludGVybG9jayBGdWxsIFNsZWV2ZXMgQmVhciBQcmludGVkIFZlc3RzIFBhY2sgb2YgMyAtIFBpblwiLFwiZGVzY3JpcHRpb25cIjpcIlwiLFwiZGVhbFBlcmNlbnRhZ2VcIjpcIjE1JVwiLFwicHJpY2VEcm9wUGVyY2VudGFnZVwiOlwiXCIsXCJhbm5vdGF0aW9uXCI6XCIxNSVcIixcInNlbGxlclwiOlwiRmlyc3RDcnkgSW5kaWFcIixcInJhdGluZ0luZm9cIjp7XCJyYXRpbmdcIjowLjAsXCJtYXhSYXRpbmdcIjpcIlwiLFwicmF0aW5nTGlua1wiOlwiXCIsXCJudW1iZXJPZlJldmlld3NcIjowfSxcImltYWdlSW5mb1wiOntcImFsdFRleHRcIjpcIlplcm8gQ290dG9uIEludGVybG9jayBGdWxsIFNsZWV2ZXMgQmVhciBQcmludGVkIFZlc3RzIFBhY2sgb2YgMyAtIFBpblwiLFwiY2xpY2tVcmxcIjpcIlwiLFwib3ZlcmxheVRleHRzXCI6e30sXCJvdmVybGF5SW1hZ2VzXCI6e30sXCJzb3VyY2VJbWFnZVVybFwiOlwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUEFDLiUyZjBsc29oRXpuWGIlMmJVdzQ3NEM0NzQmbz01JnBpZD0yMS4xXCIsXCJpbWFnZVRpbnRcIjowLFwiYmFja2dyb3VuZENvbG9yXCI6XCJcIixcImZvbnRTdHlsZVwiOnt9LFwiY3NzU3R5bGVcIjp7fSxcInNvdXJjZUltYWdlc1VybHNcIjpbXX0sXCJwcmljZUluZm9cIjp7XCJvcmlnaW5hbFByaWNlXCI6XCLigrk1NzAuMDBcIixcInByaWNlXCI6XCLigrk0ODQuNTBcIixcInByaWNlQ3VycmVuY3lTeW1ib2xcIjpcIuKCuVwiLFwiZGVhbFN0YXJ0VGltZVwiOlwiXCIsXCJkZWFsRXhwaXJ5VGltZVwiOlwiXCJ9LFwicHJvZHVjdEFkc1NjZW5hcmlvVHlwZVwiOjAsXCJncm91cGluZ0lkXCI6XCJcIixcImdsb2JhbE9mZmVySWRcIjpcIlwiLFwiaW5zdGFsbG1lbnRJbmZvXCI6e1wiYW1vdW50XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJcIixcImFtb3VudFZhbHVlXCI6MC4wLFwiZG93blBheW1lbnRcIjpcIlwiLFwiZG93blBheW1lbnRWYWx1ZVwiOjAuMCxcInBheW1lbnRUeXBlXCI6XCJcIixcIm1vbnRoc1wiOjAsXCJzY2hlbWFOYW1lXCI6XCJBZHMuSW5zdGFsbG1lbnRJbmZvXCIsXCJraWZNYWpvclZlcnNpb25cIjowLFwia2lmTWlub3JWZXJzaW9uXCI6MCxcImtpZk1pbm9yVmVyc2lvbjJcIjowfSxcImltYWdlc1wiOltdLFwiY2xpY2tQaW5nVXJsXCI6XCJcIixcImltcHJlc3Npb25Ub2tlblwiOlwiXCIsXCJzb3VyY2VUeXBlXCI6XCJ4cFwiLFwidmlkZW9zXCI6W10sXCJmb3J1bUNvdXBvbnNEYXRhXCI6W10sXCJicnFcIjpcIlwiLFwicHJvZHVjdE1ldGFEYXRhQ29sdW1uXCI6e1wiYnVsbGV0UG9pbnRzXCI6W10sXCJzcGVjaWZpY2F0aW9uc1wiOnt9LFwiY29tcGxpYW5jZVwiOnt9LFwic2FsZUluZm9ybWF0aW9uXCI6e319LFwiaXNCZE9mZmVyXCI6ZmFsc2UsXCJjYXNoYmFja0luZm9cIjp7XCJjYXNoYmFja1BlcmNlbnRhZ2VcIjowLjAsXCJjYXNoYmFja0Ftb3VudFwiOjAuMH0sXCJyZWNhbGxGZWF0dXJlc1wiOlwiUmVjYWxsRmVhdHVyZV9JbmRleDotMSxSZWNhbGxGZWF0dXJlX1BhdGg6UmVjbyxSZWNhbGxGZWF0dXJlX0wyU2NvcmU6MFwiLFwibWV0YURhdGFcIjp7fX1dLFwibWV0YWRhdGFcIjp7XCJmb3JZb3VcIjpcIjFcIixcInNjZW5hcmlvXCI6XCJUcmVuZGluZ09mZmVyc1wiLFwidHJhY2VJZFwiOlwiMTZkZjgzZGY5MTE1NGM1MTg4MWNkYzUzMTExZjVjNjNcIixcIm5leHRPZmZzZXRcIjpcIjI1XCIsXCJzcmN0bXRpZFwiOlwicHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInZhcmlhbnRzXCI6XCJwcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwiZ3BzXCI6XCJPc050cEZlZWRcIixcImhpc3RvcnlTdWdnZXN0aW9uc1wiOlwiNVwiLFwicmVzcG9uc2VQcm9tb3Rpb25cIjpcIjJcIixcIm1pc2NEYXRhXCI6XCIwMDAxUHBjUU1yMGFUeDFrajRHYWVmc2pLTDVjVzB3MVYwdmhzTzM1YjlCVG1qUGdyanlYRHNHNWZYWTMzRVFCRnVmcVlieHkxenpxNDBNTmdtVUhpb3BWZlF1R2J4endhZTBrUnR6eitUeU5lNnpBQ0FpWlNnNWJudVMvc1MyUk9zbHpvYnd6OWtIWHlqa3JlWlhmQldpZzBXdnRQSm9wK3RobU9jMTBXdExWRFNJWW1YOWxzek9vWVFydTdjb0xrbjJubG1aNVdmS1ZYWmZ2czdJdGt6WFhaY1hwSDh4eGM2TnNmemJ3VW0xTnFKRUlQem5NSnZiblp6dkROUlNSa0MwaFc5STRZcUFwcHlwZXJhN3VFY1IzcG9rVEMvb3pBZ2ZVbnNlbGVmTndqUXY1K2lQK0Y2TEVQaWNab1JjWENxcWZQZWwyMFNxdW5qOWlubllhbitZTk9GYm5YZFdDQ3JwNkRmdmc5RjZJUHBMR05UL2VVR01ieWJmbDlYNkRYNTQxNCsxcTdDYVBsV3hqZXRaUFRseXB4M0RqSm90K3MvaHZMc014UXM2UVNHNTgyVEpMdFJ5cWFSRDY4LzhLMlNUZzJpazMxMUpSUmVQWGp5c2xrQ0xLZHJTOU1QbEQydG9JSGhlVUh4VVc5KzhKeTFuWElmVEFhd3V1VjJtTGhsMTFBLzFjS01aQXp3RXRqaUhNRUpGL3U1UVBPdGNWNW1taG1vcVo0cUo3dkFISXgyKytINDJaTENFNC9uaHlZTVN1K001SjFpdkR3SHMvajJVRW5ZY2piSDdBSFNzd2E2WmxSTnpzK3d1UGJxcmJNajZiV0IxYjZaU3J6bHp1Tzl0MXRMcEJqbFd3aEdaaE8vSkZDZ3lXekdtL1lzb3Y5TU5nYkpkMGNkamNSSDhheVgwZXRUTERDSnVueWZzS2lIdXUxakE2MzFCdkNNT3orZjA5M3pmS2RiR3NUclpWczRKbVN4N0hBR2RGdHRKa3JuK1lac0RGWWlmV2RIVFIwd2NuRXhGY04zNXY5akZkdDdPdVRzMHM4QmRkVU94QUcxT2M0cWljSGxNVmhDVHA3WEtyQlpjQkN4cDFwaGVLTGNHa0VjOFBFRTg4d1dFNnppSmZrOUVMSWNtM1ZjV1FQS1JHRHQydytEQ2haL1hRSy82NmZEMGsvTlo0aEQzaFlwVWo3ZWttNFZXMW1XMTJOYlZ6VmtXeHh5amtKdWdtL05oaGJPb3dYOG5kRm13WGxYQXFvQldwYmczczZGVjQ2MnBCdGxPaHVXdURXNXpodTZncmtpVENjZGFORExKQTJjUXhLVzZqZHlLenA4NXB0V1BjSy83RDgwNnNWSUM4dlpoT09JWnZHL1JQekFFM2p0N1hBSlZxc1BaWVVtUkZZU2pYcjl2T2J0ZEJnd0h6ZUFUQmhlbW1TRUFPeDJGdWJaeUNTcUIveTI3ZXpYd2p3RG9XNzljQUhENUZWa1MxUDZzb04rUG85MVM5ZDdhVUR6TFZGMEFNZzVUNStYelFEdnRYdzFRRzNBZGo4d1pEVzQ2UEd4N3lrVHIrTW9GL29Ec0xSc0JrREkrQ1huNXF0RjExcGpldVlRakRnSmxHeWliMitWMWZua0VmQ3FyZnhaM1M4SGFXTlBUaVlldzhqWlJnUmx1YzN5TmJpTzVTcVRQQUxjTHBTbW1kTWxncXQybEliYldpSTRZN28ya2M5cXpiU004KzZvQjhIUGxjREZpYzdxdmJYMzhVNkFEVDZXV2pSZUx4aVJIYjFrRlhTYUxOZXJib3ZuNmxtVHd4cVZ1c3U3SkxmUTdoV0N6QVVjNEhQbzJBbnN6N0VjNjFVWVRYQkZWWTNidnM3eS9wYzU0RWk0MEwvenVHaHc4U3E1VUFjQjd4Z2wyamNzb3ZzNFJkUE1yRk5iMFlaeTFUMmpNRDRXK1ZEZVRBOC9zWG5IdmluTU5jLzFrTUZZNUVpeFJPZzBTZU5lanBkVUJ3OEl5ckZ0cmNiUU5CcXNCaG94UzRUZnFzbmczbWRGL09rZ3dwU0ZoZUtvUmJEMFJXM2VEMEVwNXNrZGN6S1kxM1hGbUE1YnFzSzVTWCtVZzlqZ25NTk9Nd0pDSnVvaEliSGZ5VVB2bzNqazZhS2c5OG0yQUJMclZyeWp1MVNCbW9XOFFvYkltWW1uQjFIRTN5TlNuSUJHOGIxMW1Ka3NMc1lLTStzdXBvbmhtR3ZXaFN2cFl0MHlhRHpYcXFjTjA4K01WcU5vOEhSdHpBRHlCVDJ6b0traU9pM1dKd2orTlp2MnlueHk5Ny9SOWVTZW0vK2ZCdWd6cS9Ndkw0Zit3bGlwNWlMRnVkRUJRYi9hc0p3RG01V3pPVVBIMmZaUVdOZ2xOMEViUldGY0JLK2U1bmdMNmJlYlFyOG9Sc1FMNXlDRmliejR1VklxSVk0RUtQWTA3MEVvMmdjSGRweFdGRVdwSEZZc2tLU2xMSHhHdHMrejFUbmZvUkxocjRPRVRoR0wxbkUrR2h5UmFYZDZhVUh6ZlNBQUVtd1BiWTZXN1RjcFVqaG9rRzVYZnRtZ3RTYUtNWkY5bkZyU1BPRXlkNXE1ODJlcFpzQlkzWVprMGxqSFlyeFVYK1ltYUtsS3ZML0JmcHRWeUd1ekIvQnR1NmFwa04xd0w0U01lRkFSTTRxSUU0ZHpXbmRtNUVzdFpHb3dTMVQ0eXRMRCtWbGo2OGhXV3pPdlk4V0tZMTcxZ0Y0ZlhwV2JsbjRzMWNXN1JJTFczeDc3dXRKWllUOGxXQnpRWjlXTkxBT3ladG9CQWFIdldYRHNWbHVtR21tQ1pKcTJzRWlJVUdUaml3UlNySWJNNllLZXJ6OHdtT2JiYlZSbGkwQmlac2NaWGZ6R25TUnBRTHNOcERpQS9UOFFUc1g4SlBVVWpsOG1lNFk4cHUzczFxS1k4UlY4N0xFazg5OVcwUzlHSktBR3ZFZzR6cHlpajJnVzFqaTBrWUlLL2ZtSjB0bGliUGg0S0RjTTkxck1neEoyK0JJU0VxM0tJQjJnY25HdkxZYjJ6c0dGL3NVVzFFNWRzblNLOHMrREFYdC9EVURzTDl5N2xNRDJsODNFcU9tTm11SzVRanFBcXh2U2FjQjRhZFlHWTN0WGRNWHE3VmJhNTBtQS85eldJanlIUmgzTVlISkJyVE1samhEYUJsQVN1TW1uUDVFVUczWEJ1TFJ4cGFYOXlFcEJ5M0I4TmJoOXcvK1V6YnlTb1NWYUloTnhQMmxESDRCN3RJaXF3SGU2N2JjTkhiRkNkYnh5a2N3RklRZUZISTY2Z3JpRWJ5MWdVWmdoa3JaRjNGemYxdTEyV2FKT3FzU0x4RzI4QThKaXJsRUJJTWlNZHBvU2IxTC9ERVp5TEtKd0c4TVVrb1U5STBYcUEyOEFsMW9ucWZacllodzd3emFJOUJHVjZXWElpRXZaVXZ6MzYydERUMVE5VGNCeG9hbEc4WEd2MlZmODBGaTMram1KdEVwSGd4dTZ0a1JYcTBESGl1T0xvbS9ZQ09FM3Ird2FQd0NCbU9RMm8rMkt6cHFVV2NGdmE0cDl0bnVoQ1FtR2hoUDdWemR3R0o2MGFFS2U1OHM0UmpKY0U5SDVHU054aDNsUTFZcmoyOWFRbmk1T2dLMnpqaThEazV6aGRMa2F2Y3hLa3NsaVhOUnBnc1B2bE4wc1E1S215dEZvOG96NVFKN3pLQkJKT2pvMCt2ZXdHTFEyNUlDWWR1R281YnhqNWxnS0tkZHlRcnJlTUtNdklJSHlqdG1PRG90NkFhKzIrTnpWS3RCWVlaRElJWDhGTkxESkxEWktSWXNHLzd3NVZEb01VMXZ1SlhmZytFYVBqQlZWNExjRCt3ckU3T0ovU0VhV21LUVN4dXBNcUt2Q3VRWGZ0SW5ZMEc0MGZSN0FnV1RxUTVJeVhabzBlTWROY2psNkFIczY4blhmK0dCVFVmaHo5Tmx5QzhaQ2pQaVpkOXRBN1MrcjllUzNGdUhNcWxxNjV2ZzBPc0ZLSEpaNzRYN1BENUFpMzhWRXNNaE9zb2dXblJQZmFNVFMzQk4xUFIzZ1U0VTlvekN1a1RuejFSTG9KcWFwNXM0dVk1S05JRFdBakFvcWU4THBzM3N5ajAvblhzSlkrUmNIRTc5a3NQRElGREdZOUJ5aXZxL3dKRHdWVTE0b0JSZFEyRG9pN0c2cElrUnM3MTdndVNmTGZBVkVuS0N3NDkzTGZvK1gydjUrdDJ0K2hnOUVhSGxqQWlhNkFVUUJuMG1qRCtaZHd0cHA4L2ZaNHlBOTZFZWtuSXNRNUpwRFN1ZWczZ282QmJyMnluMmpneTFSZXdlazcwcDc1STBIS0pCdWJwUUw0YWptb0pVM2l2QWc3U3pISkZwbWozQTlMOWV5bmRMWGZhUFc5ZEFpcGJpTEU1cVY0Qi9mTHpGcFcvMFVaY2FZdElIVi94aytYSlR2eEhpU2pscmdhc0o0YURmSDh1dENBaFBNV20yc1FHNEU2UnN3N3MzenRZenRjMFBsWFlNbURBR3B4OUZQOWhrUG12ZHJEUkx6UFVIQWg5N09hbHFTcWRGL1pvZ2JaS293TEo4SGdqYWFjU0VSdjJTUWpBWnJoUCtPRnJLTVloVzRteU5YUUNnRzhmazA3NWVBZnBFNDU3Rmg3eWhXdHBnM0c5R2MydzJPaDgxMktJQUlLY2RGTjU0eE1KRjhpVnNYZEZxTWQ3dTJmVlBxR3MvaytmYkFHSWhWRjdDSnR0RS9Gcyt6eFFyZnl3ZVFvYnM4RTVLTTg1U0JxTTdQQytYTUJqa2pIbytIOTdkQkxrUHlZK3JCa1JHUGFQUC9vM2dHT25tRzErZ20wQjNOTkpMVitIYUU3M2FmazdYTGNZbnlDWGQ2ZmFLR0c3Z0RSWm5lUzlwQzZXSU5ZRnVjcEM0VUhic1UwK0c2MFpaUUg4NWpyL01vQUtwZTQvRHUxMlM4QmFETTdWdFYwcXdmZG9WTlk9XCIsXCJ1c2VyQWdlRnJvbVJlY29cIjpcIi0xXCIsXCJzb3VyY2VPZlBlcnNvbmFsaXplZERhdGFcIjpcIlNob3BwaW5nSW50ZW50T1NSZXNwb25zZUhhbmRsZXJQbHVnaW5cIn0sXCJzZWVBbGxcIjp7XCJpZFwiOlwic2VlQWxsQnV0dG9uVGV4dFwiLFwiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvdHJlbmRpbmc/ZmlsdGVycz1QYWdlVHlwZTolMjIyMCUyMiUyMFBDb250ZXh0OiUyMlVHVnljMjl1WVd4cGVtVkRiMjUwWlhoMGRXRnMlMjImdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRleHRcIjpcIlwiLFwiY3NzU3R5bGVcIjp7fSxcInRleHRTdHlsZVwiOjB9LFwic2VlQWxsU2xpZGVcIjp7XCJpZFwiOlwic2VlQWxsU2xpZGVUZXh0XCIsXCJjbGlja1VybFwiOlwiaHR0cHM6Ly93d3cuYmluZy5jb20vc2hvcC90cmVuZGluZz9maWx0ZXJzPVBhZ2VUeXBlOiUyMjIwJTIyJTIwUENvbnRleHQ6JTIyVUdWeWMyOXVZV3hwZW1WRGIyNTBaWGgwZFdGcyUyMiZ2YXJpYW50cz1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cCZzcmN0bXRpZD1wcmctc2gtYmQtZGlzZ2IscHJnLXNoLWJkLW5ld2Jhbm5lcixwcmctc2gtYmQtbmV3Y2hja290LHByZy1zaC1iZC1ud2Noayxwcmctc2gtYmQteHRyYWNhc2gscHJnLXNoLXJlY29wZHAscHJnLXNoLXJtaXRtbG5rLHByZy1zaC11c2Vjc2hrLHByZy1zaC11c2Vjc2hrcGRwLHByZy1zaC1udHBjYXJkZGR1cFwiLFwidGV4dFwiOlwiXCIsXCJjc3NTdHlsZVwiOnt9LFwidGV4dFN0eWxlXCI6MH0sXCJ0aXRsZVwiOntcImlkXCI6XCJwVHJlbmRpbmdQcm9kdWN0c1wiLFwiY2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3Nob3AvdHJlbmRpbmc/ZmlsdGVycz1QYWdlVHlwZTolMjIyMCUyMiUyMFBDb250ZXh0OiUyMlVHVnljMjl1WVd4cGVtVkRiMjUwWlhoMGRXRnMlMjImdmFyaWFudHM9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXAmc3JjdG10aWQ9cHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc2gtbnRwY2FyZGRkdXBcIixcInRleHRcIjpcIlwiLFwiY3NzU3R5bGVcIjp7fSxcInRleHRTdHlsZVwiOjB9fSIsImRhdGFWZXJzaW9uIjoxLCJjYXJkSWQiOjU4fV19LHsiZGF0YVRlbXBsYXRlIjoibXNmdC1laWdodC1jYXJkLWZpdmUtY29sLWJ0ZiIsImxheW91dFRlbXBsYXRlIjoibXNmdC1laWdodC1jYXJkLWZpdmUtY29sLWJ0ZiIsImNhcmRzIjpbeyJpZCI6IkFBMWdBdzZtIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IjYgQmVzdCBCbHVldG9vdGggU3BlYWtlcnMgRm9yIENhcnM6IEZvciBNdXNpYyBMb3ZlcnMgT24gVGhlIEdvIiwiYWJzdHJhY3QiOiJCZXN0IEJsdWV0b290aCBTcGVha2VycyBGb3IgQ2FyczogVGhlIHRpbWVzIHdoZW4gZXZlcnl0aGluZyB3YXMgd2lyZWQgYXJlIGdvbmUuIFdpdGggYSBsb3Qgb2YgYWR2YW5jZW1lbnRzIGluIHRlY2hub2xvZ3ksIGV2ZXJ5dGhpbmcgaGFzIGJlY29tZSBlYXN5IHRvIHVzZSB3aXRoIG1hbnkgaGFzc2xlcyBvciBkaWZmaWN1bHRpZXMuIEJsdWV0b290aCBzcGVha2VycyBoYXZlIGJlY29tZSBhbiBpbnRlZ3JhbCBwYXJ0IG9mIG91ciBsaXZlcyBhbmQgYXJlIG5vdyBjb21tb25seSB1c2VkIGV2ZXJ5d2hlcmUgbGlrZSwgZHVyaW5nIHBhcnRpZXMsIHJhbmRvbSBqYW0gc2Vzc2lvbnMsIG9yIGluIGNhcnMgd2hpbGUgZHJpdmluZy4gV2l0aCB2YXJpb3VzIGJyYW5kcyBhdmFpbGFibGUgaW4gdGhlIG1hcmtldCB3ZSBoYXZlIG1hZGUgYSBsaXN0IG9mIHRoZSBiZXN0IEJsdWV0b290aC4uLiIsInJlYWRUaW1lTWluIjo0LCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2xpZmVzdHlsZS9zaG9wcGluZy82LWJlc3QtYmx1ZXRvb3RoLXNwZWFrZXJzLWZvci1jYXJzLWZvci1tdXNpYy1sb3ZlcnMtb24tdGhlLWdvL2FyLUFBMWdBdzZtIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyMy0wOS0xMlQwNjo1NTowMFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo2NzUsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy4wOGE0ZTZjYmVkYjZmNWE1ODIxODUyN2ViYTFkNTg2ZiZwaWQ9V2RwIiwidGl0bGUiOiJiZXN0IGJsdWV0b290aCBzcGVha2VycyBmb3IgY2FycyIsImNhcHRpb24iOiJiZXN0IGJsdWV0b290aCBzcGVha2VycyBmb3IgY2FycyIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDUzNzNFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNERERDREMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQ1MzczRSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjREREQ0RDIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkJNdU0xayIsIm5hbWUiOiJIZXIgWmluZGFnaSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCTURHU0cuaW1nIiwicHJvZmlsZUlkIjoidmlkLTB3bWQ0OTZ5M2RzeDJrcHY4eDVuOWpoZTlhbmZtNGVqZzUwOGZtcW1tdzM3djBlNHdnOGEifSwiY2F0ZWdvcnkiOiJsaWZlc3R5bGUiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6NTksInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50Ijo1NSwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6NCwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzQxZTM2OWEzLWE3MzQtNGM5Zi04YzA3LTlkMmYxYzBmYjU1NCIsImZlZWROYW1lIjoiR2FkZ2V0cyIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjIxLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6IkF1dG9zIiwidGltZSI6IiJ9fV0sInJpIjoiMjA0IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiVGhpcyB3ZWIgYXJ0aWNsZSBwcmVzZW50cyB0aGUgKioqYmVzdCBCbHVldG9vdGggc3BlYWtlcnMgZm9yIGNhcnMqKiogZm9yIG11c2ljIGxvdmVycyBvbiB0aGUgZ28uIEl0IHJldmlld3MgYW5kIHJlY29tbWVuZHM6XG5cbi0gKipib0F0IFN0b25lIDE4MCA1VyBCbHVldG9vdGggU3BlYWtlcioqLCB3aXRoIDEwIGhvdXJzIG9mIHBsYXl0aW1lLCA4MDAgbUFoIGJhdHRlcnksIGFuZCBoaWdoLWRlZmluaXRpb24gc291bmQuXG4tICoqWmVicm9uaWNzIFpFQi1WSVRBIFdpcmVsZXNzIDEwVyBQb3J0YWJsZSBCYXIgU3BlYWtlcioqLCB3aXRoIDEwVyBwb3dlciwgNSBob3VycyBvZiBwbGF5YmFjaywgVVNCIEF1eCBpbnB1dCwgTWljcm8gU0QgY2FyZCwgYW5kIEZNIHJhZGlvLlxuLSAqKkpCTCBGbGlwIDUgV2lyZWxlc3MgUG9ydGFibGUgQmx1ZXRvb3RoIFNwZWFrZXIqKiwgd2l0aCAxMiBob3VycyBvZiBwbGF5dGltZSwgUGFydHlCb29zdCBtb2RlLCBkdXJhYmxlIG1hdGVyaWFsLCBhbmQgSVBYNy1yYXRlZC5cbi0gKipib0F0IFN0b25lIDM1MiBCbHVldG9vdGggU3BlYWtlcioqLCB3aXRoIDEwVyBvZiBhdWRpbywgVFdTIGZ1bmN0aW9uYWxpdHksIGFuZCAxODAwbUFoIGJhdHRlcnkuXG4tICoqRWNobyBEb3QgKDNyZCBHZW4pIC0gU21hcnQgc3BlYWtlciB3aXRoIEFsZXhhKiosIGNvbXBhdGlibGUgd2l0aCBtb3N0IGNhcnMgYW5kIG9mZmVyaW5nIHZhcmlvdXMgbXVzaWMgc2VydmljZXMuXG4tICoqSkJMIEZsaXAgNiBXaXJlbGVzcyBQb3J0YWJsZSBCbHVldG9vdGggU3BlYWtlcioqLCB3aXRoIDEyIGhvdXJzIG9mIHBsYXl0aW1lLCB3aXJlbGVzcyBjb25uZWN0aW9uLCBhbmQgSVA2Ny1yYXRlZC5cblxuVGhlIGFydGljbGUgcHJvdmlkZXMgbGlua3MgdG8gY2hlY2sgdGhlIHByaWNlcyBhbmQgbW9yZSBkZXRhaWxzIG9mIGVhY2ggc3BlYWtlci4gSXQgYWxzbyBkaXJlY3RzIHRoZSByZWFkZXJzIHRvIGV4cGxvcmUgbW9yZSBvbiB0aGUgYmVzdCBCbHVldG9vdGggc3BlYWtlcnMgZm9yIGNhcnMgaGVyZS5cbiIsImluZGV4IjowfV19LHsidHlwZSI6Im5hdGl2ZWFkIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowfSx7ImlkIjoiQUExbTZkYTQiLCJ0eXBlIjoic2xpZGVzaG93IiwidGl0bGUiOiJNb2Rlcm4gY2l0aWVzIGJ1aWx0IG9uIGFuY2llbnQgcnVpbnMiLCJhYnN0cmFjdCI6IkRpZCB5b3Uga25vdyB0aGF0IHNvbWUgb2YgdGhlIHdvcmxkJ3MgbW9zdCBtb2Rlcm4gY2l0aWVzIGFyZSBpbiBmYWN0IGFtb25nIHRoZSBtb3N0IGFuY2llbnQ/IFdoaWxlIHRoZWlyIGNvbnRlbXBvcmFyeSBzdGVlbCBhbmQgZ2xhc3MgdmVuZWVyIHN1Z2dlc3QgYSByZWNlbnQgaGlzdG9yeSwgbWFueSBvZiB0aGVzZSBjaXRpZXMgYXJlIGJ1aWx0IG9uIGZvdW5kYXRpb25zIHRoYXQgZGF0ZSBiYWNrIHRvIGFudGlxdWl0eS4gVGhlc2UgaGlzdG9yaWMgYnVpbGRpbmcgYmxvY2tzIGhhdmUgcHJlc2VydmVkIGEgd2VhbHRoIG9mIGJyZWF0aHRha2luZyBtb251bWVudHMgdGhhdCBwcm92aWRlIGEgY29tcGVsbGluZyBjb250cmFzdCBiZXR3ZWVuIHRoZSBvbGQgYW5kIHRoZSBuZXcuIFNvLCB3aGF0IGFyZSB0aGUgb2xkZXN0IG5ld2VzdCBjaXRpZXMgb24gdGhlIHBsYW5ldD8gQ2xpY2sgdGhyb3VnaCBhbmQgZGlzY292ZXIgdGhlc2UgZmFzY2luYXRpbmcgdXJiYW4gZGVzdGluYXRpb25zLiIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbGlmZXN0eWxlL3RyYXZlbC9tb2Rlcm4tY2l0aWVzLWJ1aWx0LW9uLWFuY2llbnQtcnVpbnMvc3MtQUExbTZkYTQiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwic2xpZGVzIjpbeyJ0aXRsZSI6Ik1vZGVybiBjaXRpZXMgYnVpbHQgb24gYW5jaWVudCBydWlucyIsImJvZHkiOiI8cD5EaWQgeW91IGtub3cgdGhhdCBzb21lIG9mIHRoZSB3b3JsZCdzIG1vc3QgbW9kZXJuIGNpdGllcyBhcmUgaW4gZmFjdCBhbW9uZyB0aGUgbW9zdCBhbmNpZW50PyBXaGlsZSB0aGVpciBjb250ZW1wb3Jhcnkgc3RlZWwgYW5kIGdsYXNzIHZlbmVlciBzdWdnZXN0IGEgcmVjZW50IGhpc3RvcnksIG1hbnkgb2YgdGhlc2UgY2l0aWVzIGFyZSBidWlsdCBvbiBmb3VuZGF0aW9ucyB0aGF0IGRhdGUgYmFjayB0byBhbnRpcXVpdHkuIFRoZXNlIGhpc3RvcmljIGJ1aWxkaW5nIGJsb2NrcyBoYXZlIHByZXNlcnZlZCBhIHdlYWx0aCBvZiBicmVhdGh0YWtpbmcgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vdHJhdmVsLzMzOTY0Ni9zZWNyZXRzLWJlaGluZC1mYW1vdXMtbW9udW1lbnRzXCIgcmVsPVwibm9vcGVuZXJcIj5tb251bWVudHM8L2E+IHRoYXQgcHJvdmlkZcKgYSBjb21wZWxsaW5nIGNvbnRyYXN0IGJldHdlZW4gdGhlIG9sZCBhbmQgdGhlIG5ldy4gU28sIHdoYXQgYXJlIHRoZSBvbGRlc3QgbmV3ZXN0IGNpdGllcyBvbiB0aGUgcGxhbmV0PzwvcD4gPHA+Q2xpY2sgdGhyb3VnaCBhbmQgZGlzY292ZXIgdGhlc2UgZmFzY2luYXRpbmcgdXJiYW4gZGVzdGluYXRpb25zLjwvcD48cD5Zb3UgbWF5IGFsc28gbGlrZTo8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS9uLzE3MjI3Nz91dG1fc291cmNlPW1zbi5jb20mdXRtX21lZGl1bT1kaXNwbGF5JnV0bV9jYW1wYWlnbj1yZWZlcnJhbF9kZXNjcmlwdGlvbiZ1dG1fY29udGVudD00OTMzNjh2NmVuLWluXCI+IE1pbmQtYmxvd2luZyBmYWN0cyBhYm91dCB0aGUgVVMgdGhhdCBtb3N0IEFtZXJpY2FucyB3b3VsZCBiZSBzaG9ja2VkIHRvIGxlYXJuPC9hPjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMjgwLCJxdWFsaXR5Ijo4OSwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjFpQXdjUS5pbWciLCJhdHRyaWJ1dGlvbiI6IlNodXR0ZXJzdG9jayIsInRpdGxlIjoiTW9kZXJuIGNpdGllcyBidWlsdCBvbiBhbmNpZW50IHJ1aW5zIiwiY2FwdGlvbiI6IjxwPkRpZCB5b3Uga25vdyB0aGF0IHNvbWUgb2YgdGhlIHdvcmxkJ3MgbW9zdCBtb2Rlcm4gY2l0aWVzIGFyZSBpbiBmYWN0IGFtb25nIHRoZSBtb3N0IGFuY2llbnQ/IFdoaWxlIHRoZWlyIGNvbnRlbXBvcmFyeSBzdGVlbCBhbmQgZ2xhc3MgdmVuZWVyIHN1Z2dlc3QgYSByZWNlbnQgaGlzdG9yeSwgbWFueSBvZiB0aGVzZSBjaXRpZXMgYXJlIGJ1aWx0IG9uIGZvdW5kYXRpb25zIHRoYXQgZGF0ZSBiYWNrIHRvIGFudGlxdWl0eS4gVGhlc2UgaGlzdG9yaWMgYnVpbGRpbmcgYmxvY2tzIGhhdmUgcHJlc2VydmVkIGEgd2VhbHRoIG9mIGJyZWF0aHRha2luZyA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS90cmF2ZWwvMzM5NjQ2L3NlY3JldHMtYmVoaW5kLWZhbW91cy1tb251bWVudHNcIiByZWw9XCJub29wZW5lclwiPm1vbnVtZW50czwvYT4gdGhhdCBwcm92aWRlwqBhIGNvbXBlbGxpbmcgY29udHJhc3QgYmV0d2VlbiB0aGUgb2xkIGFuZCB0aGUgbmV3LiBTbywgd2hhdCBhcmUgdGhlIG9sZGVzdCBuZXdlc3QgY2l0aWVzIG9uIHRoZSBwbGFuZXQ/PC9wPiA8cD5DbGljayB0aHJvdWdoIGFuZCBkaXNjb3ZlciB0aGVzZSBmYXNjaW5hdGluZyB1cmJhbiBkZXN0aW5hdGlvbnMuPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vMTcyMjc3P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQ5MzM2OHY2ZW4taW5cIj4gTWluZC1ibG93aW5nIGZhY3RzIGFib3V0IHRoZSBVUyB0aGF0IG1vc3QgQW1lcmljYW5zIHdvdWxkIGJlIHNob2NrZWQgdG8gbGVhcm48L2E+PC9wPiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiUm9tZSwgSXRhbHkiLCJib2R5IjoiPHA+VGhlcmUgYXJlIHBvY2tldHMgb2YgbW9kZXJuLWRheSBSb21lIHRoYXQgYXJlIGFsbW9zdCBlbnRpcmVseSBiZXJlZnQgb2YgY29udGVtcG9yYXJ5IG5ldy1idWlsZCBzdHJ1Y3R1cmVzLCBzdWNoIGlzIHRoZSBhc3RvbmlzaGluZyBjb2xsZWN0aW9uIG9mIGFuY2llbnQgZ2VtcyB0aGF0IGRlZmluZSB0aGlzIGZhYmxlZCBjaXR5LjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9jb21tdW5pdHkvY2hhbm5lbC92aWQtN3h4OG1udWN1NTV5dzYzd2U5dmEyZ3dyN3VpaGJ4d2M2OGZ4cXAyNXg2dGc0ZnRpYnByYT9jdmlkPTk0NjMxNTQxYmMwZjRmODliZmQ1OTE1OGQ2OTZhZDdlXCI+Rm9sbG93IHVzIGFuZCBhY2Nlc3MgZ3JlYXQgZXhjbHVzaXZlIGNvbnRlbnQgZXZlcnkgZGF5PC9hPjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMjgwLCJxdWFsaXR5Ijo0NiwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQVRaMjlOLmltZyIsImF0dHJpYnV0aW9uIjoiU2h1dHRlcnN0b2NrwqAiLCJ0aXRsZSI6IlJvbWUsIEl0YWx5IiwiY2FwdGlvbiI6IjxwPlRoZXJlIGFyZSBwb2NrZXRzIG9mIG1vZGVybi1kYXkgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vdHJhdmVsLzI4MDU0OC9kaXNjb3Zlci10aGUtbWFzdGVycGllY2UtdGhhdC1pcy12YXRpY2FuLWNpdHlcIiByZWw9XCJub29wZW5lclwiPlJvbWU8L2E+IHRoYXQgYXJlIGFsbW9zdCBlbnRpcmVseSBiZXJlZnQgb2YgY29udGVtcG9yYXJ5IG5ldy1idWlsZCBzdHJ1Y3R1cmVzLCBzdWNoIGlzIHRoZSBhc3RvbmlzaGluZyBjb2xsZWN0aW9uIG9mIGFuY2llbnQgZ2VtcyB0aGF0IGRlZmluZSB0aGlzIGZhYmxlZCBjaXR5LjwvcD4iLCJzb3VyY2UiOiJtc24ifX0seyJ0aXRsZSI6IlJvbWUsIEl0YWx5IiwiYm9keSI6IjxwPlJvbWUgd2FzIGZvdW5kZWQgaW4gNzUzIEJDRSBhbmQgaXMgb25lIG9mIHRoZSBvbGRlc3QgY29udGludW91c2x5LW9jY3VwaWVkIGNpdGllcyBpbiBFdXJvcGUuIEl0cyByYXJlIGFuZCBwcmVjaW91cyBsYW5kbWFya3MgaW5jbHVkZSB0aGUgbWlnaHR5IENvbG9zc2V1bSBhbmQgdGhlIFJvbWFuIEZvcnVtIChwaWN0dXJlZCkuPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vMzA5MTkzP3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQ5MzM2OHY2ZW4taW5cIj4gVGhlIGRpZmZlcmVudCB3YXlzIHdlIHdvcnNoaXAgPC9hPjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMTEyLCJxdWFsaXR5Ijo0NiwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQVRaMjlYLmltZyIsImF0dHJpYnV0aW9uIjoiU2h1dHRlcnN0b2NrwqAiLCJ0aXRsZSI6IlJvbWUsIEl0YWx5IiwiY2FwdGlvbiI6IjxwPlJvbWUgd2FzIGZvdW5kZWQgaW4gNzUzIEJDRSBhbmQgaXMgb25lIG9mIHRoZSBvbGRlc3QgY29udGludW91c2x5LW9jY3VwaWVkIGNpdGllcyBpbiBFdXJvcGUuIEl0cyByYXJlIGFuZCBwcmVjaW91cyBsYW5kbWFya3MgaW5jbHVkZSB0aGUgbWlnaHR5IENvbG9zc2V1bSBhbmQgdGhlIFJvbWFuIEZvcnVtIChwaWN0dXJlZCkuPC9wPiIsInNvdXJjZSI6Im1zbiJ9fV0sInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yMVQwNDozMDowMFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTkyMCwiaGVpZ2h0IjoxMjgwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuNTdjYWRjNmQwOTk1ZGZjM2FjYWU5NDFjNmI3ZWViMzkmcGlkPVdkcCIsInRpdGxlIjoiTW9kZXJuIGNpdGllcyBidWlsdCBvbiBhbmNpZW50IHJ1aW5zIiwiY2FwdGlvbiI6IjxwPkRpZCB5b3Uga25vdyB0aGF0IHNvbWUgb2YgdGhlIHdvcmxkJ3MgbW9zdCBtb2Rlcm4gY2l0aWVzIGFyZSBpbiBmYWN0IGFtb25nIHRoZSBtb3N0IGFuY2llbnQ/IFdoaWxlIHRoZWlyIGNvbnRlbXBvcmFyeSBzdGVlbCBhbmQgZ2xhc3MgdmVuZWVyIHN1Z2dlc3QgYSByZWNlbnQgaGlzdG9yeSwgbWFueSBvZiB0aGVzZSBjaXRpZXMgYXJlIGJ1aWx0IG9uIGZvdW5kYXRpb25zIHRoYXQgZGF0ZSBiYWNrIHRvIGFudGlxdWl0eS4gVGhlc2UgaGlzdG9yaWMgYnVpbGRpbmcgYmxvY2tzIGhhdmUgcHJlc2VydmVkIGEgd2VhbHRoIG9mIGJyZWF0aHRha2luZyA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS90cmF2ZWwvMzM5NjQ2L3NlY3JldHMtYmVoaW5kLWZhbW91cy1tb251bWVudHNcIiByZWw9XCJub29wZW5lclwiPm1vbnVtZW50czwvYT4gdGhhdCBwcm92aWRlwqBhIGNvbXBlbGxpbmcgY29udHJhc3QgYmV0d2VlbiB0aGUgb2xkIGFuZCB0aGUgbmV3LiBTbywgd2hhdCBhcmUgdGhlIG9sZGVzdCBuZXdlc3QgY2l0aWVzIG9uIHRoZSBwbGFuZXQ/PC9wPiA8cD5DbGljayB0aHJvdWdoIGFuZCBkaXNjb3ZlciB0aGVzZSBmYXNjaW5hdGluZyB1cmJhbiBkZXN0aW5hdGlvbnMuPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vMTcyMjc3P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQ5MzM2OHY2ZW4taW5cIj4gTWluZC1ibG93aW5nIGZhY3RzIGFib3V0IHRoZSBVUyB0aGF0IG1vc3QgQW1lcmljYW5zIHdvdWxkIGJlIHNob2NrZWQgdG8gbGVhcm48L2E+PC9wPiIsInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMjcyQTMwIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNDMEQ5RjIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzI3MkEzMCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjQzBEOUYyIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFtMlNhZyIsIm5hbWUiOiJTdGFyc0luc2lkZXIiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFlQlRtei5pbWciLCJwcm9maWxlSWQiOiJ2aWQtN3h4OG1udWN1NTV5dzYzd2U5dmEyZ3dyN3VpaGJ4d2M2OGZ4cXAyNXg2dGc0ZnRpYnByYSIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjo5OCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dQZnYifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6OTgsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnUGZ2LWRhcmsifX0sImNhdGVnb3J5IjoibGlmZXN0eWxlIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjIwLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MjAsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfMjFiOTM0Y2EtOTY2Ni00ZWJhLWFiN2QtZDE4MDYxMzU5Y2U4IiwiZmVlZE5hbWUiOiJUcmF2ZWwiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoyMiwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoidTJVIiwicmFuayI6MH1dLCJyaSI6IjIwOCwyMDkiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsidHlwZSI6Ik1vbmV5SW5mbyIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicG9zaXRpb24iOjAsImRhdGEiOiJ7XCJ1c2VyU2lnbmVkSW5cIjpmYWxzZSxcImRhdGFGcm9tXCI6XCJ3YXRjaGxpc3RcIixcInRhYnNcIjpbXCJ3YXRjaGxpc3RcIixcIm1hcmtldFwiLFwiY3J5cHRvXCIsXCJjdXJyZW5jaWVzXCIsXCJtb3ZlcnNcIixcImdhaW5lcnNcIixcImxvc2Vyc1wiXSxcImZ1bGxXYXRjaGxpc3RRdW90ZUlkc1wiOltdLFwiZGF0YVRpbWVzdGFtcFwiOjE3MDg3Mjg3NzE5NjQsXCJ0YWJMaXN0RGV0YWlsc1wiOntcIndhdGNobGlzdFwiOntcInF1b3RlSWRzXCI6W119LFwicmVjb21tZW5kXCI6e1wicXVvdGVJZHNcIjpbXCJhaGtxd3dcIixcImExdmtnaFwiLFwiYWhrdWN3XCIsXCJidTJkcWhcIixcImFoaTh1MlwiXSxcInF1b3RlSXRlbXNcIjpbe1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImFoa3F3d1wiLFwic3ltYm9sXCI6XCJOSUZUWVwiLFwicHJpY2VcIjpcIjIyLDIxMi43MFwiLFwicHJpY2VOdW1iZXJcIjoyMjIxMi43LFwicHJpY2VEYXlMb3dcIjoyMjE4Ni4xLFwicHJpY2VEYXlIaWdoXCI6MjIyOTcuNSxcIm1hcmtldENhcFwiOjAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6NzU4Ljc1LFwicHJpY2U1MndIaWdoXCI6MjIyOTcuNSxcInByaWNlNTJ3TG93XCI6MTY4MjguMzUsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjoyMjIxNy40NSxcImNoYW5nZVZhbHVlXCI6XCItNC43NVwiLFwiY2hhbmdlUGNudFwiOlwiLTAuMDIlXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6LTAuMDIxMzgsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOi00Ljc1LFwiZGlzcGxheU5hbWVcIjpcIk5JRlRZXCIsXCJzaG9ydE5hbWVcIjpcIk5JRlRZXCIsXCJnYWluXCI6ZmFsc2UsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiSW5kZXhcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDEwOjAxOjU5LjAwMyswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJOYXRpb25hbCBTdG9jayBFeGNoYW5nZSBvZiBJbmRpYVwiLFwiZXhjaGFuZ2VJZFwiOlwicjZlNDJnXCIsXCJyZXR1cm4xWWVhclwiOjI3LjE3ODMsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOjIuMTY1NCxcInJldHVybjFNb250aFwiOjMuNTM2NixcInJldHVybjFEYXlcIjotMC4wMjEzOH0se1wiY3VycmVuY3lcIjpcIlVTRFwiLFwiaWRcIjpcImExdmtnaFwiLFwic3ltYm9sXCI6XCJJTkZZXCIsXCJwcmljZVwiOlwiMjAuMTFcIixcInByaWNlTnVtYmVyXCI6MjAuMTEsXCJwcmljZURheUxvd1wiOjIwLjEsXCJwcmljZURheUhpZ2hcIjoyMC4yNixcIm1hcmtldENhcFwiOjY5NTkwNzQwMDAwMDAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6MC4xMixcInByaWNlNTJ3SGlnaFwiOjIwLjc0LFwicHJpY2U1MndMb3dcIjoxNC43MSxcInByaWNlUHJldmlvdXNDbG9zZVwiOjIwLjMxLFwiY2hhbmdlVmFsdWVcIjpcIi0wLjIwXCIsXCJjaGFuZ2VQY250XCI6XCItMC45OCVcIixcImNoYW5nZVBjbnROdW1iZXJcIjotMC45ODQ3LFwiY2hhbmdlVmFsdWVOdW1iZXJcIjotMC4yLFwiZGlzcGxheU5hbWVcIjpcIkluZm9zeXMgTHRkXCIsXCJnYWluXCI6ZmFsc2UsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiU3RvY2tcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDIxOjEwOjAwKzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIk5ldyBZb3JrIFN0b2NrIEV4Y2hhbmdlXCIsXCJleGNoYW5nZUlkXCI6XCJyNmR3b3JcIixcInJldHVybjFZZWFyXCI6OS43MTA5LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjo5LjQxMjQsXCJyZXR1cm4xTW9udGhcIjowLjYwMDMsXCJyZXR1cm4xRGF5XCI6LTAuOTg0N30se1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImFoa3Vjd1wiLFwic3ltYm9sXCI6XCJTRU5TRVhcIixcInByaWNlXCI6XCI3MywxNDIuODBcIixcInByaWNlTnVtYmVyXCI6NzMxNDIuOCxcInByaWNlRGF5TG93XCI6NzMwMjIuMCxcInByaWNlRGF5SGlnaFwiOjczNDEzLjkzLFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjoyMDgyLjQ5LFwicHJpY2U1MndIaWdoXCI6NzM0MjcuNTksXCJwcmljZTUyd0xvd1wiOjU3MDg0LjkxLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6NzMxNTguMjQsXCJjaGFuZ2VWYWx1ZVwiOlwiLTE1LjQ0XCIsXCJjaGFuZ2VQY250XCI6XCItMC4wMiVcIixcImNoYW5nZVBjbnROdW1iZXJcIjotMC4wMjExLFwiY2hhbmdlVmFsdWVOdW1iZXJcIjotMTUuNDQsXCJkaXNwbGF5TmFtZVwiOlwiU0VOU0VYXCIsXCJzaG9ydE5hbWVcIjpcIlNFTlNFWFwiLFwiZ2FpblwiOmZhbHNlLFwidW5jaGFuZ2VkXCI6ZmFsc2UsXCJzZWN1cml0eVR5cGVcIjpcIkluZGV4XCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QxMjozNDo1OSswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJCb21iYXkgU3RvY2sgRXhjaGFuZ2VcIixcImV4Y2hhbmdlSWRcIjpcInI2ZTFkM1wiLFwicmV0dXJuMVllYXJcIjoyMy4wMDM2LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjoxLjIwNSxcInJldHVybjFNb250aFwiOjIuOTMwNixcInJldHVybjFEYXlcIjotMC4wMjExfSx7XCJjdXJyZW5jeVwiOlwiWkFjXCIsXCJpZFwiOlwiYnUyZHFoXCIsXCJzeW1ib2xcIjpcIk5ZMVwiLFwicHJpY2VcIjpcIjQsMDY3LjAwXCIsXCJwcmljZU51bWJlclwiOjQwNjcuMCxcInByaWNlRGF5TG93XCI6NDA0Ny4wLFwicHJpY2VEYXlIaWdoXCI6NDEyNS4wLFwibWFya2V0Q2FwXCI6MzczNjI1OTAwMDAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6LTEyMy4wLFwicHJpY2U1MndIaWdoXCI6NDY5OS4wLFwicHJpY2U1MndMb3dcIjozNTY2LjAsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjo0MDc2LjAsXCJjaGFuZ2VWYWx1ZVwiOlwiLTkuMDBcIixcImNoYW5nZVBjbnRcIjpcIi0wLjIyJVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0wLjIyMDgsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOi05LjAsXCJkaXNwbGF5TmFtZVwiOlwiTmluZXR5IE9uZSBMdGRcIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJTdG9ja1wiLFwidGltZUxhc3RUcmFkZWRcIjpcIjIwMjQtMDItMjNUMTY6MzA6MDArMDA6MDBcIixcImV4Y2hhbmdlTmFtZVwiOlwiSm9oYW5uZXNidXJnIFN0b2NrIEV4Y2hhbmdlXCIsXCJleGNoYW5nZUlkXCI6XCJyNmR3b2ZcIixcInJldHVybjFZZWFyXCI6LTkuNDIwOSxcInJldHVybjNZZWFyXCI6MC4wLFwicmV0dXJuWVREXCI6LTUuMzUyNixcInJldHVybjFNb250aFwiOi0yLjkzNTYsXCJyZXR1cm4xRGF5XCI6LTAuMjIwOH0se1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImFoaTh1MlwiLFwic3ltYm9sXCI6XCJJREVBXCIsXCJwcmljZVwiOlwiMTcuNTVcIixcInByaWNlTnVtYmVyXCI6MTcuNTUsXCJwcmljZURheUxvd1wiOjE2LjcsXCJwcmljZURheUhpZ2hcIjoxOC40LFwibWFya2V0Q2FwXCI6NzkzNDgxMTAwMDAwLjAsXCJwcmljZUNoYW5nZTFNb250aFwiOjIuNjUsXCJwcmljZTUyd0hpZ2hcIjoxOC40LFwicHJpY2U1MndMb3dcIjo1LjcsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjoxNi4zLFwiY2hhbmdlVmFsdWVcIjpcIisxLjI1XCIsXCJjaGFuZ2VQY250XCI6XCIrNy42NyVcIixcImNoYW5nZVBjbnROdW1iZXJcIjo3LjY2ODcsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOjEuMjUsXCJkaXNwbGF5TmFtZVwiOlwiVm9kYWZvbmUgSWRlYSBMdGRcIixcImdhaW5cIjp0cnVlLFwidW5jaGFuZ2VkXCI6ZmFsc2UsXCJzZWN1cml0eVR5cGVcIjpcIlN0b2NrXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QxMzoyNToyNSswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJOYXRpb25hbCBTdG9jayBFeGNoYW5nZSBvZiBJbmRpYVwiLFwiZXhjaGFuZ2VJZFwiOlwicjZkd29xXCIsXCJyZXR1cm4xWWVhclwiOjE2MC4wLFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjozLjIzNTMsXCJyZXR1cm4xTW9udGhcIjoxNy43ODUyLFwicmV0dXJuMURheVwiOjcuNjY4N31dfSxcIm1hcmtldFwiOntcInF1b3RlSWRzXCI6W1wiYWhrcXd3XCIsXCJhaGt1Y3dcIixcImF1dndvY1wiLFwiYXV2d3I3XCIsXCJhdnlvOG1cIixcImFoa3JubVwiLFwiYWhrdGFyXCJdLFwicXVvdGVJdGVtc1wiOlt7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYWhrcXd3XCIsXCJzeW1ib2xcIjpcIk5JRlRZXCIsXCJwcmljZVwiOlwiMjIsMjEyLjcwXCIsXCJwcmljZU51bWJlclwiOjIyMjEyLjcsXCJwcmljZURheUxvd1wiOjIyMTg2LjEsXCJwcmljZURheUhpZ2hcIjoyMjI5Ny41LFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjo3NTguNzUsXCJwcmljZTUyd0hpZ2hcIjoyMjI5Ny41LFwicHJpY2U1MndMb3dcIjoxNjgyOC4zNSxcInByaWNlUHJldmlvdXNDbG9zZVwiOjIyMjE3LjQ1LFwiY2hhbmdlVmFsdWVcIjpcIi00Ljc1XCIsXCJjaGFuZ2VQY250XCI6XCItMC4wMiVcIixcImNoYW5nZVBjbnROdW1iZXJcIjotMC4wMjEzOCxcImNoYW5nZVZhbHVlTnVtYmVyXCI6LTQuNzUsXCJkaXNwbGF5TmFtZVwiOlwiTklGVFlcIixcInNob3J0TmFtZVwiOlwiTklGVFlcIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJJbmRleFwiLFwidGltZUxhc3RUcmFkZWRcIjpcIjIwMjQtMDItMjNUMTA6MDE6NTkuMDAzKzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIk5hdGlvbmFsIFN0b2NrIEV4Y2hhbmdlIG9mIEluZGlhXCIsXCJleGNoYW5nZUlkXCI6XCJyNmU0MmdcIixcInJldHVybjFZZWFyXCI6MjcuMTc4MyxcInJldHVybjNZZWFyXCI6MC4wLFwicmV0dXJuWVREXCI6Mi4xNjU0LFwicmV0dXJuMU1vbnRoXCI6My41MzY2LFwicmV0dXJuMURheVwiOi0wLjAyMTM4fSx7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYWhrdWN3XCIsXCJzeW1ib2xcIjpcIlNFTlNFWFwiLFwicHJpY2VcIjpcIjczLDE0Mi44MFwiLFwicHJpY2VOdW1iZXJcIjo3MzE0Mi44LFwicHJpY2VEYXlMb3dcIjo3MzAyMi4wLFwicHJpY2VEYXlIaWdoXCI6NzM0MTMuOTMsXCJtYXJrZXRDYXBcIjowLjAsXCJwcmljZUNoYW5nZTFNb250aFwiOjIwODIuNDksXCJwcmljZTUyd0hpZ2hcIjo3MzQyNy41OSxcInByaWNlNTJ3TG93XCI6NTcwODQuOTEsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjo3MzE1OC4yNCxcImNoYW5nZVZhbHVlXCI6XCItMTUuNDRcIixcImNoYW5nZVBjbnRcIjpcIi0wLjAyJVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0wLjAyMTEsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOi0xNS40NCxcImRpc3BsYXlOYW1lXCI6XCJTRU5TRVhcIixcInNob3J0TmFtZVwiOlwiU0VOU0VYXCIsXCJnYWluXCI6ZmFsc2UsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiSW5kZXhcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDEyOjM0OjU5KzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIkJvbWJheSBTdG9jayBFeGNoYW5nZVwiLFwiZXhjaGFuZ2VJZFwiOlwicjZlMWQzXCIsXCJyZXR1cm4xWWVhclwiOjIzLjAwMzYsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOjEuMjA1LFwicmV0dXJuMU1vbnRoXCI6Mi45MzA2LFwicmV0dXJuMURheVwiOi0wLjAyMTF9LHtcImN1cnJlbmN5XCI6XCJVU0RcIixcImlkXCI6XCJhdXZ3b2NcIixcInN5bWJvbFwiOlwiR29sZFwiLFwicHJpY2VcIjpcIjIsMDQ1LjgwXCIsXCJwcmljZU51bWJlclwiOjIwNDUuOCxcInByaWNlRGF5TG93XCI6MjAyNS40LFwicHJpY2VEYXlIaWdoXCI6MjA1My4yLFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjoyOS44LFwicHJpY2U1MndIaWdoXCI6MjE1Mi4zLFwicHJpY2U1MndMb3dcIjoxODA4LjgsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjoyMDMwLjcsXCJjaGFuZ2VWYWx1ZVwiOlwiKzE1LjEwXCIsXCJjaGFuZ2VQY250XCI6XCIrMC43NCVcIixcImNoYW5nZVBjbnROdW1iZXJcIjowLjc0MzYsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOjE1LjEsXCJkaXNwbGF5TmFtZVwiOlwiR29sZFwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiRnV0dXJlXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QyMjozNzozNyswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJDT01FWFwiLFwiZXhjaGFuZ2VJZFwiOlwicjZkd3JwXCIsXCJyZXR1cm4xWWVhclwiOjEzLjEwMjYsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOi0xLjI1NDksXCJyZXR1cm4xTW9udGhcIjoxLjQ3ODIsXCJyZXR1cm4xRGF5XCI6MC43NDM2fSx7XCJjdXJyZW5jeVwiOlwiVVNEXCIsXCJpZFwiOlwiYXV2d3I3XCIsXCJzeW1ib2xcIjpcIlNpbHZlclwiLFwicHJpY2VcIjpcIjIyLjk4XCIsXCJwcmljZU51bWJlclwiOjIyLjk4LFwicHJpY2VEYXlMb3dcIjoyMi41OCxcInByaWNlRGF5SGlnaFwiOjIzLjAzLFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjowLjA4NixcInByaWNlNTJ3SGlnaFwiOjI2LjQ0LFwicHJpY2U1MndMb3dcIjoxOS45NSxcInByaWNlUHJldmlvdXNDbG9zZVwiOjIyLjc4LFwiY2hhbmdlVmFsdWVcIjpcIiswLjE5XCIsXCJjaGFuZ2VQY250XCI6XCIrMC44NCVcIixcImNoYW5nZVBjbnROdW1iZXJcIjowLjgzODMsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOjAuMTkxLFwiZGlzcGxheU5hbWVcIjpcIlNpbHZlclwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiRnV0dXJlXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QyMjozNzowNyswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJDT01FWFwiLFwiZXhjaGFuZ2VJZFwiOlwicjZkd3JwXCIsXCJyZXR1cm4xWWVhclwiOjEwLjQwMzcsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOi00LjYxMjYsXCJyZXR1cm4xTW9udGhcIjowLjM3NTcsXCJyZXR1cm4xRGF5XCI6MC44MzgzfSx7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYXZ5bzhtXCIsXCJzeW1ib2xcIjpcIlVTRElOUlwiLFwicHJpY2VcIjpcIjgyLjg2XCIsXCJwcmljZU51bWJlclwiOjgyLjg1OSxcInByaWNlRGF5TG93XCI6MC4wLFwicHJpY2VEYXlIaWdoXCI6MC4wLFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjotMC4yNzEsXCJwcmljZTUyd0hpZ2hcIjo4My40ODgsXCJwcmljZTUyd0xvd1wiOjgxLjU0MixcInByaWNlUHJldmlvdXNDbG9zZVwiOjgyLjgzNyxcImNoYW5nZVZhbHVlXCI6XCIrMC4wMlwiLFwiY2hhbmdlUGNudFwiOlwiKzAuMDMlXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6MC4wMjY1NixcImNoYW5nZVZhbHVlTnVtYmVyXCI6MC4wMjIsXCJkaXNwbGF5TmFtZVwiOlwiVW5pdGVkIFN0YXRlcyBEb2xsYXIvSW5kaWFuIFJ1cGVlXCIsXCJzaG9ydE5hbWVcIjpcIlVuaXRlZCBTdGF0ZXMgRG9sbGFyL0luZGlhbiBSdXBlZVwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiQ3VycmVuY3lQYWlyXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QxNjoyMTozMiswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJGb3JlaWduIEV4Y2hhbmdlIFJhdGVzXCIsXCJleGNoYW5nZUlkXCI6XCJyNmR3cm1cIixcInJldHVybjFZZWFyXCI6LTAuMDQ2MixcInJldHVybjNZZWFyXCI6MC4wLFwicmV0dXJuWVREXCI6LTAuNDU0NyxcInJldHVybjFNb250aFwiOi0wLjMyNixcInJldHVybjFEYXlcIjowLjAyNjU2fSx7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYWhrcm5tXCIsXCJzeW1ib2xcIjpcIk5JRlRZQkFOS1wiLFwicHJpY2VcIjpcIjQ2LDgxMS43NVwiLFwicHJpY2VOdW1iZXJcIjo0NjgxMS43NSxcInByaWNlRGF5TG93XCI6NDY3MjMuMTUsXCJwcmljZURheUhpZ2hcIjo0NzI0NS4zNSxcIm1hcmtldENhcFwiOjAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6MTcyOS4zNSxcInByaWNlNTJ3SGlnaFwiOjQ4NjM2LjQ1LFwicHJpY2U1MndMb3dcIjozODYxMy4xNSxcInByaWNlUHJldmlvdXNDbG9zZVwiOjQ2OTE5LjgsXCJjaGFuZ2VWYWx1ZVwiOlwiLTEwOC4wNVwiLFwiY2hhbmdlUGNudFwiOlwiLTAuMjMlXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6LTAuMjMwMyxcImNoYW5nZVZhbHVlTnVtYmVyXCI6LTEwOC4wNSxcImRpc3BsYXlOYW1lXCI6XCJOaWZ0eSBCYW5rIEluZGV4XCIsXCJzaG9ydE5hbWVcIjpcIk5pZnR5IEJhbmtcIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJJbmRleFwiLFwidGltZUxhc3RUcmFkZWRcIjpcIjIwMjQtMDItMjNUMTA6MDE6NTkuMDA0KzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIk5hdGlvbmFsIFN0b2NrIEV4Y2hhbmdlIG9mIEluZGlhXCIsXCJleGNoYW5nZUlkXCI6XCJyNmU0MmZcIixcInJldHVybjFZZWFyXCI6MTcuMjk1LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjotMi45NDkyLFwicmV0dXJuMU1vbnRoXCI6My44MzYsXCJyZXR1cm4xRGF5XCI6LTAuMjMwM30se1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImFoa3RhclwiLFwic3ltYm9sXCI6XCJOSUZUWU1JRDEwMFwiLFwicHJpY2VcIjpcIjQ5LDI3OS41NVwiLFwicHJpY2VOdW1iZXJcIjo0OTI3OS41NSxcInByaWNlRGF5TG93XCI6NDkxNjQuMDUsXCJwcmljZURheUhpZ2hcIjo0OTUwNi4yNSxcIm1hcmtldENhcFwiOjAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6MTg1Ni4xNSxcInByaWNlNTJ3SGlnaFwiOjQ5NzgwLjY1LFwicHJpY2U1MndMb3dcIjoyOTIwMC4yLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6NDkxMjguMzUsXCJjaGFuZ2VWYWx1ZVwiOlwiKzE1MS4yMFwiLFwiY2hhbmdlUGNudFwiOlwiKzAuMzElXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6MC4zMDc4LFwiY2hhbmdlVmFsdWVOdW1iZXJcIjoxNTEuMixcImRpc3BsYXlOYW1lXCI6XCJOSUZUWSBNaWRjYXAgMTAwXCIsXCJzaG9ydE5hbWVcIjpcIk5pZnR5IE1pZENhcFwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiSW5kZXhcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDEwOjAxOjU5LjAwNiswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJOYXRpb25hbCBTdG9jayBFeGNoYW5nZSBvZiBJbmRpYVwiLFwiZXhjaGFuZ2VJZFwiOlwicjZlNWFkXCIsXCJyZXR1cm4xWWVhclwiOjYzLjcwMDksXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOjYuMDQwNCxcInJldHVybjFNb250aFwiOjMuOTE0LFwicmV0dXJuMURheVwiOjAuMzA3OH1dfSxcImN1cnJlbmNpZXNcIjp7XCJxdW90ZUlkc1wiOltcImF2eWRtN1wiLFwiYXY4dzRjXCIsXCJhdjNxcDJcIixcImF1eGxhclwiLFwiYXZ0ODd3XCJdLFwicXVvdGVJdGVtc1wiOlt7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYXZ5ZG03XCIsXCJzeW1ib2xcIjpcIkdCUElOUlwiLFwicHJpY2VcIjpcIjEwNS4wNlwiLFwicHJpY2VOdW1iZXJcIjoxMDUuMDU3LFwicHJpY2VEYXlMb3dcIjoxMDUuMTYsXCJwcmljZURheUhpZ2hcIjoxMDUuMDU3LFwibWFya2V0Q2FwXCI6MC4wLFwicHJpY2VDaGFuZ2UxTW9udGhcIjotMC43MTgsXCJwcmljZTUyd0hpZ2hcIjoxMDcuOTEyLFwicHJpY2U1MndMb3dcIjo5Ni42MTUsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjoxMDQuODYzLFwiY2hhbmdlVmFsdWVcIjpcIiswLjE5XCIsXCJjaGFuZ2VQY250XCI6XCIrMC4xOSVcIixcImNoYW5nZVBjbnROdW1iZXJcIjowLjE4NSxcImNoYW5nZVZhbHVlTnVtYmVyXCI6MC4xOTQsXCJkaXNwbGF5TmFtZVwiOlwiQnJpdGlzaCBQb3VuZC9JbmRpYW4gUnVwZWVcIixcInNob3J0TmFtZVwiOlwiQnJpdGlzaCBQb3VuZC9JbmRpYW4gUnVwZWVcIixcImdhaW5cIjp0cnVlLFwidW5jaGFuZ2VkXCI6ZmFsc2UsXCJzZWN1cml0eVR5cGVcIjpcIkN1cnJlbmN5UGFpclwiLFwidGltZUxhc3RUcmFkZWRcIjpcIjIwMjQtMDItMjNUMjI6MDA6MDErMDA6MDBcIixcImV4Y2hhbmdlTmFtZVwiOlwiRm9yZWlnbiBFeGNoYW5nZSBSYXRlc1wiLFwiZXhjaGFuZ2VJZFwiOlwicjZkd3JtXCIsXCJyZXR1cm4xWWVhclwiOjYuMTMxLFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjotMC43OTg4LFwicmV0dXJuMU1vbnRoXCI6LTAuNjc4OCxcInJldHVybjFEYXlcIjowLjE4NX0se1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImF2OHc0Y1wiLFwic3ltYm9sXCI6XCJFVVJJTlJcIixcInByaWNlXCI6XCI4OS42NFwiLFwicHJpY2VOdW1iZXJcIjo4OS42MzcsXCJwcmljZURheUxvd1wiOjAuMCxcInByaWNlRGF5SGlnaFwiOjAuMCxcIm1hcmtldENhcFwiOjAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6LTAuODMzLFwicHJpY2U1MndIaWdoXCI6OTIuNjI2LFwicHJpY2U1MndMb3dcIjo4Ni4xODUsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjo4OS42NTQsXCJjaGFuZ2VWYWx1ZVwiOlwiLTAuMDJcIixcImNoYW5nZVBjbnRcIjpcIi0wLjAyJVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0wLjAxODk2LFwiY2hhbmdlVmFsdWVOdW1iZXJcIjotMC4wMTcsXCJkaXNwbGF5TmFtZVwiOlwiRXVyby9JbmRpYW4gUnVwZWVcIixcInNob3J0TmFtZVwiOlwiRXVyby9JbmRpYW4gUnVwZWVcIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJDdXJyZW5jeVBhaXJcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDIxOjU5OjU5KzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIkZvcmVpZ24gRXhjaGFuZ2UgUmF0ZXNcIixcImV4Y2hhbmdlSWRcIjpcInI2ZHdybVwiLFwicmV0dXJuMVllYXJcIjoyLjUzMjUsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOi0yLjQ5MTEsXCJyZXR1cm4xTW9udGhcIjotMC45MjA3LFwicmV0dXJuMURheVwiOi0wLjAxODk2fSx7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYXYzcXAyXCIsXCJzeW1ib2xcIjpcIkNBRElOUlwiLFwicHJpY2VcIjpcIjYxLjM1XCIsXCJwcmljZU51bWJlclwiOjYxLjM0NTIsXCJwcmljZURheUxvd1wiOjAuMCxcInByaWNlRGF5SGlnaFwiOjAuMCxcIm1hcmtldENhcFwiOjAuMCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6LTAuMTE0MixcInByaWNlNTJ3SGlnaFwiOjYzLjE5MixcInByaWNlNTJ3TG93XCI6NTkuMTYxLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6NjEuNDQyNyxcImNoYW5nZVZhbHVlXCI6XCItMC4xMFwiLFwiY2hhbmdlUGNudFwiOlwiLTAuMTYlXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6LTAuMTU4NyxcImNoYW5nZVZhbHVlTnVtYmVyXCI6LTAuMDk3NSxcImRpc3BsYXlOYW1lXCI6XCJDYW5hZGlhbiBEb2xsYXIvSW5kaWFuIFJ1cGVlXCIsXCJzaG9ydE5hbWVcIjpcIkNhbmFkaWFuIERvbGxhci9JbmRpYW4gUnVwZWVcIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJDdXJyZW5jeVBhaXJcIixcInRpbWVMYXN0VHJhZGVkXCI6XCIyMDI0LTAyLTIzVDIyOjAwOjAwKzAwOjAwXCIsXCJleGNoYW5nZU5hbWVcIjpcIkZvcmVpZ24gRXhjaGFuZ2UgUmF0ZXNcIixcImV4Y2hhbmdlSWRcIjpcInI2ZHdybVwiLFwicmV0dXJuMVllYXJcIjowLjc0NTYsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOi0yLjQyMjUsXCJyZXR1cm4xTW9udGhcIjotMC4xODU4LFwicmV0dXJuMURheVwiOi0wLjE1ODd9LHtcImN1cnJlbmN5XCI6XCJJTlJcIixcImlkXCI6XCJhdXhsYXJcIixcInN5bWJvbFwiOlwiQVVESU5SXCIsXCJwcmljZVwiOlwiNTQuMzZcIixcInByaWNlTnVtYmVyXCI6NTQuMzU2LFwicHJpY2VEYXlMb3dcIjo1NC40MDgsXCJwcmljZURheUhpZ2hcIjo1NC4zNTYsXCJtYXJrZXRDYXBcIjowLjAsXCJwcmljZUNoYW5nZTFNb250aFwiOi0wLjMxLFwicHJpY2U1MndIaWdoXCI6NTcuMjE0LFwicHJpY2U1MndMb3dcIjo1Mi4xMjYsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjo1NC4yODMsXCJjaGFuZ2VWYWx1ZVwiOlwiKzAuMDdcIixcImNoYW5nZVBjbnRcIjpcIiswLjEzJVwiLFwiY2hhbmdlUGNudE51bWJlclwiOjAuMTM0NSxcImNoYW5nZVZhbHVlTnVtYmVyXCI6MC4wNzMsXCJkaXNwbGF5TmFtZVwiOlwiQXVzdHJhbGlhbiBEb2xsYXIvSW5kaWFuIFJ1cGVlXCIsXCJzaG9ydE5hbWVcIjpcIkF1c3RyYWxpYW4gRG9sbGFyL0luZGlhbiBSdXBlZVwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiQ3VycmVuY3lQYWlyXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QyMjowMDowMSswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJGb3JlaWduIEV4Y2hhbmdlIFJhdGVzXCIsXCJleGNoYW5nZUlkXCI6XCJyNmR3cm1cIixcInJldHVybjFZZWFyXCI6LTIuNDk3LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjotNC4xMjIyLFwicmV0dXJuMU1vbnRoXCI6LTAuNTY3MSxcInJldHVybjFEYXlcIjowLjEzNDV9LHtcImN1cnJlbmN5XCI6XCJJTlJcIixcImlkXCI6XCJhdnQ4N3dcIixcInN5bWJvbFwiOlwiU0dESU5SXCIsXCJwcmljZVwiOlwiNjEuNjhcIixcInByaWNlTnVtYmVyXCI6NjEuNjc5LFwicHJpY2VEYXlMb3dcIjowLjAsXCJwcmljZURheUhpZ2hcIjowLjAsXCJtYXJrZXRDYXBcIjowLjAsXCJwcmljZUNoYW5nZTFNb250aFwiOi0wLjM2OCxcInByaWNlNTJ3SGlnaFwiOjYzLjIyOSxcInByaWNlNTJ3TG93XCI6NjAuMzgyLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6NjEuNjcxLFwiY2hhbmdlVmFsdWVcIjpcIiswLjAxXCIsXCJjaGFuZ2VQY250XCI6XCIrMC4wMSVcIixcImNoYW5nZVBjbnROdW1iZXJcIjowLjAxMjk3LFwiY2hhbmdlVmFsdWVOdW1iZXJcIjowLjAwOCxcImRpc3BsYXlOYW1lXCI6XCJTaW5nYXBvcmUgRG9sbGFyL0luZGlhbiBSdXBlZVwiLFwic2hvcnROYW1lXCI6XCJTaW5nYXBvcmUgRG9sbGFyL0luZGlhbiBSdXBlZVwiLFwiZ2FpblwiOnRydWUsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiQ3VycmVuY3lQYWlyXCIsXCJ0aW1lTGFzdFRyYWRlZFwiOlwiMjAyNC0wMi0yM1QyMjowMDowMCswMDowMFwiLFwiZXhjaGFuZ2VOYW1lXCI6XCJGb3JlaWduIEV4Y2hhbmdlIFJhdGVzXCIsXCJleGNoYW5nZUlkXCI6XCJyNmR3cm1cIixcInJldHVybjFZZWFyXCI6MC40NjA5LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjotMi4xNjUyLFwicmV0dXJuMU1vbnRoXCI6LTAuNTkzMSxcInJldHVybjFEYXlcIjowLjAxMjk3fV19LFwiY3J5cHRvXCI6e1wicXVvdGVJZHNcIjpbXCJjMjExMVwiLFwiYzIxMTJcIixcImMyMTEzXCIsXCJjMjExNFwiLFwiYzIxMTdcIl0sXCJxdW90ZUl0ZW1zXCI6W3tcImN1cnJlbmN5XCI6XCJJTlJcIixcImlkXCI6XCJjMjExMVwiLFwic3ltYm9sXCI6XCJCVENcIixcInByaWNlXCI6XCI0LDIyMSwzNTUuOTlcIixcInByaWNlTnVtYmVyXCI6NDIyMTM1NS45OTE2LFwicHJpY2VEYXlMb3dcIjo0MTg5NDk4LjE5NzYsXCJwcmljZURheUhpZ2hcIjo0MjQ5OTEzLjAxNDU0LFwibWFya2V0Q2FwXCI6ODI4OTEyMjk0NzE0MTMuNjksXCJwcmljZUNoYW5nZTFNb250aFwiOjAuMCxcInByaWNlNTJ3SGlnaFwiOjAuMCxcInByaWNlNTJ3TG93XCI6MC4wLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6LTAuNjU1LFwiY2hhbmdlVmFsdWVcIjpcIi0yNyw2NDkuODhcIixcImNoYW5nZVBjbnRcIjpcIi0wLjY2JVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0wLjY1NSxcImNoYW5nZVZhbHVlTnVtYmVyXCI6LTI3NjQ5Ljg4MTc0NDk4LFwiZGlzcGxheU5hbWVcIjpcIkJpdGNvaW5cIixcInNob3J0TmFtZVwiOlwiQml0Y29pblwiLFwiZ2FpblwiOmZhbHNlLFwidW5jaGFuZ2VkXCI6ZmFsc2UsXCJzZWN1cml0eVR5cGVcIjpcIkNyeXB0b2N1cnJlbmN5XCIsXCJleGNoYW5nZU5hbWVcIjpcIi1cIixcImljb25VcmxcIjpcImh0dHBzOi8vYXNzZXRzLm1zbi5jb20vd2VhdGhlcm1hcGRhdGEvMS9zdGF0aWMvZmluYW5jZS9jcnlwdG8vaWNvbnMvQ3J5cHRvYzIxMTFJbWFnZS5wbmdcIixcInJldHVybjFZZWFyXCI6MTE5LjgyOSxcInJldHVybjNZZWFyXCI6MC4wLFwicmV0dXJuWVREXCI6MTguODk5LFwicmV0dXJuMU1vbnRoXCI6MjcuNTA1LFwicmV0dXJuMURheVwiOi0wLjY1NX0se1wiY3VycmVuY3lcIjpcIklOUlwiLFwiaWRcIjpcImMyMTEyXCIsXCJzeW1ib2xcIjpcIkVUSFwiLFwicHJpY2VcIjpcIjI0NCwxNDguNjhcIixcInByaWNlTnVtYmVyXCI6MjQ0MTQ4LjY4MzYsXCJwcmljZURheUxvd1wiOjI0MDgzNi42NDM3LFwicHJpY2VEYXlIaWdoXCI6MjQ1NzAxLjYyNyxcIm1hcmtldENhcFwiOjI5MzM2MDY1MzgxODEyLjMsXCJwcmljZUNoYW5nZTFNb250aFwiOjAuMCxcInByaWNlNTJ3SGlnaFwiOjAuMCxcInByaWNlNTJ3TG93XCI6MC4wLFwicHJpY2VQcmV2aW91c0Nsb3NlXCI6LTAuNTg5LFwiY2hhbmdlVmFsdWVcIjpcIi0xLDQzOC4wNFwiLFwiY2hhbmdlUGNudFwiOlwiLTAuNTklXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6LTAuNTg5LFwiY2hhbmdlVmFsdWVOdW1iZXJcIjotMTQzOC4wMzU3NDY0MDM5OTk4LFwiZGlzcGxheU5hbWVcIjpcIkV0aGVyZXVtXCIsXCJzaG9ydE5hbWVcIjpcIkV0aGVyZXVtXCIsXCJnYWluXCI6ZmFsc2UsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiQ3J5cHRvY3VycmVuY3lcIixcImV4Y2hhbmdlTmFtZVwiOlwiLVwiLFwiaWNvblVybFwiOlwiaHR0cHM6Ly9hc3NldHMubXNuLmNvbS93ZWF0aGVybWFwZGF0YS8xL3N0YXRpYy9maW5hbmNlL2NyeXB0by9pY29ucy9DcnlwdG9jMjExMkltYWdlLnBuZ1wiLFwicmV0dXJuMVllYXJcIjo4NC43NDcsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOjMzLjI4MixcInJldHVybjFNb250aFwiOjMyLjkyNSxcInJldHVybjFEYXlcIjotMC41ODl9LHtcImN1cnJlbmN5XCI6XCJJTlJcIixcImlkXCI6XCJjMjExM1wiLFwic3ltYm9sXCI6XCJCTkJcIixcInByaWNlXCI6XCIzMSw0MTMuNzVcIixcInByaWNlTnVtYmVyXCI6MzE0MTMuNzUyNyxcInByaWNlRGF5TG93XCI6MzA2MDguMTE0NixcInByaWNlRGF5SGlnaFwiOjMxNzM3Ljg4MDUsXCJtYXJrZXRDYXBcIjo0Njk3NzEzODU2NjAwLjI1NCxcInByaWNlQ2hhbmdlMU1vbnRoXCI6MC4wLFwicHJpY2U1MndIaWdoXCI6MC4wLFwicHJpY2U1MndMb3dcIjowLjAsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjotMS4wMzYyLFwiY2hhbmdlVmFsdWVcIjpcIi0zMjUuNTFcIixcImNoYW5nZVBjbnRcIjpcIi0xLjA0JVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0xLjAzNjIsXCJjaGFuZ2VWYWx1ZU51bWJlclwiOi0zMjUuNTA5MzA1NDc3NCxcImRpc3BsYXlOYW1lXCI6XCJCTkJcIixcInNob3J0TmFtZVwiOlwiQk5CXCIsXCJnYWluXCI6ZmFsc2UsXCJ1bmNoYW5nZWRcIjpmYWxzZSxcInNlY3VyaXR5VHlwZVwiOlwiQ3J5cHRvY3VycmVuY3lcIixcImV4Y2hhbmdlTmFtZVwiOlwiLVwiLFwiaWNvblVybFwiOlwiaHR0cHM6Ly9hc3NldHMubXNuLmNvbS93ZWF0aGVybWFwZGF0YS8xL3N0YXRpYy9maW5hbmNlL2NyeXB0by9pY29ucy9DcnlwdG9jMjExM0ltYWdlLnBuZ1wiLFwicmV0dXJuMVllYXJcIjoyNS4zNzgsXCJyZXR1cm4zWWVhclwiOjAuMCxcInJldHVybllURFwiOjE5LjcyNSxcInJldHVybjFNb250aFwiOjMwLjk2OSxcInJldHVybjFEYXlcIjotMS4wMzYyfSx7XCJjdXJyZW5jeVwiOlwiSU5SXCIsXCJpZFwiOlwiYzIxMTRcIixcInN5bWJvbFwiOlwiQURBXCIsXCJwcmljZVwiOlwiNDguMDZcIixcInByaWNlTnVtYmVyXCI6NDguMDU4MjIsXCJwcmljZURheUxvd1wiOjQ3LjIyOTYsXCJwcmljZURheUhpZ2hcIjo0OS4xMzU0LFwibWFya2V0Q2FwXCI6MTcwNTk1MjQ4NDc4My41MSxcInByaWNlQ2hhbmdlMU1vbnRoXCI6MC4wLFwicHJpY2U1MndIaWdoXCI6MC4wLFwicHJpY2U1MndMb3dcIjowLjAsXCJwcmljZVByZXZpb3VzQ2xvc2VcIjotMS42MTgsXCJjaGFuZ2VWYWx1ZVwiOlwiLTAuNzhcIixcImNoYW5nZVBjbnRcIjpcIi0xLjYyJVwiLFwiY2hhbmdlUGNudE51bWJlclwiOi0xLjYxOCxcImNoYW5nZVZhbHVlTnVtYmVyXCI6LTAuNzc3NTgxOTk5NixcImRpc3BsYXlOYW1lXCI6XCJDYXJkYW5vXCIsXCJzaG9ydE5hbWVcIjpcIkNhcmRhbm9cIixcImdhaW5cIjpmYWxzZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJDcnlwdG9jdXJyZW5jeVwiLFwiZXhjaGFuZ2VOYW1lXCI6XCItXCIsXCJpY29uVXJsXCI6XCJodHRwczovL2Fzc2V0cy5tc24uY29tL3dlYXRoZXJtYXBkYXRhLzEvc3RhdGljL2ZpbmFuY2UvY3J5cHRvL2ljb25zL0NyeXB0b2MyMTE0SW1hZ2UucG5nXCIsXCJyZXR1cm4xWWVhclwiOjYwLjA2LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjo0LjA3NixcInJldHVybjFNb250aFwiOjIzLjMzOCxcInJldHVybjFEYXlcIjotMS42MTh9LHtcImN1cnJlbmN5XCI6XCJJTlJcIixcImlkXCI6XCJjMjExN1wiLFwic3ltYm9sXCI6XCJYUlBcIixcInByaWNlXCI6XCI0NC44M1wiLFwicHJpY2VOdW1iZXJcIjo0NC44MjY3LFwicHJpY2VEYXlMb3dcIjo0My42NjY3LFwicHJpY2VEYXlIaWdoXCI6NDQuODI2NyxcIm1hcmtldENhcFwiOjI0NDczMTI1MjQ2ODguMzYyLFwicHJpY2VDaGFuZ2UxTW9udGhcIjowLjAsXCJwcmljZTUyd0hpZ2hcIjowLjAsXCJwcmljZTUyd0xvd1wiOjAuMCxcInByaWNlUHJldmlvdXNDbG9zZVwiOjAuMSxcImNoYW5nZVZhbHVlXCI6XCIrMC4wNFwiLFwiY2hhbmdlUGNudFwiOlwiKzAuMTAlXCIsXCJjaGFuZ2VQY250TnVtYmVyXCI6MC4xLFwiY2hhbmdlVmFsdWVOdW1iZXJcIjowLjA0NDgyNjcwMDAwMDAwMDAwNCxcImRpc3BsYXlOYW1lXCI6XCJYUlBcIixcInNob3J0TmFtZVwiOlwiWFJQXCIsXCJnYWluXCI6dHJ1ZSxcInVuY2hhbmdlZFwiOmZhbHNlLFwic2VjdXJpdHlUeXBlXCI6XCJDcnlwdG9jdXJyZW5jeVwiLFwiZXhjaGFuZ2VOYW1lXCI6XCItXCIsXCJpY29uVXJsXCI6XCJodHRwczovL2Fzc2V0cy5tc24uY29tL3dlYXRoZXJtYXBkYXRhLzEvc3RhdGljL2ZpbmFuY2UvY3J5cHRvL2ljb25zL0NyeXB0b2MyMTE3SW1hZ2UucG5nXCIsXCJyZXR1cm4xWWVhclwiOjQzLjA5LFwicmV0dXJuM1llYXJcIjowLjAsXCJyZXR1cm5ZVERcIjotNy4xMzcsXCJyZXR1cm4xTW9udGhcIjo1Ljk1LFwicmV0dXJuMURheVwiOjAuMX1dfX0sXCJpc1VzZXJJbnRlcmVzdGVkSW5OZXdzXCI6ZmFsc2UsXCJ0YXNrYmFyRXZlbnROb3RpZmljYXRpb25cIjpmYWxzZSxcIm5vbldhdGNobGlzdE5vdGlmaWNhdGlvblwiOmZhbHNlLFwidXNlckdyb3VwXCI6XCJTdG9ja1VzZXJcIixcImRpc2FibGVTcG90bGlnaHRcIjpmYWxzZSxcInRyYWNlSW5mb1wiOntcInVzZXJJZFwiOlwibS0zRkIyODhBNzdEN0U2RkMxM0EzNzlBMTA3QzJDNkUzM1wiLFwidHJhY2VJZFwiOlwiMDMyNjgzNTctQjhGRC00OEFELUE4OUYtOUQyMDQ4RDZCMUJCXCIsXCJpc1NpZ25lZEluXCI6ZmFsc2UsXCJzaWduSW5UeXBlXCI6XCJVbmtub3duXCJ9fSIsImRhdGFUeXBlIjoiTW9uZXlJbmZvIiwiZGF0YVZlcnNpb24iOjEsImNhcmRJZCI6NTYsIndwb01ldGFkYXRhIjp7ImlzR0EiOnRydWUsImNmSWQiOiIwMDAxMyIsImNhcmRQbGFjZW1lbnRSdWxlIjoibm9uZSJ9fSx7ImlkIjoiQkIxaUxyN3QiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiJ01pbmQtYmxvd2luZycgZGVlcCBzZWEgZXhwZWRpdGlvbiB1bmNvdmVycyBtb3JlIHRoYW4gMTAwIG5ldmVyLWJlZm9yZS1zZWVuIHNwZWNpZXMgYW5kIGEgaHVnZSB1bmRlcndhdGVyIG1vdW50YWluIG9mZiB0aGUgY29hc3Qgb2YgQ2hpbGUiLCJhYnN0cmFjdCI6IlNjaWVudGlzdHMgZXhwbG9yaW5nIHRoZSB3YXRlcnMgb2ZmIHRoZSBjb2FzdCBvZiBDaGlsZSBoYXZlIGRpc2NvdmVyZWQgYSBodWdlIHVuZGVyd2F0ZXIgbW91bnRhaW4gdGhhdCdzIGhvbWUgdG8gYSByYW5nZSBvZiB3ZWlyZCBhbmQgd29uZGVyZnVsIGNyZWF0dXJlcy4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9uZXdzL3dvcmxkL21pbmQtYmxvd2luZy1kZWVwLXNlYS1leHBlZGl0aW9uLXVuY292ZXJzLW1vcmUtdGhhbi0xMDAtbmV2ZXItYmVmb3JlLXNlZW4tc3BlY2llcy1hbmQtYS1odWdlLXVuZGVyd2F0ZXItbW91bnRhaW4tb2ZmLXRoZS1jb2FzdC1vZi1jaGlsZS9hci1CQjFpTHI3dCIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMTE6MjU6MTZaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE5MDgsImhlaWdodCI6MTE0NiwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLjY2Njc4N2ZhYjk3NWE2Y2ZhYWVkZmQ4Yzg5MmZlOTE2JnBpZD1XZHAiLCJ0aXRsZSI6Ik1haWxPbmxpbmUgbG9nbyIsImNhcHRpb24iOiJNYWlsT25saW5lIGxvZ28iLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzUxMjZCMCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDhEN0U4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM1MTI2QjAiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q4RDdFOCIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBdXlSNVgiLCJuYW1lIjoiRGFpbHkgTWFpbCIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBdmNTNkQuaW1nIiwicHJvZmlsZUlkIjoidmlkLXRubmh4ZjNzNGlzcnN5YjBieHQwMjQ3amVxZzBhZzZ2eWM4MHA3YWVzM2ZtYWhidmNzdmEifSwiY2F0ZWdvcnkiOiJuZXdzIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjE3LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MTYsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjEsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV8yMWI5MzRjYS05NjY2LTRlYmEtYWI3ZC1kMTgwNjEzNTljZTgiLCJmZWVkTmFtZSI6IlRyYXZlbCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjIzLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJ1MlUiLCJyYW5rIjowfV0sInJpIjoiMjA4LDIwOSIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IlJlc2VhcmNoZXJzIGZyb20gdGhlICoqKlNjaG1pZHQgT2NlYW4gSW5zdGl0dXRlKioqIGhhdmUgZGlzY292ZXJlZCBhICoqaHVnZSB1bmRlcndhdGVyIG1vdW50YWluKiogb2ZmIHRoZSBjb2FzdCBvZiBDaGlsZSB0aGF0IGhvc3RzIGEgZGl2ZXJzZSByYW5nZSBvZiAqKm5ldyBzcGVjaWVzKiouIFRoZXkgdXNlZCBhbiAqKnVuZGVyd2F0ZXIgcm9ib3QqKiB0byBtYXAgKio1Miw3Nzcgc3F1YXJlIGtpbG9tZXRyZXMqKiBvZiB0aGUgc2VhZmxvb3IsIGZpbmRpbmcgKipmb3VyIG5ldyBzZWFtb3VudHMqKiB3aXRoIHRoZWlyIG93biBlY29zeXN0ZW1zLiBUaGUgdGFsbGVzdCBzZWFtb3VudCwgbmFtZWQgKipTb2xpdG8qKiwgaXMgKiozLDUzMCBtZXRyZXMqKiBoaWdoLCBtb3JlIHRoYW4gZm91ciB0aW1lcyB0aGUgaGVpZ2h0IG9mIHRoZSB3b3JsZCdzIHRhbGxlc3QgYnVpbGRpbmcuIFRoZSByZXNlYXJjaGVycyBjYXB0dXJlZCBpbWFnZXMgb2YgKipkZWVwLXNlYSBjb3JhbHMsIGxvYnN0ZXJzLCBzcXVpZHMsIHNwb25nZXMsIGFuZCBvdGhlciBjcmVhdHVyZXMqKiBvbiB0aGUgc2VhbW91bnRzLCBzb21lIG9mIHdoaWNoIGhhdmUgbm90IGJlZW4gc2VlbiBiZWZvcmUuIFRoZSBuZXcgc3BlY2llcyB3aWxsIGJlIGZvcm1hbGx5IGlkZW50aWZpZWQgYW5kIGFkZGVkIHRvIHRoZSAqKk5pcHBvbiBGb3VuZGF0aW9uIOKAkyBOZWt0b24gT2NlYW4gQ2Vuc3VzIFByb2dyYW0ncyoqIGdvYWwgb2YgZmluZGluZyAqKjEwMCwwMDAgbmV3IG1hcmluZSBzcGVjaWVzKiogaW4gdGhlIG5leHQgdGVuIHllYXJzLiAiLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaUpvYUoiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiS3VuYWwgS2VtbXUgYWRtaXRzIGhlIGZlbHQgbGlrZSBoaXR0aW5nIHNvbWVvbmUgd2hpbGUgd2F0Y2hpbmcgUmFuYmlyIEthcG9vcidzIEFuaW1hbDogJ011bm5hIEJoYWkgMiBkZWtoIGtlIEdhbmRoaWdpcmkgYmhpIHNpa2ggbG8nIiwiYWJzdHJhY3QiOiJLdW5hbCBLZW1tdSBhZG1pdHRlZCBldmVuIGhlIGZlbHQgbGlrZSBoaXR0aW5nIHNvbWVvbmUgd2hpbGUgaGUgd2FzIHdhdGNoaW5nIHRoZSBTYW5kZWVwIFJlZGR5IFZhbmdhIGRpcmVjdG9yaWFsIEFuaW1hbCBzdGFycmluZyBSYW5iaXIgS2Fwb29yIGJlY2F1c2UgdGhpcyBpcyB0aGUgaW1wYWN0IG9mIGNpbmVtYSBpbiBldm9raW5nIHN0cm9uZyBlbW90aW9ucy4gSGUgdXJnZWQgdmlld2VycyB0byBiZWNvbWUgJ2FscGhhJyBpbiB0aGUgdHJ1ZSBzZW5zZSBieSBlbWJyYWNpbmcgbm9uLXZpb2xlbmNlIGFuZCBlbXBhdGh5LiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2VudGVydGFpbm1lbnQvYm9sbHl3b29kL2t1bmFsLWtlbW11LWFkbWl0cy1oZS1mZWx0LWxpa2UtaGl0dGluZy1zb21lb25lLXdoaWxlLXdhdGNoaW5nLXJhbmJpci1rYXBvb3Itcy1hbmltYWwtbXVubmEtYmhhaS0yLWRla2gta2UtZ2FuZGhpZ2lyaS1iaGktc2lraC1sby9hci1CQjFpSm9hSiIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjJUMjE6MzI6MDBaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjEyODAsImhlaWdodCI6NzIwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuZTdjY2IzNWI0ZDJlNjJmNjFkZmYwM2Q4NDRkN2NmMDEmcGlkPVdkcCIsInRpdGxlIjoiS3VuYWwgS2VtbXUgYWRtaXRzIGhlIGZlbHQgbGlrZSBoaXR0aW5nIHNvbWVvbmUgd2hpbGUgd2F0Y2hpbmcgUmFuYmlyIEthcG9vcidzIEFuaW1hbDogJ011bm5hIEJoYWkgMiBkZWtoIGtlIEdhbmRoaWdpcmkgYmhpIHNpa2ggbG8nIiwiZm9jYWxSZWdpb24iOnsieDEiOjIyMSwieDIiOjEwNDUsInkxIjoxMTAsInkyIjozMDF9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzMyNDE1MSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDhEOEQ3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzMjQxNTEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q4RDhENyIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkJCMThTQnQ5IiwibmFtZSI6IlRoZSBUaW1lcyBvZiBJbmRpYSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWFpYXk1LmltZyIsInByb2ZpbGVJZCI6InZpZC1rYmowZThpMjVrdzRydHlqbmFiaG1xbWdzYjZjcDN5cmFiZzZtYXcwdHd1cGI3czI5Z2dhIn0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2I0NTkyMTcyLTI3YjgtNDk1NS1hMTY5LTAyYThhMTM0YjUyZSIsImZlZWROYW1lIjoiRW50ZXJ0YWlubWVudCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjI0LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6IkVudGVydGFpbm1lbnQiLCJ0aW1lIjoiIn19XSwicmkiOiIyMDQsMjQyIiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiKipLdW5hbCBLZW1tdSdzIHZpZXdzIG9uIGFscGhhIG1hbGUgaGVyb2VzKio6IFRoZSBhY3RvciBxdWVzdGlvbmVkIHRoZSBnbG9yaWZpY2F0aW9uIG9mIHZpb2xlbnQgYW5kIGFnZ3Jlc3NpdmUgY2hhcmFjdGVycyBpbiBmaWxtcyBsaWtlIEthYmlyIFNpbmdoIGFuZCBBbmltYWwuIEhlIGFkdmlzZWQgdmlld2VycyB0byBiZSBzZW5zaWJsZSBhbmQgZW1wYXRoZXRpYywgYW5kIG5vdCB0byB0YWtlIHN1Y2ggcG9ydHJheWFscyBzZXJpb3VzbHkuXG5cbioqU2FuZGVlcCBSZWRkeSBWYW5nYSdzIHN1Y2Nlc3Mgd2l0aCBBbmltYWwqKjogVGhlIGRpcmVjdG9yIHdvbiB0aGUgQmVzdCBEaXJlY3RvciBhd2FyZCBmb3IgaGlzIGZpbG0gQW5pbWFsLCB3aGljaCBzdGFycmVkIFJhbmJpciBLYXBvb3IgYW5kIEJvYmJ5IERlb2wuIFRoZSBmaWxtIHdhcyBhIGh1Z2UgaGl0LCBlYXJuaW5nIFJzIDkwMCBjcm9yZSB3b3JsZHdpZGUuIEJvYmJ5IERlb2wgYWxzbyB3b24gdGhlIEJlc3QgQWN0b3IgaW4gYSBOZWdhdGl2ZSBSb2xlIGF3YXJkIGZvciBoaXMgcm9sZSBhcyBBYnJhci4gIiwiaW5kZXgiOjB9XX0seyJ0eXBlIjoibmF0aXZlYWQiLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjB9LHsidHlwZSI6IlRyYXZlbERlc3RpbmF0aW9uQ2FyZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicG9zaXRpb24iOjAsImRhdGEiOiJ7XCJUaGVtZUNhcmRzXCI6W3tcIlRpdGxlXCI6XCJTaG9wIGF0IHRoZSBiZXN0IHJldGFpbCBkZXN0aW5hdGlvbnMgYXJvdW5kIHRoZSB3b3JsZFwiLFwiVGhlbWVcIjp7XCJOYW1lXCI6XCJUcmF2ZWwgaWRlYXNcIixcIklkXCI6MjQsXCJJY29uXCI6e1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQUYzMjNEMkZCQzU1MDMyMzBGRDhCNEI5NTdCRTU1NTdcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiXCIsXCJUZXh0Q29sb3JcIjpcIlwifX0sXCJJbWFnZXNcIjpbe1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuODM1OTIyQjMyMzg2MEI2RjE3OUFEMUNBNUNCNkREQzZcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiIzU1NEU0MlwiLFwiVGV4dENvbG9yXCI6XCIjRkZGRkZGXCJ9LHtcIlRodW1ibmFpbElkXCI6XCJPU0dJLjNFNzIyRDEyMTFGQjg2MEQzQ0ExQzc3RTkyNEQyNjI1XCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiNEQkQ3RDhcIixcIlRleHRDb2xvclwiOlwiIzAwMDAwMFwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS5GQzgzNkQ3REYxM0ZFMUVBOENFRTEzRjFGMDQ3Q0Q4N1wiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjNTg1MzJFXCIsXCJUZXh0Q29sb3JcIjpcIiNGRkZGRkZcIn1dLFwiQ2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3RyYXZlbC9wbGFjZS1zZWFyY2g/dGFncz1TaG9wcGluZyZzaWQ9YmU0OTVlMjEtOGUzNi1hNjRkLWQ4N2EtMzUwYmEwNTk5NmViJnRpdGxlbmFtZT1TaG9wIGF0IHRoZSBiZXN0IHJldGFpbCBkZXN0aW5hdGlvbnMgYXJvdW5kIHRoZSB3b3JsZCZ0aXRsZWlkPTEmY291bnQ9MTAmdGhlbWVpZD10b3BEZXN0XzNDRjBCMjFGMjI5QTREQkE1OThENDFBRTk0NkMwNjRCJmZvcm09QU5OVDAwXCIsXCJEZXN0aW5hdGlvbnNcIjpbXSxcIlNjb3JlXCI6MC4wLFwiTWV0YURhdGFcIjp7fSxcIlRlbGVtZXRyeVwiOntcIlBTTl9Jc1BlcnNvbmFsaXplZFwiOlwiRmFsc2VcIixcIlBTTl9TY29yZVwiOlwiMFwiLFwiUFNOX1RoZW1lSWRcIjpcInRvcERlc3RfM0NGMEIyMUYyMjlBNERCQTU5OEQ0MUFFOTQ2QzA2NEJcIixcIlBTTl9UaXRsZUlkXCI6XCIxXCIsXCJQU05fSW1hZ2VcIjpcIk9TR0kuODM1OTIyQjMyMzg2MEI2RjE3OUFEMUNBNUNCNkREQzZcIixcIlBTTl9Tb3VyY2VcIjpcIlwifSxcIlJlZ2lvblwiOlwiXCIsXCJDYXJkSWRcIjpcInRvcERlc3RfM0NGMEIyMUYyMjlBNERCQTU5OEQ0MUFFOTQ2QzA2NEJcIixcIlR5cGVcIjpcIlwiLFwiU2NlbmFyaW9cIjpcIlwifSx7XCJUaXRsZVwiOlwiSWYgeW91IGxvdmUgZm9vZCwgdGhlc2UgMTAgSW5kaWEgZGVzdGluYXRpb25zIGFyZSBmb3IgeW91XCIsXCJUaGVtZVwiOntcIk5hbWVcIjpcIkZvb2QgYW5kIERyaW5rXCIsXCJJZFwiOjcsXCJJY29uXCI6e1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQUYzMjNEMkZCQzU1MDMyMzBGRDhCNEI5NTdCRTU1NTdcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiXCIsXCJUZXh0Q29sb3JcIjpcIlwifX0sXCJJbWFnZXNcIjpbe1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuNDUwRDUzRDZERTkxMzVCQ0M5NjdEMDBEMDlDQkQ3RDhcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiIzM3MkEyRVwiLFwiVGV4dENvbG9yXCI6XCIjRkZGRkZGXCJ9LHtcIlRodW1ibmFpbElkXCI6XCJPU0dJLjc2NDVDOTVEMEI3NkVDQTVDMjkxRTZEMDVBQ0NENjRDXCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiM2MDUxM0VcIixcIlRleHRDb2xvclwiOlwiI0ZGRkZGRlwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS4xOTFBQzdCMjE1QTIxQjBERDY3MDczMUExOUI0Mjg1QlwiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjNDUyQTMzXCIsXCJUZXh0Q29sb3JcIjpcIiNGRkZGRkZcIn1dLFwiQ2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3RyYXZlbC9wbGFjZS1zZWFyY2g/cT1Gb29kQW5kRHJpbmtfSW5kaWEmdGFncz1Gb29kQW5kRHJpbmsmY291bnRyeT1JbmRpYSZjb250aW5lbnQ9QXNpYSZzaWQ9ZWE3ZGRlZWYtMmY1YS02OTFlLWQ0MGYtMGY1MDFiYTc4MWNkJnRpdGxlbmFtZT1JZiB5b3UgbG92ZSBmb29kLCB0aGVzZSAxMCBJbmRpYSBkZXN0aW5hdGlvbnMgYXJlIGZvciB5b3UmdGl0bGVpZD0xJnJlZ2lvbj1JbmRpYSZjb3VudD0xMCZ0aGVtZWlkPXRvcERlc3RfQzBDRkIzRkZFOTc1NzUwRjQ3NzIzRTk2NzM5NDYyNDQmZm9ybT1BTk5UMDBcIixcIkRlc3RpbmF0aW9uc1wiOltdLFwiU2NvcmVcIjowLjAsXCJNZXRhRGF0YVwiOnt9LFwiVGVsZW1ldHJ5XCI6e1wiUFNOX0lzUGVyc29uYWxpemVkXCI6XCJGYWxzZVwiLFwiUFNOX1Njb3JlXCI6XCIwXCIsXCJQU05fVGhlbWVJZFwiOlwidG9wRGVzdF9DMENGQjNGRkU5NzU3NTBGNDc3MjNFOTY3Mzk0NjI0NFwiLFwiUFNOX1RpdGxlSWRcIjpcIjFcIixcIlBTTl9JbWFnZVwiOlwiT1NHSS40NTBENTNENkRFOTEzNUJDQzk2N0QwMEQwOUNCRDdEOFwiLFwiUFNOX1NvdXJjZVwiOlwiXCJ9LFwiUmVnaW9uXCI6XCJJbmRpYVwiLFwiQ2FyZElkXCI6XCJ0b3BEZXN0X0MwQ0ZCM0ZGRTk3NTc1MEY0NzcyM0U5NjczOTQ2MjQ0XCIsXCJUeXBlXCI6XCJcIixcIlNjZW5hcmlvXCI6XCJcIn0se1wiVGl0bGVcIjpcIjEwIGJlc3Qgd2ludGVyIGV4cGVyaWVuY2VzIGluIEV1cm9wZVwiLFwiVGhlbWVcIjp7XCJOYW1lXCI6XCJXaW50ZXJcIixcIklkXCI6MTYsXCJJY29uXCI6e1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQUYzMjNEMkZCQzU1MDMyMzBGRDhCNEI5NTdCRTU1NTdcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiXCIsXCJUZXh0Q29sb3JcIjpcIlwifX0sXCJJbWFnZXNcIjpbe1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQkZGQzY0NjVFNTQ4NjAyRTZFQUVDRTA1OTUyRjdFNTRcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiI0RBRDhEOVwiLFwiVGV4dENvbG9yXCI6XCIjMDAwMDAwXCJ9LHtcIlRodW1ibmFpbElkXCI6XCJPU0dJLjZGRTU4Njc1Q0EwN0MxQzc0RkMwNzAxRjY0QzM2MUM4XCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiNEQUQ4RDlcIixcIlRleHRDb2xvclwiOlwiIzAwMDAwMFwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS5BMUY2RjQwRjY4N0Y4RDM3MUU4QTgzN0E1QTMyQUZFMFwiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjREFEOEQ5XCIsXCJUZXh0Q29sb3JcIjpcIiMwMDAwMDBcIn1dLFwiQ2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3RyYXZlbC9wbGFjZS1zZWFyY2g/cT1XaW50ZXJfRXVyb3BlJnRhZ3M9V2ludGVyJmNvbnRpbmVudD1FdXJvcGUmc2lkPTg3OWYxMTdlLTEzMjYtOGY1OS1kMjllLTJhMWE2MzA0ODRhYiZ0aXRsZW5hbWU9MTAgYmVzdCB3aW50ZXIgZXhwZXJpZW5jZXMgaW4gRXVyb3BlJnRpdGxlaWQ9MiZyZWdpb249RXVyb3BlJmNvdW50PTEwJnRoZW1laWQ9dG9wRGVzdF83REM5MjUwRDU3MDQzODEwOUExMTkyMkFBRkYwRTUwQiZmb3JtPUFOTlQwMFwiLFwiRGVzdGluYXRpb25zXCI6W10sXCJTY29yZVwiOjAuMCxcIk1ldGFEYXRhXCI6e30sXCJUZWxlbWV0cnlcIjp7XCJQU05fSXNQZXJzb25hbGl6ZWRcIjpcIkZhbHNlXCIsXCJQU05fU2NvcmVcIjpcIjBcIixcIlBTTl9UaGVtZUlkXCI6XCJ0b3BEZXN0XzdEQzkyNTBENTcwNDM4MTA5QTExOTIyQUFGRjBFNTBCXCIsXCJQU05fVGl0bGVJZFwiOlwiMlwiLFwiUFNOX0ltYWdlXCI6XCJPU0dJLkJGRkM2NDY1RTU0ODYwMkU2RUFFQ0UwNTk1MkY3RTU0XCIsXCJQU05fU291cmNlXCI6XCJcIn0sXCJSZWdpb25cIjpcIkV1cm9wZVwiLFwiQ2FyZElkXCI6XCJ0b3BEZXN0XzdEQzkyNTBENTcwNDM4MTA5QTExOTIyQUFGRjBFNTBCXCIsXCJUeXBlXCI6XCJcIixcIlNjZW5hcmlvXCI6XCJcIn0se1wiVGl0bGVcIjpcIlRyYXZlbGluZyBzb2xvIGluIEFzaWE/IENoZWNrIG91dCB0aGVzZSBtdXN0LXNlZSBzcG90c1wiLFwiVGhlbWVcIjp7XCJOYW1lXCI6XCJTb2xvXCIsXCJJZFwiOjE4LFwiSWNvblwiOntcIlRodW1ibmFpbElkXCI6XCJPU0dJLkFGMzIzRDJGQkM1NTAzMjMwRkQ4QjRCOTU3QkU1NTU3XCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIlwiLFwiVGV4dENvbG9yXCI6XCJcIn19LFwiSW1hZ2VzXCI6W3tcIlRodW1ibmFpbElkXCI6XCJPU0dJLjUxQzIzOUM0QzkwNDhDMkMwMjgwMzcxQjVCQ0U3MDEzXCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiNDQ0RDRTZcIixcIlRleHRDb2xvclwiOlwiIzAwMDAwMFwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS4xRTY5RDdFNTEzNTgwNTdDNDc2MTVCRUI4NDI3MDdBRFwiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjQzNENkREXCIsXCJUZXh0Q29sb3JcIjpcIiMwMDAwMDBcIn0se1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuRjU0QTUzMTAwRkIwODkzRkE1NUQ2N0I3MjBDQTg5NkVcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiI0MzRDZERFwiLFwiVGV4dENvbG9yXCI6XCIjMDAwMDAwXCJ9XSxcIkNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS90cmF2ZWwvcGxhY2Utc2VhcmNoP3E9U29sb1RyYXZlbGxlcl9Bc2lhJnRhZ3M9U29sb1RyYXZlbGxlciZjb250aW5lbnQ9QXNpYSZzaWQ9YTQ3YzI0ODQtMjdiMi02MGQxLWU4MTAtZjcxYWNmNzc3M2YyJnRpdGxlbmFtZT1UcmF2ZWxpbmcgc29sbyBpbiBBc2lhPyBDaGVjayBvdXQgdGhlc2UgbXVzdC1zZWUgc3BvdHMmdGl0bGVpZD0xJnJlZ2lvbj1Bc2lhJmNvdW50PTEwJnRoZW1laWQ9dG9wRGVzdF8wMkI3OTI3RUJEQkJCQ0IyMEQ4REU4N0IxNUM2QTI3QyZmb3JtPUFOTlQwMFwiLFwiRGVzdGluYXRpb25zXCI6W10sXCJTY29yZVwiOjAuMCxcIk1ldGFEYXRhXCI6e30sXCJUZWxlbWV0cnlcIjp7XCJQU05fSXNQZXJzb25hbGl6ZWRcIjpcIkZhbHNlXCIsXCJQU05fU2NvcmVcIjpcIjBcIixcIlBTTl9UaGVtZUlkXCI6XCJ0b3BEZXN0XzAyQjc5MjdFQkRCQkJDQjIwRDhERTg3QjE1QzZBMjdDXCIsXCJQU05fVGl0bGVJZFwiOlwiMVwiLFwiUFNOX0ltYWdlXCI6XCJPU0dJLjUxQzIzOUM0QzkwNDhDMkMwMjgwMzcxQjVCQ0U3MDEzXCIsXCJQU05fU291cmNlXCI6XCJcIn0sXCJSZWdpb25cIjpcIkFzaWFcIixcIkNhcmRJZFwiOlwidG9wRGVzdF8wMkI3OTI3RUJEQkJCQ0IyMEQ4REU4N0IxNUM2QTI3Q1wiLFwiVHlwZVwiOlwiXCIsXCJTY2VuYXJpb1wiOlwiXCJ9LHtcIlRpdGxlXCI6XCJDdWx0dXJhbCBUb3VyaXNtOiAxMCBiZXN0IGRlc3RpbmF0aW9ucyBpbiBJbmRpYVwiLFwiVGhlbWVcIjp7XCJOYW1lXCI6XCJBcnRzIGFuZCBjdWx0dXJlXCIsXCJJZFwiOjIsXCJJY29uXCI6e1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQUYzMjNEMkZCQzU1MDMyMzBGRDhCNEI5NTdCRTU1NTdcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiXCIsXCJUZXh0Q29sb3JcIjpcIlwifX0sXCJJbWFnZXNcIjpbe1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuMDc4OEE5MzNEOEM4NDJGNTE1OTRDQTQ1RDk0RTI3NDVcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiI0ZDRTdDQlwiLFwiVGV4dENvbG9yXCI6XCIjMDAwMDAwXCJ9LHtcIlRodW1ibmFpbElkXCI6XCJPU0dJLjA3ODhBOTMzRDhDODQyRjUxNTk0Q0E0NUQ5NEUyNzQ1XCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiNGQ0U3Q0JcIixcIlRleHRDb2xvclwiOlwiIzAwMDAwMFwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS4wNzg4QTkzM0Q4Qzg0MkY1MTU5NENBNDVEOTRFMjc0NVwiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjRkNFN0NCXCIsXCJUZXh0Q29sb3JcIjpcIiMwMDAwMDBcIn1dLFwiQ2xpY2tVcmxcIjpcImh0dHBzOi8vd3d3LmJpbmcuY29tL3RyYXZlbC9wbGFjZS1zZWFyY2g/cT1BcnRBbmRDdWx0dXJlX0luZGlhJnRhZ3M9QXJ0QW5kQ3VsdHVyZSZjb3VudHJ5PUluZGlhJmNvbnRpbmVudD1Bc2lhJnNpZD02NGFkMWRlNC0zZTZkLWFlZGUtNjkwOS0wMGQzZTM3ZjkyZDcmdGl0bGVuYW1lPUN1bHR1cmFsIFRvdXJpc206IDEwIGJlc3QgZGVzdGluYXRpb25zIGluIEluZGlhJnRpdGxlaWQ9MyZyZWdpb249SW5kaWEmY291bnQ9MTAmdGhlbWVpZD10b3BEZXN0XzUwODcyRkExNEVBRjY4QkU2RDU1QTFDNzgxMkE5NUZFJmZvcm09QU5OVDAwXCIsXCJEZXN0aW5hdGlvbnNcIjpbXSxcIlNjb3JlXCI6MC4wLFwiTWV0YURhdGFcIjp7fSxcIlRlbGVtZXRyeVwiOntcIlBTTl9Jc1BlcnNvbmFsaXplZFwiOlwiRmFsc2VcIixcIlBTTl9TY29yZVwiOlwiMFwiLFwiUFNOX1RoZW1lSWRcIjpcInRvcERlc3RfNTA4NzJGQTE0RUFGNjhCRTZENTVBMUM3ODEyQTk1RkVcIixcIlBTTl9UaXRsZUlkXCI6XCIzXCIsXCJQU05fSW1hZ2VcIjpcIk9TR0kuMDc4OEE5MzNEOEM4NDJGNTE1OTRDQTQ1RDk0RTI3NDVcIixcIlBTTl9Tb3VyY2VcIjpcIlwifSxcIlJlZ2lvblwiOlwiSW5kaWFcIixcIkNhcmRJZFwiOlwidG9wRGVzdF81MDg3MkZBMTRFQUY2OEJFNkQ1NUExQzc4MTJBOTVGRVwiLFwiVHlwZVwiOlwiXCIsXCJTY2VuYXJpb1wiOlwiXCJ9LHtcIlRpdGxlXCI6XCJCZXN0IHNwb3RzIGZvciBzYW5kIGFuZCBzdW5cIixcIlRoZW1lXCI6e1wiTmFtZVwiOlwiQmVhY2hlc1wiLFwiSWRcIjozLFwiSWNvblwiOntcIlRodW1ibmFpbElkXCI6XCJPU0dJLkFGMzIzRDJGQkM1NTAzMjMwRkQ4QjRCOTU3QkU1NTU3XCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIlwiLFwiVGV4dENvbG9yXCI6XCJcIn19LFwiSW1hZ2VzXCI6W3tcIlRodW1ibmFpbElkXCI6XCJPU0dJLjdERDA5MkZCQjgyNEVEM0E1REUzMzBBMTFBRjlDQkMzXCIsXCJUaHVtYm5haWxXaWR0aFwiOm51bGwsXCJUaHVtYm5haWxIZWlnaHRcIjpudWxsLFwiU291cmNlVXJsXCI6XCJcIixcIkF0dHJpYnV0aW9uXCI6XCJcIixcIkRvbWluYW50Q29sb3JcIjpcIiNCNUQ5RkZcIixcIlRleHRDb2xvclwiOlwiIzAwMDAwMFwifSx7XCJUaHVtYm5haWxJZFwiOlwiT1NHSS5CMTIzNjFGM0UzQjIzRTFDNEUxNzJFNjY3RjA4RDNBNFwiLFwiVGh1bWJuYWlsV2lkdGhcIjpudWxsLFwiVGh1bWJuYWlsSGVpZ2h0XCI6bnVsbCxcIlNvdXJjZVVybFwiOlwiXCIsXCJBdHRyaWJ1dGlvblwiOlwiXCIsXCJEb21pbmFudENvbG9yXCI6XCIjRENEQ0Q0XCIsXCJUZXh0Q29sb3JcIjpcIiMwMDAwMDBcIn0se1wiVGh1bWJuYWlsSWRcIjpcIk9TR0kuQUJFMkNBMEEwQkM5MkM5QzhGMTAwRjFFNkQyMDE2RTJcIixcIlRodW1ibmFpbFdpZHRoXCI6bnVsbCxcIlRodW1ibmFpbEhlaWdodFwiOm51bGwsXCJTb3VyY2VVcmxcIjpcIlwiLFwiQXR0cmlidXRpb25cIjpcIlwiLFwiRG9taW5hbnRDb2xvclwiOlwiIzMxNTY3OVwiLFwiVGV4dENvbG9yXCI6XCIjRkZGRkZGXCJ9XSxcIkNsaWNrVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS90cmF2ZWwvcGxhY2Utc2VhcmNoP3RhZ3M9QmVhY2hlcyZzaWQ9YTQ3YzI0ODQtMjdiMi02MGQxLWU4MTAtZjcxYWNmNzc3M2YyJnRpdGxlbmFtZT1CZXN0IHNwb3RzIGZvciBzYW5kIGFuZCBzdW4mdGl0bGVpZD0xJmNvdW50PTEwJnRoZW1laWQ9dG9wRGVzdF8zOUE3RUFGRDU5QTk1QkE2RjlEN0RGN0QyQ0JFMEJENSZmb3JtPUFOTlQwMFwiLFwiRGVzdGluYXRpb25zXCI6W10sXCJTY29yZVwiOjAuMCxcIk1ldGFEYXRhXCI6e30sXCJUZWxlbWV0cnlcIjp7XCJQU05fSXNQZXJzb25hbGl6ZWRcIjpcIkZhbHNlXCIsXCJQU05fU2NvcmVcIjpcIjBcIixcIlBTTl9UaGVtZUlkXCI6XCJ0b3BEZXN0XzM5QTdFQUZENTlBOTVCQTZGOUQ3REY3RDJDQkUwQkQ1XCIsXCJQU05fVGl0bGVJZFwiOlwiMVwiLFwiUFNOX0ltYWdlXCI6XCJPU0dJLjdERDA5MkZCQjgyNEVEM0E1REUzMzBBMTFBRjlDQkMzXCIsXCJQU05fU291cmNlXCI6XCJcIn0sXCJSZWdpb25cIjpcIlwiLFwiQ2FyZElkXCI6XCJ0b3BEZXN0XzM5QTdFQUZENTlBOTVCQTZGOUQ3REY3RDJDQkUwQkQ1XCIsXCJUeXBlXCI6XCJcIixcIlNjZW5hcmlvXCI6XCJcIn1dLFwiTWV0YURhdGFcIjp7XCJzY2VuYXJpb1wiOlwiVGhlbWVDYXJkTGlzdFwiLFwiSHViVXJsXCI6XCJodHRwczovL3d3dy5iaW5nLmNvbS90cmF2ZWwvPyZmb3JtPUFOTlQwMFwifSxcIlRlbGVtZXRyeVwiOntcIlBTTl9Jc1BlcnNvbmFsaXplZFwiOlwiRmFsc2VcIixcIlBTTl9TY29yZVwiOlwiMFwiLFwiUFNOX1RoZW1lSWRcIjpcInRvcERlc3RfM0NGMEIyMUYyMjlBNERCQTU5OEQ0MUFFOTQ2QzA2NEIsdG9wRGVzdF9DMENGQjNGRkU5NzU3NTBGNDc3MjNFOTY3Mzk0NjI0NCx0b3BEZXN0XzdEQzkyNTBENTcwNDM4MTA5QTExOTIyQUFGRjBFNTBCLHRvcERlc3RfMDJCNzkyN0VCREJCQkNCMjBEOERFODdCMTVDNkEyN0MsdG9wRGVzdF81MDg3MkZBMTRFQUY2OEJFNkQ1NUExQzc4MTJBOTVGRSx0b3BEZXN0XzM5QTdFQUZENTlBOTVCQTZGOUQ3REY3RDJDQkUwQkQ1XCIsXCJQU05fVGl0bGVJZFwiOm51bGwsXCJQU05fSW1hZ2VcIjpudWxsLFwiUFNOX1NvdXJjZVwiOm51bGwsXCJzY2VuYXJpb1wiOlwiVGhlbWVDYXJkTGlzdFwiLFwiVEdfQ2FyZERhdGFUeXBlXCI6XCJUaGVtZUNhcmRMaXN0XCIsXCJUR19FeHBlcmllbmNlVHlwZVwiOlwiVGhlbWVDYXJkXCIsXCJUR19FeHBlcmllbmNlRGV0YWlsc1wiOlwiTXVsdGlJbWFnZUNhcmRcIn0sXCJUeXBlXCI6XCJUaGVtZUNhcmRMaXN0XCIsXCJTY2VuYXJpb1wiOlwiXCJ9IiwiZGF0YVR5cGUiOiJUaGVtZUNhcmRMaXN0IiwiZGF0YVZlcnNpb24iOjEsImNhcmRJZCI6NjF9XX0seyJkYXRhVGVtcGxhdGUiOiJtc2Z0LXR3by1yb3ctZml2ZS1jb2wtdGhyZWUiLCJsYXlvdXRUZW1wbGF0ZSI6Im1zZnQtdHdvLXJvdy1maXZlLWNvbC10aHJlZSIsImNhcmRzIjpbeyJpZCI6IkJCMWlOQ1A2IiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IjMgYm9va2VkIGZvciDigJh0aHJlYXRlbmluZ+KAmSB0byBhdHRhY2sgdHJhaW4gcmV0dXJuaW5nIGZyb20gQXlvZGh5YTsgMSBoZWxkIiwiYWJzdHJhY3QiOiJUaHJlZSBtZW4gdGhyZWF0ZW5lZCB0byBhdHRhY2sgYSB0cmFpbiBjYXJyeWluZyBwaWxncmltcywgbGVhZGluZyB0byBvdXRyYWdlIGFuZCBkZW1hbmRzIGZvciBhcnJlc3RzIGZyb20gQkpQIHdvcmtlcnMuIE9uZSBwZXJzb24gZGV0YWluZWQsIHR3byBvdGhlcnMgc291Z2h0LiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL25ld3MvSW5kaWEvMy1ib29rZWQtZm9yLXRocmVhdGVuaW5nLXRvLWF0dGFjay10cmFpbi1yZXR1cm5pbmctZnJvbS1heW9kaHlhLTEtaGVsZC9hci1CQjFpTkNQNiIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMTk6MzI6MjRaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjU1MCwiaGVpZ2h0IjozMDksInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy43YzYwMjUzY2RkNjAzMjY4NDAwNDdlODA5MGRmNzE0NyZwaWQ9V2RwIiwidGl0bGUiOiJUaGUgbWVuIGJvYXJkZWQgdGhlIHNlY29uZCBjb2FjaCBvZiB0aGUgQXlvZGh5YSBzcGVjaWFsIHRyYWluIiwiY2FwdGlvbiI6IlRoZSBtZW4gYm9hcmRlZCB0aGUgc2Vjb25kIGNvYWNoIG9mIHRoZSBBeW9kaHlhIHNwZWNpYWwgdHJhaW4iLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzNBNTc2MiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRDhEOUQ4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzQTU3NjIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q4RDlEOCIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBQjNyWCIsIm5hbWUiOiJIaW5kdXN0YW4gVGltZXMiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjE4THdiVi5pbWciLCJwcm9maWxlSWQiOiJ2aWQtdmZodmVkdmp1eHJxcWU1NzB4anV5NTY3aXgwczU1amtxcXZjaXRoMDNtOG4zMnk4a3ZwYSJ9LCJjYXRlZ29yeSI6Im5ld3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfZTM0NTZlOTEtMjE1Zi00YTVjLWFiNzgtNjg3NDUwOTA3NWVmIiwiZmVlZE5hbWUiOiJJbmRpYSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjI1LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6Ik5ld3MiLCJ0aW1lIjoiIn19XSwicmkiOiIyMjYiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsidHlwZSI6ImNtc2FkIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowfSx7ImlkIjoiQUExamlZRWEiLCJ0eXBlIjoic2xpZGVzaG93IiwidGl0bGUiOiI5OSBBbWF6aW5nIFBsYWNlcyBZb3UgTXVzdCBWaXNpdCBCZWZvcmUgVGhlIFllYXIgSXMgT3V0IiwiYWJzdHJhY3QiOiJGcm9tIGFtYXppbmcgYWR2ZW50dXJlcyB0byBkcmVhbSBkZXN0aW5hdGlvbnMsIGhlcmUgYXJlIDk5IG9mIHRoZSB3b3JsZCdzIG1vc3QgdW5taXNzYWJsZSB0cmF2ZWwgZXhwZXJpZW5jZXMgZm9yIHRoaXMgeWVhci4iLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL3RyYXZlbC9uZXdzLzk5LWFtYXppbmctcGxhY2VzLXlvdS1tdXN0LXZpc2l0LWJlZm9yZS10aGUteWVhci1pcy1vdXQvc3MtQUExamlZRWEiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwic2xpZGVzIjpbeyJ0aXRsZSI6IllvdXIgdHJhdmVsIHdpc2ggbGlzdCIsImJvZHkiOiJXZSd2ZSBhbGwgZ290IGEgYnVja2V0IGxpc3Qgb2YgbXVzdC1zZWUgc2lnaHRzIGFuZCBleHBlcmllbmNlcyB3ZSB3YW50IHRvIGhhdmUgYXJvdW5kIHRoZSB3b3JsZCBhbmQgb3VycyBzZWVtcyB0byBiZSBnZXR0aW5nIGxvbmdlciBieSB0aGUgZGF5LiBGcm9tIGFtYXppbmcgYWR2ZW50dXJlcyB0byBkcmVhbSBkZXN0aW5hdGlvbnMsIGhlcmUgYXJlIDk5IG9mIHRoZSB3b3JsZCdzIG1vc3QgdW5taXNzYWJsZSB0cmF2ZWwgZXhwZXJpZW5jZXMgZm9yIDIwMjMgYW5kIGJleW9uZC4iLCJpbWFnZSI6eyJ3aWR0aCI6MTg2MCwiaGVpZ2h0IjoxMjAwLCJxdWFsaXR5Ijo3NCwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFqajVxOC5pbWciLCJhdHRyaWJ1dGlvbiI6IkNQIERDIFByZXNzL1NodXR0ZXJzdG9jayIsInRpdGxlIjoiWW91ciB0cmF2ZWwgd2lzaCBsaXN0IiwiY2FwdGlvbiI6IldlJ3ZlIGFsbCBnb3QgYSBidWNrZXQgbGlzdCBvZiBtdXN0LXNlZSBzaWdodHMgYW5kIGV4cGVyaWVuY2VzIHdlIHdhbnQgdG8gaGF2ZSBhcm91bmQgdGhlIHdvcmxkIGFuZCBvdXJzIHNlZW1zIHRvIGJlIGdldHRpbmcgbG9uZ2VyIGJ5IHRoZSBkYXkuIEZyb20gYW1hemluZyBhZHZlbnR1cmVzIHRvIGRyZWFtIGRlc3RpbmF0aW9ucywgaGVyZSBhcmUgOTkgb2YgdGhlIHdvcmxkJ3MgbW9zdCB1bm1pc3NhYmxlIHRyYXZlbCBleHBlcmllbmNlcyBmb3IgMjAyMyBhbmQgYmV5b25kLiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiUGxhbiBhIHRyaXAgdG8gQ2Fpcm8gYW5kIHRoZSBQeXJhbWlkcyBvZiBHaXphLCBFZ3lwdCIsImJvZHkiOiI8cD5UaGVyZSdzwqBsb3RzIGdvaW5nIGZvciB0aGUgRWd5cHRpYW4gY2FwaXRhbCBpbiAyMDIzLiBUaGUgbXVjaC1hbnRpY2lwYXRlZCBHcmFuZCBFZ3lwdGlhbiBNdXNldW0gaXMgc2NoZWR1bGVkIHRvwqBmaW5hbGx5IG9wZW7CoGl0cyBkb29ycyB0b3dhcmRzIHRoZSBlbmQgb2YgdGhlIHllYXIgYW5kIHBsZW50eSBvZiBuZXcgbHV4dXJ5IGhvdGVscyBhcmUgY3VycmVudGx5IGJlaW5nIGJ1aWx0ICh3aXRoIG9wZW5pbmcgZGF0ZXMgc3RyZXRjaGluZyBpbnRvIDIwMjQpLiBIb3dldmVyLCB5b3UgbWF5IHByZWZlciB0byBiZWQgZG93biBvbiBhbiBldGVybmFsbHktZGVzaXJhYmxlwqBSaXZlciBOaWxlIGNydWlzZSwgd2hpY2ggc3RvcHMgYXQgdGhlIEdpemEgYXJjaGFlb2xvZ2ljYWwgc2l0ZSBqdXN0IG91dHNpZGUgdGhlIGNpdHk6IGFzwqBmYW1pbGlhciBhcyB0aGXCoGF3ZS1pbnNwaXJpbmcgdHJpYW5ndWxhciBzaWxob3VldHRlcyBvZiB0aGUgUHlyYW1pZHMgb2YgR2l6YcKgc2VlbSwgdGhlcmXigJlzIG5vdGhpbmcgbGlrZSBzZWVpbmcgdGhlbSB3aXRoIHlvdXIgb3duIGV5ZXMuPC9wPiIsImltYWdlIjp7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInF1YWxpdHkiOjc0LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWppVE42LmltZyIsImF0dHJpYnV0aW9uIjoic2N1bHBpZXMvU2h1dHRlcnN0b2NrIiwidGl0bGUiOiJQbGFuIGEgdHJpcCB0byBDYWlybyBhbmQgdGhlIFB5cmFtaWRzIG9mIEdpemEsIEVneXB0IiwiY2FwdGlvbiI6IjxwPlRoZXJlJ3PCoGxvdHMgZ29pbmcgZm9yIHRoZSBFZ3lwdGlhbiBjYXBpdGFsIGluIDIwMjMuIFRoZSBtdWNoLWFudGljaXBhdGVkIEdyYW5kIEVneXB0aWFuIE11c2V1bSBpcyBzY2hlZHVsZWQgdG/CoGZpbmFsbHkgb3BlbsKgaXRzIGRvb3JzIHRvd2FyZHMgdGhlIGVuZCBvZiB0aGUgeWVhciBhbmQgcGxlbnR5IG9mIG5ldyBsdXh1cnkgaG90ZWxzIGFyZSBjdXJyZW50bHkgYmVpbmcgYnVpbHQgKHdpdGggb3BlbmluZyBkYXRlcyBzdHJldGNoaW5nIGludG8gMjAyNCkuIEhvd2V2ZXIsIHlvdSBtYXkgcHJlZmVyIHRvIGJlZCBkb3duIG9uIGFuIGV0ZXJuYWxseS1kZXNpcmFibGXCoFJpdmVyIE5pbGUgY3J1aXNlLCB3aGljaCBzdG9wcyBhdCB0aGUgR2l6YSBhcmNoYWVvbG9naWNhbCBzaXRlIGp1c3Qgb3V0c2lkZSB0aGUgY2l0eTogYXPCoGZhbWlsaWFyIGFzIHRoZcKgYXdlLWluc3BpcmluZyB0cmlhbmd1bGFyIHNpbGhvdWV0dGVzIG9mIHRoZSBQeXJhbWlkcyBvZiBHaXphwqBzZWVtLCB0aGVyZeKAmXMgbm90aGluZyBsaWtlIHNlZWluZyB0aGVtIHdpdGggeW91ciBvd24gZXllcy48L3A+Iiwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiJWaXNpdCBhIGZhaXJ5LXRhbGUgY2FzdGxlIGluIEdlcm1hbnkiLCJib2R5IjoiPHA+VGhlIDE5dGgtY2VudHVyeSBOZXVzY2h3YW5zdGVpbiBDYXN0bGUsIHBlcmNoZWQgb24gYSBoaWxsIGhpZ2ggYWJvdmUgdGhlIEJhdmFyaWFuIGNvdW50cnlzaWRlLCBpcyBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGluIHRoZSB3b3JsZC4gUHV0IHlvdXIgYmVzdCBoaWtpbmcgYm9vdHMgb24gYW5kIHRyZWsgdXAgdGhlIHJ1Z2dlZCBoaWxsIHRvIGV4cGxvcmUgdGhlIGlkeWxsaWMgY2FzdGxlIGFuZCBpdHMgYXN0b25pc2hpbmcgaW50ZXJpb3IuPC9wPiAgPHA+PHN0cm9uZz48YSBocmVmPVwiaHR0cHM6Ly93d3cubG92ZWV4cGxvcmluZy5jb20vZ2FsbGVyeWxpc3QvNjcwMzgvMzAtb2YtdGhlLW1vc3QtYmVhdXRpZnVsLWV1cm9wZWFuLWNhc3RsZXNcIj5XZSB0aGluayB0aGVzZSBhcmUgdGhlIGJlc3QgY2FzdGxlc8KgRXVyb3BlIGhhcyB0byBvZmZlcjwvYT48L3N0cm9uZz48L3A+IiwiaW1hZ2UiOnsid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwicXVhbGl0eSI6NzQsInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExamlWUzcuaW1nIiwiYXR0cmlidXRpb24iOiJjYW5hZGFzdG9jay9TaHV0dGVyc3RvY2siLCJ0aXRsZSI6IlZpc2l0IGEgZmFpcnktdGFsZSBjYXN0bGUgaW4gR2VybWFueSIsImNhcHRpb24iOiI8cD5UaGUgMTl0aC1jZW50dXJ5IE5ldXNjaHdhbnN0ZWluIENhc3RsZSwgcGVyY2hlZCBvbiBhIGhpbGwgaGlnaCBhYm92ZSB0aGUgQmF2YXJpYW4gY291bnRyeXNpZGUsIGlzIG9uZSBvZiB0aGUgbW9zdCBmYW1vdXMgaW4gdGhlIHdvcmxkLiBQdXQgeW91ciBiZXN0IGhpa2luZyBib290cyBvbiBhbmQgdHJlayB1cCB0aGUgcnVnZ2VkIGhpbGwgdG8gZXhwbG9yZSB0aGUgaWR5bGxpYyBjYXN0bGUgYW5kIGl0cyBhc3RvbmlzaGluZyBpbnRlcmlvci48L3A+ICA8cD48c3Ryb25nPjxhIGhyZWY9XCJodHRwczovL3d3dy5sb3ZlZXhwbG9yaW5nLmNvbS9nYWxsZXJ5bGlzdC82NzAzOC8zMC1vZi10aGUtbW9zdC1iZWF1dGlmdWwtZXVyb3BlYW4tY2FzdGxlc1wiPldlIHRoaW5rIHRoZXNlIGFyZSB0aGUgYmVzdCBjYXN0bGVzwqBFdXJvcGUgaGFzIHRvIG9mZmVyPC9hPjwvc3Ryb25nPjwvcD4iLCJzb3VyY2UiOiJtc24ifX1dLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjMtMTEtMDNUMDI6NDU6MDBaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmEzNzlmYzE2ZmU3ZDc5YWRlOGM4OTk5MjlkMGE1MDU1JnBpZD1XZHAiLCJ0aXRsZSI6IllvdXIgdHJhdmVsIHdpc2ggbGlzdCIsImNhcHRpb24iOiJXZSd2ZSBhbGwgZ290IGEgYnVja2V0IGxpc3Qgb2YgbXVzdC1zZWUgc2lnaHRzIGFuZCBleHBlcmllbmNlcyB3ZSB3YW50IHRvIGhhdmUgYXJvdW5kIHRoZSB3b3JsZCBhbmQgb3VycyBzZWVtcyB0byBiZSBnZXR0aW5nIGxvbmdlciBieSB0aGUgZGF5LiBGcm9tIGFtYXppbmcgYWR2ZW50dXJlcyB0byBkcmVhbSBkZXN0aW5hdGlvbnMsIGhlcmUgYXJlIDk5IG9mIHRoZSB3b3JsZCdzIG1vc3QgdW5taXNzYWJsZSB0cmF2ZWwgZXhwZXJpZW5jZXMgZm9yIDIwMjMgYW5kIGJleW9uZC4iLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzU4M0MxNyIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRURFQUQ3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM1ODNDMTciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0VERUFENyIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkJCQnh4UWciLCJuYW1lIjoiTG92ZSBFeHBsb3JpbmciLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQkJGVjBmLmltZyIsInByb2ZpbGVJZCI6InZpZC10MDMybmJ4cmgybnVwdHdqaW5waGNybTY0d2kydGNrZjhic2E2NmE0eHZyN3Q2bnB0ZmhzIn0sImNhdGVnb3J5IjoidHJhdmVsIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjQwLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MzcsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjMsInR5cGUiOiJkb3dudm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9hZDdkZThmMC01M2VkLTQxZTAtYmI4Ni04NmZiMGJiODFhNGQiLCJmZWVkTmFtZSI6IkxpZmVzdHlsZSIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjI2LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJleHBsb3JlIiwicmFuayI6MCwiZm9sbG93Ijp7ImlkIjoiIiwibmFtZSI6IlRyYXZlbCIsInRpbWUiOiIifX1dLCJyaSI6IjIwNCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkFBMWlIdjYxIiwidHlwZSI6InNsaWRlc2hvdyIsInRpdGxlIjoiRElZIG5pZ2h0bWFyZXM6IDM2IGJpZ2dlc3QgcmVub3ZhdGlvbiBtaXN0YWtlcyBob21lLW93bmVycyBtYWtlIiwiYWJzdHJhY3QiOiJGcm9tIGRlbGF5cyB0byB1bmZvcmVzZWVuIHN0cnVjdHVyYWwgcHJvYmxlbXMsIHRoZXJlIGFyZSBhbHdheXMgc25hZ3MgYWxvbmcgdGhlIHdheSB3aGVuIHlvdSBhcmUgcmVub3ZhdGluZyBhIGhvdXNlLiBCZSBwcmVwYXJlZCBieSBjaGVja2luZyBvdXQgdGhlc2UgY29tbW9uIGhvbWUgcmVub3ZhdGlvbiBtaXN0YWtlcyBiZWZvcmUgeW91IHN0YXJ0LiIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vbW9uZXkvcGhvdG9zL2RpeS1uaWdodG1hcmVzLTM2LWJpZ2dlc3QtcmVub3ZhdGlvbi1taXN0YWtlcy1ob21lLW93bmVycy1tYWtlL3NzLUFBMWlIdjYxIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInNsaWRlcyI6W3sidGl0bGUiOiJIb3cgdG8gcmVtb2RlbCB0aGUgcmlnaHQgd2F5IiwiYm9keSI6IjxwPjxzcGFuPlJlbW9kZWxsaW5nIGEgaG91c2UgY2FuIGJlIGEgZ3JlYXQgd2F5IHRvIHR1cm4gYSB0aXJlZCBidWlsZGluZyBpbnRvIGEgZHJlYW0gaG9tZSwgYnV0IHRha2luZyBvbiBzdWNoIGEgYmlnIHByb2plY3QgaXNuJ3QgYWx3YXlzIHNtb290aCBzYWlsaW5nLiBGcm9tIGRlbGF5ZWQgZGVsaXZlcmllcyB0byB1bmZvcmVzZWVuIHN0cnVjdHVyYWwgcHJvYmxlbXMgYW5kIGRlc2lnbiBvdmVyc2lnaHRzLCB0aGVyZSBhcmUgYWx3YXlzIHNuYWdzIGFsb25nIHRoZSB3YXkuIEJlIHByZXBhcmVkIGZvciB0aGUgcHJvYmxlbXMgdGhhdCBtaWdodCBjcm9wIHVwIGJ5IGNoZWNraW5nIG91dCB0aGVzZSBjb21tb24gaG9tZSByZW5vdmF0aW9uIG1pc3Rha2VzIGJlZm9yZSB5b3Ugc3RhcnQuIENsaWNrIG9yIHNjcm9sbCBvbiBmb3IgbW9yZS4uLjwvc3Bhbj48L3A+IiwiaW1hZ2UiOnsid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwicXVhbGl0eSI6NzQsInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExaUhxVW4uaW1nIiwiYXR0cmlidXRpb24iOiJNaWthZHVuIC8gU2h1dHRlcnN0b2NrIiwidGl0bGUiOiJIb3cgdG8gcmVtb2RlbCB0aGUgcmlnaHQgd2F5IiwiY2FwdGlvbiI6IjxwPjxzcGFuPlJlbW9kZWxsaW5nIGEgaG91c2UgY2FuIGJlIGEgZ3JlYXQgd2F5IHRvIHR1cm4gYSB0aXJlZCBidWlsZGluZyBpbnRvIGEgZHJlYW0gaG9tZSwgYnV0IHRha2luZyBvbiBzdWNoIGEgYmlnIHByb2plY3QgaXNuJ3QgYWx3YXlzIHNtb290aCBzYWlsaW5nLiBGcm9tIGRlbGF5ZWQgZGVsaXZlcmllcyB0byB1bmZvcmVzZWVuIHN0cnVjdHVyYWwgcHJvYmxlbXMgYW5kIGRlc2lnbiBvdmVyc2lnaHRzLCB0aGVyZSBhcmUgYWx3YXlzIHNuYWdzIGFsb25nIHRoZSB3YXkuIEJlIHByZXBhcmVkIGZvciB0aGUgcHJvYmxlbXMgdGhhdCBtaWdodCBjcm9wIHVwIGJ5IGNoZWNraW5nIG91dCB0aGVzZSBjb21tb24gaG9tZSByZW5vdmF0aW9uIG1pc3Rha2VzIGJlZm9yZSB5b3Ugc3RhcnQuIENsaWNrIG9yIHNjcm9sbCBvbiBmb3IgbW9yZS4uLjwvc3Bhbj48L3A+Iiwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiJSZW5vdmF0aW5nIHRvbyBzb29uIiwiYm9keSI6IjxwPklmIHlvdSd2ZSBqdXN0IHB1cmNoYXNlZCB5b3VyIGhvbWUgYW5kIGl0J3MgaW4gYSBoYWJpdGFibGUgc3RhdGUsIGl0J3MgYSBnb29kIGlkZWEgdG8gbGl2ZSBpbiBpdCBhIGxpdHRsZSB3aGlsZSBiZWZvcmUgYmVnaW5uaW5nIHJlbm92YXRpb25zIHNvIHRoYXQgeW91IGNhbiBmaWd1cmUgb3V0IHdoYXQgd29ya3MgYW5kIHdoYXQgZG9lc24ndCB3b3JrIGluIGl0cyBjdXJyZW50IGxheW91dC4gRnJvbSB3aGVyZSB5b3UgZHJvcCB0aGUgZ3JvY2VyaWVzIGFuZCBob3cgdGhlIGxpdmluZyB6b25lcyBmbG93LCB0byB3aGVyZSB0aGUgY29sZGVzdCBhbmQgd2FybWVzdCBjb3JuZXJzIG9mIHRoZSBob3VzZSBhcmUsIGl0J2xsIGhlbHAgeW91IGhvbmUgYSBwcmFjdGljYWwgYW5kIGNvbWZvcnRhYmxlIGRlc2lnbiByYXRoZXIgdGhhbiBwdXJlbHkgZm9jdXNpbmcgb24gYWVzdGhldGljcy7CoDwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6MTg2MCwiaGVpZ2h0IjoxMjAwLCJxdWFsaXR5Ijo3NCwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFmQUFXYS5pbWciLCJhdHRyaWJ1dGlvbiI6Ik1vbmtleSBCdXNpbmVzcyBJbWFnZXMgLyBTaHV0dGVyc3RvY2siLCJ0aXRsZSI6IlJlbm92YXRpbmcgdG9vIHNvb24iLCJjYXB0aW9uIjoiSWYgeW91J3ZlIGp1c3QgcHVyY2hhc2VkIHlvdXIgaG9tZSBhbmQgaXQncyBpbiBhIGhhYml0YWJsZSBzdGF0ZSwgaXQncyBhIGdvb2QgaWRlYSB0byBsaXZlIGluIGl0IGEgbGl0dGxlIHdoaWxlIGJlZm9yZSBiZWdpbm5pbmcgcmVub3ZhdGlvbnMgc28gdGhhdCB5b3UgY2FuIGZpZ3VyZSBvdXQgd2hhdCB3b3JrcyBhbmQgd2hhdCBkb2Vzbid0IHdvcmsgaW4gaXRzIGN1cnJlbnQgbGF5b3V0LiBGcm9tIHdoZXJlIHlvdSBkcm9wIHRoZSBncm9jZXJpZXMgYW5kIGhvdyB0aGUgbGl2aW5nIHpvbmVzIGZsb3csIHRvIHdoZXJlIHRoZSBjb2xkZXN0IGFuZCB3YXJtZXN0IGNvcm5lcnMgb2YgdGhlIGhvdXNlIGFyZSwgaXQnbGwgaGVscCB5b3UgaG9uZSBhIHByYWN0aWNhbCBhbmQgY29tZm9ydGFibGUgZGVzaWduIHJhdGhlciB0aGFuIHB1cmVseSBmb2N1c2luZyBvbiBhZXN0aGV0aWNzLiIsInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiTmVnbGVjdGluZyBuYXR1cmFsIGxpZ2h0IiwiYm9keSI6IjxwPk9uZSB0aGluZyB5b3UgY2FuJ3Qgc2VlIG9uIGEgZmxvb3IgcGxhbiBpcyB0aGUgd2F5IG5hdHVyYWwgbGlnaHQgY2FuIHNoYXBlIGEgcm9vbS4gR2V0IHRvIGtub3cgaG93IGRpZmZlcmVudCBzcGFjZXMgaW4geW91ciBob21lIGZlZWwgYXMgdGhlIHN1biBzaGlmdHMgdGhyb3VnaCB0aGUgZGF5IGJlZm9yZSB5b3UgbG9jayBpbiBhIGxheW91dC4gRm9yIGV4YW1wbGUsIHlvdSdsbCBsaWtlbHkgd2FudCB5b3VyIGtleSBmYW1pbHkgbGl2aW5nIGFyZWFzIHRvIGJlbmVmaXQgZnJvbSB0aGUgbW9zdCBsaWdodCDigJIgeW91IGNhbiBib29zdCBsZXZlbHMgd2l0aCBhZGRpdGlvbnMgc3VjaCBhcyBnbGFzcyBwYXRpbyBkb29ycyBhbmQgbGFyZ2UgcGljdHVyZSB3aW5kb3dzLiBNZWFud2hpbGUsIG1vcmUgb2NjYXNpb25hbCByb29tcyBsaWtlIHNudWdzIGFuZCBndWVzdCBzcGFjZXMgY2FuIG9jY3VweSBkYXJrZXIgYXJlYXMgb2YgdGhlIGhvdXNlLsKgPC9wPiIsImltYWdlIjp7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInF1YWxpdHkiOjc0LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWZBQVdlLmltZyIsImF0dHJpYnV0aW9uIjoibGF1cmFhc2hsZXl1c2EuY29tIiwidGl0bGUiOiJOZWdsZWN0aW5nIG5hdHVyYWwgbGlnaHQiLCJjYXB0aW9uIjoiT25lIHRoaW5nIHlvdSBjYW4ndCBzZWUgb24gYSBmbG9vciBwbGFuIGlzIHRoZSB3YXkgbmF0dXJhbCBsaWdodCBjYW4gc2hhcGUgYSByb29tLiBHZXQgdG8ga25vdyBob3cgZGlmZmVyZW50IHNwYWNlcyBpbiB5b3VyIGhvbWUgZmVlbCBhcyB0aGUgc3VuIHNoaWZ0cyB0aHJvdWdoIHRoZSBkYXkgYmVmb3JlIHlvdSBsb2NrIGluIGEgbGF5b3V0LiBGb3IgZXhhbXBsZSwgeW91J2xsIGxpa2VseSB3YW50IHlvdXIga2V5IGZhbWlseSBsaXZpbmcgYXJlYXMgdG8gYmVuZWZpdCBmcm9tIHRoZSBtb3N0IGxpZ2h0IOKAkiB5b3UgY2FuIGJvb3N0IGxldmVscyB3aXRoIGFkZGl0aW9ucyBzdWNoIGFzIGdsYXNzIHBhdGlvIGRvb3JzIGFuZCBsYXJnZSBwaWN0dXJlIHdpbmRvd3MuIE1lYW53aGlsZSwgbW9yZSBvY2Nhc2lvbmFsIHJvb21zIGxpa2Ugc251Z3MgYW5kIGd1ZXN0IHNwYWNlcyBjYW4gb2NjdXB5IGRhcmtlciBhcmVhcyBvZiB0aGUgaG91c2UuIiwic291cmNlIjoibXNuIn19XSwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDIzLTEwLTI2VDExOjMwOjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy44ZjA2MTk2Y2YxMTc5NTAyMTg4NDQwODFlOWY1NTVkYiZwaWQ9V2RwIiwidGl0bGUiOiJIb3cgdG8gcmVtb2RlbCB0aGUgcmlnaHQgd2F5IiwiY2FwdGlvbiI6IjxwPjxzcGFuPlJlbW9kZWxsaW5nIGEgaG91c2UgY2FuIGJlIGEgZ3JlYXQgd2F5IHRvIHR1cm4gYSB0aXJlZCBidWlsZGluZyBpbnRvIGEgZHJlYW0gaG9tZSwgYnV0IHRha2luZyBvbiBzdWNoIGEgYmlnIHByb2plY3QgaXNuJ3QgYWx3YXlzIHNtb290aCBzYWlsaW5nLiBGcm9tIGRlbGF5ZWQgZGVsaXZlcmllcyB0byB1bmZvcmVzZWVuIHN0cnVjdHVyYWwgcHJvYmxlbXMgYW5kIGRlc2lnbiBvdmVyc2lnaHRzLCB0aGVyZSBhcmUgYWx3YXlzIHNuYWdzIGFsb25nIHRoZSB3YXkuIEJlIHByZXBhcmVkIGZvciB0aGUgcHJvYmxlbXMgdGhhdCBtaWdodCBjcm9wIHVwIGJ5IGNoZWNraW5nIG91dCB0aGVzZSBjb21tb24gaG9tZSByZW5vdmF0aW9uIG1pc3Rha2VzIGJlZm9yZSB5b3Ugc3RhcnQuIENsaWNrIG9yIHNjcm9sbCBvbiBmb3IgbW9yZS4uLjwvc3Bhbj48L3A+Iiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM2NzQyMTciLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0VDRUJFQSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNjc0MjE3IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFQ0VCRUEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTd6SGEiLCJuYW1lIjoiTG92ZW1vbmV5IiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUEzSEFIVi5pbWciLCJwcm9maWxlSWQiOiJ2aWQtaHdyc3d4ZGt2eW15eDQwOGNkeXZ1bjY0ZzdxNnd5czAzYTJlbXEwd2cwNWh2NHFqcGZhYSJ9LCJjYXRlZ29yeSI6Im1vbmV5IiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjQsInN1YlJlYWN0aW9uU3VtbWFyaWVzIjpbeyJ0b3RhbENvdW50Ijo0LCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZXzIxYjkzNGNhLTk2NjYtNGViYS1hYjdkLWQxODA2MTM1OWNlOCIsImZlZWROYW1lIjoiVHJhdmVsIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MjcsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImludGVyYWN0ZWQiLCJyYW5rIjowfV0sInJpIjoiMjQ0IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24ifSx7InR5cGUiOiJuYXRpdmVhZCIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MH0seyJpZCI6IkJCMWlIcVpoIiwidHlwZSI6InNsaWRlc2hvdyIsInRpdGxlIjoiT2xkIGFyY2hpdGVjdHVyYWwgd29uZGVycyB0aGF0IHdlcmUgZGVzdHJveWVkIiwiYWJzdHJhY3QiOiJPdmVyIHRoZSB5ZWFycywgb3VyIGNvbGxlY3RpdmUgYXJjaGl0ZWN0dXJhbCBhc3BpcmF0aW9ucyBoYXZlIHByb2dyZXNzZWQgZm9yd2FyZCBpbiBpbXByZXNzaXZlbHkgZnV0dXJpc3RpYyB3YXlzLCBidXQgdGhlc2UgbmV3ZXIgYnVpbGRpbmdzIGhhdmUgYmVlbiBidWlsdCBvbiB0aGUgZm91bmRhdGlvbnMgb2YgdGhvc2UgdGhhdCBsb25nIGNhbWUgYmVmb3JlLiBUaGUgb25seSBwcm9ibGVtIGlzIHRoYXQgbWFueSBvZiB0aGVzZSBhcmNoaXRlY3R1cmFsIGFuY2VzdG9ycyBoYXZlIG5vdCBzdXJ2aXZlZCB0aW1lJ3MgcmVsZW50bGVzcyBlZmZlY3RzLCBhbmQgZ29yZ2VvdXMgb2xkIHN0cnVjdHVyZXMgd2hpY2ggc2VydmVkIGFzIGxpYnJhcmllcywgY2h1cmNoZXMsIHRoZWF0ZXJzLCBhbmQgbXVzZXVtcyBoYXZlIGJlZW4gZGVzdHJveWVkIGJ5IHdhciBvciBkZW1vbGlzaGVkIHRvIG1ha2Ugcm9vbSBmb3IgcGFya2luZyBsb3RzIGFuZCBmcmVld2F5cy4gVGhlc2UgbG9zdCBzdHJ1Y3R1cmVzIGFyZSBkb3VibHkgaW1wcmVzc2l2ZSBiZWNhdXNlIG9mIHRoZSB0aW1lIGluIHdoaWNoIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCwgd2l0aG91dCBhbGwgdGhlIG1vZGVybiBmaXhpbmdzIGFuZCBtYWNoaW5lcyB3ZSBoYXZlIHRvZGF5LiBDbGljayB0aHJvdWdoIHRvIGhhdmUgYSBsb29rIGF0IGFuIGFyY2hpdGVjdHVyYWwgaGlzdG9yeSB0aGF0IHJlbWFpbnMganVzdCB0aGF0LCBoaXN0b3J5LiIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vdHJhdmVsL25ld3Mvb2xkLWFyY2hpdGVjdHVyYWwtd29uZGVycy10aGF0LXdlcmUtZGVzdHJveWVkL3NzLUJCMWlIcVpoIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInNsaWRlcyI6W3sidGl0bGUiOiJPbGQgYXJjaGl0ZWN0dXJhbCB3b25kZXJzIHRoYXQgd2VyZSBkZXN0cm95ZWQiLCJib2R5IjoiPHA+T3ZlciB0aGUgeWVhcnMsIG91ciBjb2xsZWN0aXZlIGFyY2hpdGVjdHVyYWwgYXNwaXJhdGlvbnMgaGF2ZSBwcm9ncmVzc2VkIGZvcndhcmQgaW4gaW1wcmVzc2l2ZWx5IGZ1dHVyaXN0aWMgd2F5cywgYnV0IHRoZXNlIG5ld2VyIGJ1aWxkaW5ncyBoYXZlIGJlZW4gYnVpbHQgb24gdGhlIGZvdW5kYXRpb25zIG9mIHRob3NlIHRoYXQgbG9uZyBjYW1lIGJlZm9yZS4gVGhlIG9ubHkgcHJvYmxlbSBpcyB0aGF0IG1hbnkgb2YgdGhlc2UgYXJjaGl0ZWN0dXJhbCBhbmNlc3RvcnMgaGF2ZSBub3Qgc3Vydml2ZWQgdGltZSdzIHJlbGVudGxlc3MgZWZmZWN0cywgYW5kIGdvcmdlb3VzIG9sZCBzdHJ1Y3R1cmVzIHdoaWNoIHNlcnZlZCBhcyBsaWJyYXJpZXMsIGNodXJjaGVzLCB0aGVhdGVycywgYW5kIG11c2V1bXMgaGF2ZSBiZWVuIGRlc3Ryb3llZCBieSB3YXIgb3IgZGVtb2xpc2hlZCB0byBtYWtlIHJvb20gZm9yIHBhcmtpbmcgbG90cyBhbmQgZnJlZXdheXMuPC9wPiA8cD5UaGVzZSBsb3N0IHN0cnVjdHVyZXMgYXJlIGRvdWJseSBpbXByZXNzaXZlIDxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL3RyYXZlbC80MzAyOTgvcmVhc29ucy13aHktaGlzdG9yaWMtYnVpbGRpbmdzLXRvb2stc28tbG9uZy10by1jb25zdHJ1Y3QlMjBcIiByZWw9XCJub29wZW5lclwiPmJlY2F1c2Ugb2YgdGhlIHRpbWU8L2E+IGluIHdoaWNoIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCwgd2l0aG91dCBhbGwgdGhlIG1vZGVybiBmaXhpbmdzIGFuZCBtYWNoaW5lcyB3ZSBoYXZlIHRvZGF5LiBDbGljayB0aHJvdWdoIHRvIGhhdmUgYSBsb29rIGF0IGFuIGFyY2hpdGVjdHVyYWwgaGlzdG9yeSB0aGF0IHJlbWFpbnMganVzdCB0aGF0LCBoaXN0b3J5LjwvcD48cD5Zb3UgbWF5IGFsc28gbGlrZTo8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS9uLzYxNzE1P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQzMTYxM3YxZW4taW5cIj4gVGhlIG1vc3QgdGVycmlmeWluZyBwbGFjZXMgaW4gdGhlIHdvcmxkIDwvYT48L3A+IiwiaW1hZ2UiOnsid2lkdGgiOjE5MjAsImhlaWdodCI6MTQ0MiwicXVhbGl0eSI6ODksInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxaUhxWDUuaW1nIiwiYXR0cmlidXRpb24iOiJHZXR0eSBJbWFnZXMiLCJ0aXRsZSI6Ik9sZCBhcmNoaXRlY3R1cmFsIHdvbmRlcnMgdGhhdCB3ZXJlIGRlc3Ryb3llZCIsImNhcHRpb24iOiI8cD5PdmVyIHRoZSB5ZWFycywgb3VyIGNvbGxlY3RpdmUgYXJjaGl0ZWN0dXJhbCBhc3BpcmF0aW9ucyBoYXZlIHByb2dyZXNzZWQgZm9yd2FyZCBpbiBpbXByZXNzaXZlbHkgZnV0dXJpc3RpYyB3YXlzLCBidXQgdGhlc2UgbmV3ZXIgYnVpbGRpbmdzIGhhdmUgYmVlbiBidWlsdCBvbiB0aGUgZm91bmRhdGlvbnMgb2YgdGhvc2UgdGhhdCBsb25nIGNhbWUgYmVmb3JlLiBUaGUgb25seSBwcm9ibGVtIGlzIHRoYXQgbWFueSBvZiB0aGVzZSBhcmNoaXRlY3R1cmFsIGFuY2VzdG9ycyBoYXZlIG5vdCBzdXJ2aXZlZCB0aW1lJ3MgcmVsZW50bGVzcyBlZmZlY3RzLCBhbmQgZ29yZ2VvdXMgb2xkIHN0cnVjdHVyZXMgd2hpY2ggc2VydmVkIGFzIGxpYnJhcmllcywgY2h1cmNoZXMsIHRoZWF0ZXJzLCBhbmQgbXVzZXVtcyBoYXZlIGJlZW4gZGVzdHJveWVkIGJ5IHdhciBvciBkZW1vbGlzaGVkIHRvIG1ha2Ugcm9vbSBmb3IgcGFya2luZyBsb3RzIGFuZCBmcmVld2F5cy48L3A+IDxwPlRoZXNlIGxvc3Qgc3RydWN0dXJlcyBhcmUgZG91Ymx5IGltcHJlc3NpdmUgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vdHJhdmVsLzQzMDI5OC9yZWFzb25zLXdoeS1oaXN0b3JpYy1idWlsZGluZ3MtdG9vay1zby1sb25nLXRvLWNvbnN0cnVjdCUyMFwiIHJlbD1cIm5vb3BlbmVyXCI+YmVjYXVzZSBvZiB0aGUgdGltZTwvYT4gaW4gd2hpY2ggdGhleSB3ZXJlIGNvbnN0cnVjdGVkLCB3aXRob3V0IGFsbCB0aGUgbW9kZXJuIGZpeGluZ3MgYW5kIG1hY2hpbmVzIHdlIGhhdmUgdG9kYXkuIENsaWNrIHRocm91Z2ggdG8gaGF2ZSBhIGxvb2sgYXQgYW4gYXJjaGl0ZWN0dXJhbCBoaXN0b3J5IHRoYXQgcmVtYWlucyBqdXN0IHRoYXQsIGhpc3RvcnkuPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vNjE3MTU/dXRtX3NvdXJjZT1tc24uY29tJnV0bV9tZWRpdW09ZGlzcGxheSZ1dG1fY2FtcGFpZ249cmVmZXJyYWxfZGVzY3JpcHRpb24mdXRtX2NvbnRlbnQ9NDMxNjEzdjFlbi1pblwiPiBUaGUgbW9zdCB0ZXJyaWZ5aW5nIHBsYWNlcyBpbiB0aGUgd29ybGQgPC9hPjwvcD4iLCJzb3VyY2UiOiJtc24ifX0seyJ0aXRsZSI6IkNpbmNpbm5hdGkgUHVibGljIExpYnJhcnksIENpbmNpbm5hdGkiLCJib2R5IjoiPHA+RGVzaWduZWQgYnkgYXJjaGl0ZWN0IEphbWVzIFcuIE1jTGF1Z2hsaW4sIHRoZSBzdHVubmluZyBsaWJyYXJ5LCB3aXRoIGh1Z2UgY2FzdC1pcm9uIGJvb2sgYWxjb3ZlcyBhbmQgc3BpcmFsIHN0YWlyY2FzZXMsIG9wZW5lZCBpbiAxODc0LiBJdCB3YXMgZGVtb2xpc2hlZCBpbiAxOTU1IHdoZW4gYW5vdGhlciBsaWJyYXJ5IG9wZW5lZCBkb3duIHRoZSBzdHJlZXQsIGFuZCB0b2RheSBhIHBhcmtpbmcgbG90IGFuZCBhbiBvZmZpY2UgYnVpbGRpbmcgc3RhbmQgaW4gaXRzIHBsYWNlLjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9jb21tdW5pdHkvY2hhbm5lbC92aWQtN3h4OG1udWN1NTV5dzYzd2U5dmEyZ3dyN3VpaGJ4d2M2OGZ4cXAyNXg2dGc0ZnRpYnByYT9jdmlkPTk0NjMxNTQxYmMwZjRmODliZmQ1OTE1OGQ2OTZhZDdlXCI+Rm9sbG93IHVzIGFuZCBhY2Nlc3MgZ3JlYXQgZXhjbHVzaXZlIGNvbnRlbnQgZXZlcnkgZGF5PC9hPjwvcD4iLCJpbWFnZSI6eyJ3aWR0aCI6Nzk2LCJoZWlnaHQiOjEwMDAsInF1YWxpdHkiOjg5LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWlIeXhuLmltZyIsImF0dHJpYnV0aW9uIjoiR2V0dHkgSW1hZ2VzIiwidGl0bGUiOiJDaW5jaW5uYXRpIFB1YmxpYyBMaWJyYXJ5LCBDaW5jaW5uYXRpIiwiY2FwdGlvbiI6IjxwPkRlc2lnbmVkIGJ5IGFyY2hpdGVjdCBKYW1lcyBXLiBNY0xhdWdobGluLCB0aGUgc3R1bm5pbmcgbGlicmFyeSwgd2l0aCBodWdlIGNhc3QtaXJvbiBib29rIGFsY292ZXMgYW5kIHNwaXJhbCBzdGFpcmNhc2VzLCBvcGVuZWQgaW4gMTg3NC4gSXQgd2FzIGRlbW9saXNoZWQgaW4gMTk1NSB3aGVuIGFub3RoZXIgbGlicmFyeSBvcGVuZWQgZG93biB0aGUgc3RyZWV0LCBhbmQgdG9kYXkgYSBwYXJraW5nIGxvdCBhbmQgYW4gb2ZmaWNlIGJ1aWxkaW5nIHN0YW5kIGluIGl0cyBwbGFjZS48L3A+PHA+PGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vY29tbXVuaXR5L2NoYW5uZWwvdmlkLTd4eDhtbnVjdTU1eXc2M3dlOXZhMmd3cjd1aWhieHdjNjhmeHFwMjV4NnRnNGZ0aWJwcmE/Y3ZpZD05NDYzMTU0MWJjMGY0Zjg5YmZkNTkxNThkNjk2YWQ3ZVwiPkZvbGxvdyB1cyBhbmQgYWNjZXNzIGdyZWF0IGV4Y2x1c2l2ZSBjb250ZW50IGV2ZXJ5IGRheTwvYT48L3A+Iiwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiJPcmlnaW5hbCBXYWxkb3JmIEFzdG9yaWEgSG90ZWwsIE5ldyBZb3JrIiwiYm9keSI6IjxwPlRoZSBvcmlnaW5hbCBXYWxkb3JmLUFzdG9yaWEgSG90ZWwgb24gRmlmdGggQXZlbnVlIGJldHdlZW4gMzNyZCBhbmQgMzR0aCBTdHJlZXRzLCBwaWN0dXJlZCBoZXJlIGluIGl0cyBvcGVuaW5nIHllYXIgaW4gMTg5Ny4gSXQgd2FzIGRlbW9saXNoZWQgaW4gMTkyOSB0byBtYWtlIHJvb20gZm9yIHRoZSBFbXBpcmUgU3RhdGUgQnVpbGRpbmcuPC9wPjxwPllvdSBtYXkgYWxzbyBsaWtlOjxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL24vMTYyNjE4P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQzMTYxM3YxZW4taW5cIj4gQXVzc2llIGFjdG9ycyBkb21pbmF0aW5nIE5ldGZsaXg8L2E+PC9wPiIsImltYWdlIjp7IndpZHRoIjo4MDMsImhlaWdodCI6MTAwMCwicXVhbGl0eSI6ODksInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxaUhCMnYuaW1nIiwiYXR0cmlidXRpb24iOiJHZXR0eSBJbWFnZXMiLCJ0aXRsZSI6Ik9yaWdpbmFsIFdhbGRvcmYgQXN0b3JpYSBIb3RlbCwgTmV3IFlvcmsiLCJjYXB0aW9uIjoiPHA+VGhlIG9yaWdpbmFsIFdhbGRvcmYtQXN0b3JpYSBIb3RlbCBvbiBGaWZ0aCBBdmVudWUgYmV0d2VlbiAzM3JkIGFuZCAzNHRoIFN0cmVldHMsIHBpY3R1cmVkIGhlcmUgaW4gaXRzIG9wZW5pbmcgeWVhciBpbiAxODk3LiBJdCB3YXMgZGVtb2xpc2hlZCBpbiAxOTI5IHRvIG1ha2Ugcm9vbSBmb3IgdGhlIEVtcGlyZSBTdGF0ZSBCdWlsZGluZy48L3A+PHA+WW91IG1heSBhbHNvIGxpa2U6PGEgaHJlZj1cImh0dHBzOi8vd3d3LnN0YXJzaW5zaWRlci5jb20vbi8xNjI2MTg/dXRtX3NvdXJjZT1tc24uY29tJnV0bV9tZWRpdW09ZGlzcGxheSZ1dG1fY2FtcGFpZ249cmVmZXJyYWxfZGVzY3JpcHRpb24mdXRtX2NvbnRlbnQ9NDMxNjEzdjFlbi1pblwiPiBBdXNzaWUgYWN0b3JzIGRvbWluYXRpbmcgTmV0ZmxpeDwvYT48L3A+Iiwic291cmNlIjoibXNuIn19XSwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDAwOjMwOjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjoxOTIwLCJoZWlnaHQiOjE0NDIsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy40OWRhNGRmZDAzNjU3OTMwNDhiYzZjYzAzMTNjN2JkMCZwaWQ9V2RwIiwidGl0bGUiOiJPbGQgYXJjaGl0ZWN0dXJhbCB3b25kZXJzIHRoYXQgd2VyZSBkZXN0cm95ZWQiLCJjYXB0aW9uIjoiPHA+T3ZlciB0aGUgeWVhcnMsIG91ciBjb2xsZWN0aXZlIGFyY2hpdGVjdHVyYWwgYXNwaXJhdGlvbnMgaGF2ZSBwcm9ncmVzc2VkIGZvcndhcmQgaW4gaW1wcmVzc2l2ZWx5IGZ1dHVyaXN0aWMgd2F5cywgYnV0IHRoZXNlIG5ld2VyIGJ1aWxkaW5ncyBoYXZlIGJlZW4gYnVpbHQgb24gdGhlIGZvdW5kYXRpb25zIG9mIHRob3NlIHRoYXQgbG9uZyBjYW1lIGJlZm9yZS4gVGhlIG9ubHkgcHJvYmxlbSBpcyB0aGF0IG1hbnkgb2YgdGhlc2UgYXJjaGl0ZWN0dXJhbCBhbmNlc3RvcnMgaGF2ZSBub3Qgc3Vydml2ZWQgdGltZSdzIHJlbGVudGxlc3MgZWZmZWN0cywgYW5kIGdvcmdlb3VzIG9sZCBzdHJ1Y3R1cmVzIHdoaWNoIHNlcnZlZCBhcyBsaWJyYXJpZXMsIGNodXJjaGVzLCB0aGVhdGVycywgYW5kIG11c2V1bXMgaGF2ZSBiZWVuIGRlc3Ryb3llZCBieSB3YXIgb3IgZGVtb2xpc2hlZCB0byBtYWtlIHJvb20gZm9yIHBhcmtpbmcgbG90cyBhbmQgZnJlZXdheXMuPC9wPiA8cD5UaGVzZSBsb3N0IHN0cnVjdHVyZXMgYXJlIGRvdWJseSBpbXByZXNzaXZlIDxhIGhyZWY9XCJodHRwczovL3d3dy5zdGFyc2luc2lkZXIuY29tL3RyYXZlbC80MzAyOTgvcmVhc29ucy13aHktaGlzdG9yaWMtYnVpbGRpbmdzLXRvb2stc28tbG9uZy10by1jb25zdHJ1Y3QlMjBcIiByZWw9XCJub29wZW5lclwiPmJlY2F1c2Ugb2YgdGhlIHRpbWU8L2E+IGluIHdoaWNoIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCwgd2l0aG91dCBhbGwgdGhlIG1vZGVybiBmaXhpbmdzIGFuZCBtYWNoaW5lcyB3ZSBoYXZlIHRvZGF5LiBDbGljayB0aHJvdWdoIHRvIGhhdmUgYSBsb29rIGF0IGFuIGFyY2hpdGVjdHVyYWwgaGlzdG9yeSB0aGF0IHJlbWFpbnMganVzdCB0aGF0LCBoaXN0b3J5LjwvcD48cD5Zb3UgbWF5IGFsc28gbGlrZTo8YSBocmVmPVwiaHR0cHM6Ly93d3cuc3RhcnNpbnNpZGVyLmNvbS9uLzYxNzE1P3V0bV9zb3VyY2U9bXNuLmNvbSZ1dG1fbWVkaXVtPWRpc3BsYXkmdXRtX2NhbXBhaWduPXJlZmVycmFsX2Rlc2NyaXB0aW9uJnV0bV9jb250ZW50PTQzMTYxM3YxZW4taW5cIj4gVGhlIG1vc3QgdGVycmlmeWluZyBwbGFjZXMgaW4gdGhlIHdvcmxkIDwvYT48L3A+Iiwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyRTJFMkUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Y1RjVGNSIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMkUyRTJFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGNUY1RjUiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQW0yU2FnIiwibmFtZSI6IlN0YXJzSW5zaWRlciIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBMWVCVG16LmltZyIsInByb2ZpbGVJZCI6InZpZC03eHg4bW51Y3U1NXl3NjN3ZTl2YTJnd3I3dWloYnh3YzY4ZnhxcDI1eDZ0ZzRmdGlicHJhIiwibGlnaHRUaGVtZVNWR0xvZ28iOnsid2lkdGgiOjk4LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ1BmdiJ9LCJkYXJrVGhlbWVTVkdMb2dvIjp7IndpZHRoIjo5OCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dQZnYtZGFyayJ9fSwiY2F0ZWdvcnkiOiJ0cmF2ZWwiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEsInR5cGUiOiJ1cHZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfMjFiOTM0Y2EtOTY2Ni00ZWJhLWFiN2QtZDE4MDYxMzU5Y2U4IiwiZmVlZE5hbWUiOiJUcmF2ZWwiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoyOCwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiY0ZfSTJpIiwicmFuayI6MH1dLCJyaSI6IjIwOSIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIn0seyJpZCI6IkJCMWl1bGgxIiwidHlwZSI6InNsaWRlc2hvdyIsInRpdGxlIjoiVGhlIFdvcnN0IEFjdGluZyBQZXJmb3JtYW5jZXMgb2YgQWxsIFRpbWUiLCJhYnN0cmFjdCI6IlRoZSBXb3JzdCBBY3RpbmcgUGVyZm9ybWFuY2VzIG9mIEFsbCBUaW1lIiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9lbnRlcnRhaW5tZW50L2hvbGx5d29vZC90aGUtd29yc3QtYWN0aW5nLXBlcmZvcm1hbmNlcy1vZi1hbGwtdGltZS9zcy1CQjFpdWxoMSIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJzbGlkZXMiOlt7InRpdGxlIjoiVGhlIFdvcnN0IEFjdGluZyBQZXJmb3JtYW5jZXMgb2YgQWxsIFRpbWUiLCJib2R5IjoiRW1iYXJraW5nIG9uIGEgY2FuZGlkIGV4cGxvcmF0aW9uIG9mIHRoZSBzaWx2ZXIgc2NyZWVuJ3MgbGVzcy10aGFuLXN0ZWxsYXIgbW9tZW50cywgdGhpcyBzbGlkZXNob3cgZGVsdmVzIGludG8gdGhlIHJlYWxtIG9mIGNpbmVtYXRpYyBtaXNzdGVwcy4gRnJvbSBwZXJmb3JtYW5jZXMgdGhhdCBmZWxsIGZsYXQgdG8gY2FyZWVycyBtYXJyZWQgYnkgcXVlc3Rpb25hYmxlIGNob2ljZXMsIHdlIHNoaW5lIGEgc3BvdGxpZ2h0IG9uIHRoZSB3b3JzdCBhY3RyZXNzZXMgb2YgYWxsIHRpbWU6IHRoZSB3aW5uZXJzIG9mIHRoZSBHb2xkZW4gUmFzcGJlcnJ5IEF3YXJkIGZvciBXb3JzdCBBY3RyZXNzLiBKb2luIHVzIGZvciBhIGNhbmRpZCBleGFtaW5hdGlvbiBvZiB0aGUgcGVyZm9ybWFuY2VzIHRoYXQgbWlzc2VkIHRoZSBtYXJrIGFuZCB0aGUgYWN0cmVzc2VzIHdobyBmb3VuZCB0aGVtc2VsdmVzIG9uIHRoZSBsaXN0IG9mIHRoZSBpbmR1c3RyeSdzIG1vc3QgZm9yZ2V0dGFibGUuIiwiaW1hZ2UiOnsid2lkdGgiOjkwNCwiaGVpZ2h0Ijo3MjcsInF1YWxpdHkiOjY5LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWl1dm1OLmltZyIsImF0dHJpYnV0aW9uIjoiVW5pdmVyc2FsIFBpY3R1cmVzIiwidGl0bGUiOiJUaGUgV29yc3QgQWN0aW5nIFBlcmZvcm1hbmNlcyBvZiBBbGwgVGltZSIsImNhcHRpb24iOiJFbWJhcmtpbmcgb24gYSBjYW5kaWQgZXhwbG9yYXRpb24gb2YgdGhlIHNpbHZlciBzY3JlZW4ncyBsZXNzLXRoYW4tc3RlbGxhciBtb21lbnRzLCB0aGlzIHNsaWRlc2hvdyBkZWx2ZXMgaW50byB0aGUgcmVhbG0gb2YgY2luZW1hdGljIG1pc3N0ZXBzLiBGcm9tIHBlcmZvcm1hbmNlcyB0aGF0IGZlbGwgZmxhdCB0byBjYXJlZXJzIG1hcnJlZCBieSBxdWVzdGlvbmFibGUgY2hvaWNlcywgd2Ugc2hpbmUgYSBzcG90bGlnaHQgb24gdGhlIHdvcnN0IGFjdHJlc3NlcyBvZiBhbGwgdGltZTogdGhlIHdpbm5lcnMgb2YgdGhlIEdvbGRlbiBSYXNwYmVycnkgQXdhcmQgZm9yIFdvcnN0IEFjdHJlc3MuIEpvaW4gdXMgZm9yIGEgY2FuZGlkIGV4YW1pbmF0aW9uIG9mIHRoZSBwZXJmb3JtYW5jZXMgdGhhdCBtaXNzZWQgdGhlIG1hcmsgYW5kIHRoZSBhY3RyZXNzZXMgd2hvLCBkZXNwaXRlIHRoZWlyIGVmZm9ydHMsIGZvdW5kIHRoZW1zZWx2ZXMgb24gdGhlIGxpc3Qgb2YgdGhlIGluZHVzdHJ5J3MgbW9zdCBmb3JnZXR0YWJsZS4iLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6MjY2LCJ4MiI6NTkwLCJ5MSI6MTkxLCJ5MiI6NTE1fSwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiIyMDIyIC0gVGhlIFJhenppZXMgdGhlbXNlbHZlcyIsImJvZHkiOiJUaGUgR29sZGVuIFJhc3BiZXJyeSBBd2FyZCBmb3IgV29yc3QgQWN0cmVzcyBpbiAyMDIyIHdhcyB3b24gYnkgdGhlIFJhenppZXMgdGhlbXNlbHZlcy4gVGhpcyBkZWNpc2lvbiB3YXMgbWFkZSBhZnRlciB0aGUgY29udHJvdmVyc3kgb2YgaW5pdGlhbGx5IG5vbWluYXRpbmcgYSAxMi15ZWFyLW9sZCwgUnlhbiBLaWVyYSBBcm1zdHJvbmcsIGZvciBXb3JzdCBBY3RyZXNzLCB3aGljaCBsZWQgdG8gcHVibGljIGJhY2tsYXNoLiBUaGUgb3JnYW5pemF0aW9uIGxhdGVyIHJlc2NpbmRlZCB0aGUgbm9taW5hdGlvbiBhbmQgd29uIHRoZSBhd2FyZCB0aGVtc2VsdmVzIGZvciB0aGUgYmx1bmRlci4iLCJpbWFnZSI6eyJ3aWR0aCI6MTA1OCwiaGVpZ2h0Ijo3MTMsInF1YWxpdHkiOjY5LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWl1dG1qLmltZyIsImF0dHJpYnV0aW9uIjoiVW5pdmVyc2FsIFN0dWRpb3MiLCJ0aXRsZSI6IjIwMjIgLSBUaGUgUmF6emllcyB0aGVtc2VsdmVzIiwiY2FwdGlvbiI6IlRoZSBHb2xkZW4gUmFzcGJlcnJ5IEF3YXJkIGZvciBXb3JzdCBBY3RyZXNzIGluIDIwMjIgd2FzIHdvbiBieSB0aGUgUmF6emllcyB0aGVtc2VsdmVzLiBUaGlzIGRlY2lzaW9uIHdhcyBtYWRlIGFmdGVyIHRoZSBjb250cm92ZXJzeSBvZiBpbml0aWFsbHkgbm9taW5hdGluZyBhIDEyLXllYXItb2xkLCBSeWFuIEtpZXJhIEFybXN0cm9uZywgZm9yIFdvcnN0IEFjdHJlc3MsIHdoaWNoIGxlZCB0byBwdWJsaWMgYmFja2xhc2guIFRoZSBvcmdhbml6YXRpb24gbGF0ZXIgcmVzY2luZGVkIHRoZSBub21pbmF0aW9uIGFuZCB3b24gdGhlIGF3YXJkIHRoZW1zZWx2ZXMgZm9yIHRoZSBibHVuZGVyLiIsImZvY2FsUmVnaW9uIjp7IngxIjo0MDYsIngyIjo1ODAsInkxIjoyOTMsInkyIjo0Njd9LCJzb3VyY2UiOiJtc24ifX0seyJ0aXRsZSI6IjIwMjEgLSBKZWFubmEgZGUgV2FhbCAtIERpYW5hOiBUaGUgTXVzaWNhbCIsImJvZHkiOiJUaGUgZGF6emxpbmcgYW5kIGRldmFzdGF0aW5nIGxpZmUgb2YgUHJpbmNlc3MgRGlhbmEgdGFrZXMgY2VudGVyIHN0YWdlIGluIHRoaXMgb3JpZ2luYWwgbXVzaWNhbCwgZmlsbWVkIGluIGFkdmFuY2Ugb2YgaXRzIG9mZmljaWFsIEJyb2Fkd2F5IG9wZW5pbmcuIEl0IHdhcyB1bml2ZXJzYWxseSBwYW5uZWQgYnkgY3JpdGljcyBhbmQgd29uIGZpdmUgb2YgaXRzIG5pbmUgbm9taW5hdGlvbnMgYXQgdGhlIDQybmQgR29sZGVuIFJhc3BiZXJyeSBBd2FyZHMsIGluY2x1ZGluZyBXb3JzdCBQaWN0dXJlLiIsImltYWdlIjp7IndpZHRoIjo5OTcsImhlaWdodCI6Nzk3LCJxdWFsaXR5Ijo2OSwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFrY0ptcC5pbWciLCJhdHRyaWJ1dGlvbiI6Ik5ldGZsaXgiLCJ0aXRsZSI6IjIwMjEgLSBEaWFuYSwgVGhlIE11c2ljYWwiLCJjYXB0aW9uIjoiVGhlIGRhenpsaW5nIGFuZCBkZXZhc3RhdGluZyBsaWZlIG9mIFByaW5jZXNzIERpYW5hIHRha2VzIGNlbnRlciBzdGFnZSBpbiB0aGlzIG9yaWdpbmFsIG11c2ljYWwsIGZpbG1lZCBpbiBhZHZhbmNlIG9mIGl0cyBvZmZpY2lhbCBCcm9hZHdheSBvcGVuaW5nLiBUaGUgbW92aWUgcmVjZWl2ZWQgZWlnaHQgbm9taW5hdGlvbnMgYXQgdGhlIDQycmQgR29sZGVuIFJhc3BiZXJyeSBBd2FyZHMsIHdpbm5pbmcgV29yc3QgUGljdHVyZSwgV29yc3QgRGlyZWN0b3IsIFdvcnN0IEFjdHJlc3MsIFdvcnN0IFN1cHBvcnRpbmcgQWN0cmVzcyBhbmQgV29yc3QgU2NyZWVucGxheS4iLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NDUwLCJ4MiI6NTUwLCJ5MSI6MTEyLCJ5MiI6MjEyfSwic291cmNlIjoibXNuIn19XSwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDAyOjMxOjIxWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJpbWFnZXMiOlt7IndpZHRoIjo5MDQsImhlaWdodCI6NzI3LCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuYTk0MDkwY2VlZjE1NjQ0NWRjMTczYzc4YzEzNmUzNzEmcGlkPVdkcCIsInRpdGxlIjoiVGhlIFdvcnN0IEFjdGluZyBQZXJmb3JtYW5jZXMgb2YgQWxsIFRpbWUiLCJjYXB0aW9uIjoiRW1iYXJraW5nIG9uIGEgY2FuZGlkIGV4cGxvcmF0aW9uIG9mIHRoZSBzaWx2ZXIgc2NyZWVuJ3MgbGVzcy10aGFuLXN0ZWxsYXIgbW9tZW50cywgdGhpcyBzbGlkZXNob3cgZGVsdmVzIGludG8gdGhlIHJlYWxtIG9mIGNpbmVtYXRpYyBtaXNzdGVwcy4gRnJvbSBwZXJmb3JtYW5jZXMgdGhhdCBmZWxsIGZsYXQgdG8gY2FyZWVycyBtYXJyZWQgYnkgcXVlc3Rpb25hYmxlIGNob2ljZXMsIHdlIHNoaW5lIGEgc3BvdGxpZ2h0IG9uIHRoZSB3b3JzdCBhY3RyZXNzZXMgb2YgYWxsIHRpbWU6IHRoZSB3aW5uZXJzIG9mIHRoZSBHb2xkZW4gUmFzcGJlcnJ5IEF3YXJkIGZvciBXb3JzdCBBY3RyZXNzLiBKb2luIHVzIGZvciBhIGNhbmRpZCBleGFtaW5hdGlvbiBvZiB0aGUgcGVyZm9ybWFuY2VzIHRoYXQgbWlzc2VkIHRoZSBtYXJrIGFuZCB0aGUgYWN0cmVzc2VzIHdobywgZGVzcGl0ZSB0aGVpciBlZmZvcnRzLCBmb3VuZCB0aGVtc2VsdmVzIG9uIHRoZSBsaXN0IG9mIHRoZSBpbmR1c3RyeSdzIG1vc3QgZm9yZ2V0dGFibGUuIiwiZm9jYWxSZWdpb24iOnsieDEiOjI2NiwieDIiOjU5MCwieTEiOjE5MSwieTIiOjUxNX0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDE0OTRGIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGM0Y1RkEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQxNDk0RiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjNGNUZBIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkJ5RnRydCIsIm5hbWUiOiJQZXJpb2Rpc21vLmNvbSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0FBdGs2TFUuaW1nIiwicHJvZmlsZUlkIjoidmlkLWFkNjNxeGdncnYwcTBzdWF2YXJuY2M1OWh1MnUyaDh3aWdpMHBxdGE4Z3NraHl4YWt3cmEifSwiY2F0ZWdvcnkiOiJlbnRlcnRhaW5tZW50IiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjk3LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6NzMsInR5cGUiOiJ1cHZvdGUifSx7InRvdGFsQ291bnQiOjI0LCJ0eXBlIjoiZG93bnZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfYmEwY2JmY2ItYzdjNy00ZTFjLTkwMTItNDllYTkxZmUzYWI5IiwiZmVlZE5hbWUiOiJIb2xseXdvb2QiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjoyOSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoidTJVIiwicmFuayI6MH1dLCJyaSI6IjIwOCwyMDkiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsidHlwZSI6ImNtc2FkIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowfSx7ImlkIjoiQkIxaUxSalYiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiQWpheSBEZXZnbiBvbiBmYWNpbmcgcGFyYW5vcm1hbCBhY3Rpdml0eTogJ0JsYWNrIG1hZ2ljIGV4aXN0cyBpbiBldmVyeSBjdWx0dXJlJyIsImFic3RyYWN0IjoiQWpheSBEZXZnbiwgd2hvIHdpbGwgbmV4dCBiZSBzZWVuIGluIFZpa2FzIEJhaGwncyAnU2hhaXRhYW4nLCBhbG9uZ3NpZGUgUiBNYWRoYXZhbiBhbmQgSnlvdGlrYSwgc2hhcmVkIGhpcyBwZXJzb25hbCBleHBlcmllbmNlcyB3aXRoIHBhcmFub3JtYWwgYWN0aXZpdGllcy4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9lbnRlcnRhaW5tZW50L2JvbGx5d29vZC9hamF5LWRldmduLW9uLWZhY2luZy1wYXJhbm9ybWFsLWFjdGl2aXR5LWJsYWNrLW1hZ2ljLWV4aXN0cy1pbi1ldmVyeS1jdWx0dXJlL2FyLUJCMWlMUmpWIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QxNDozNzo0OFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo2NzUsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy40YmFhOGQxODhkOTU0YjY1ZmE2ZjJhZWFlOWI1OWJjYiZwaWQ9V2RwIiwidGl0bGUiOiJBamF5IERldmduIG9uIGZhY2luZyBwYXJhbm9ybWFsIGFjdGl2aXR5OiAnQmxhY2sgbWFnaWMgZXhpc3RzIGluIGV2ZXJ5IGN1bHR1cmUnIiwiY2FwdGlvbiI6IkFqYXkgRGV2Z24gb24gZmFjaW5nIHBhcmFub3JtYWwgYWN0aXZpdHk6ICdCbGFjayBtYWdpYyBleGlzdHMgaW4gZXZlcnkgY3VsdHVyZSciLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NTYzLCJ4MiI6NzczLCJ5MSI6MTI1LCJ5MiI6MzM1fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyQzRDNTQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0Q0RTNFMyIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjMkM0QzU0IiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNENEUzRTMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQXlGV0ciLCJuYW1lIjoiSW5kaWEgVG9kYXkiLCJsb2dvVXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQTFhMVJMRC5pbWciLCJwcm9maWxlSWQiOiJ2aWQtcmV0dDBnZmdrdm01c3I3cmNmbmM5NnZ4d3VpMGt2cnU4NmNzaTRpZWc5bjU3Mzdkdjk4YSIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjoyOSwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dGNk4ifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6MjksImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnRjZOLWRhcmsifX0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxOSwic3ViUmVhY3Rpb25TdW1tYXJpZXMiOlt7InRvdGFsQ291bnQiOjEzLCJ0eXBlIjoidXB2b3RlIn0seyJ0b3RhbENvdW50Ijo2LCJ0eXBlIjoiZG93bnZvdGUifV19LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfYjQ1OTIxNzItMjdiOC00OTU1LWExNjktMDJhOGExMzRiNTJlIiwiZmVlZE5hbWUiOiJFbnRlcnRhaW5tZW50IiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MzAsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6InRyZW5kaW5nIiwicmFuayI6MH0seyJ0eXBlIjoiY0ZfVTJ1IiwicmFuayI6MX1dLCJyaSI6IjIyMCwyNTgiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiIsImhpZ2hsaWdodHMiOlt7InRleHQiOiJUaGUgYXJ0aWNsZSByZXBvcnRzIG9uICoqKkFqYXkgRGV2Z24ncyoqKiB2ZW50dXJlIGludG8gKipob3Jyb3IqKiB3aXRoICpWaWthcyBCYWhsJ3MqIHN1cGVybmF0dXJhbCB0aHJpbGxlciwgKioqJ1NoYWl0YWFuJyoqKi4gSGUgc3RhcnMgd2l0aCAqKlIgTWFkaGF2YW4qKiBhbmQgKipKeW90aWthKiogaW4gdGhlIGZpbG0uIEF0IHRoZSB0cmFpbGVyIGxhdW5jaCwgQWpheSByZXZlYWxlZCBoaXMgKipwZXJzb25hbCBleHBlcmllbmNlcyB3aXRoIHRoZSBwYXJhbm9ybWFsKiogYW5kIGhpcyAqKmJlbGllZiBpbiBibGFjayBtYWdpYyoqLiBIZSBzYWlkIGhlIGhhZCBhbHdheXMgd2FudGVkIHRvIGRvIGhvcnJvciBhbmQgdGhhdCBibGFjayBtYWdpYyBleGlzdHMgaW4gKipldmVyeSBjdWx0dXJlKiouIEhlIGNpdGVkIGV4YW1wbGVzIG9mICoqc3VwZXJuYXR1cmFsIGFjdGl2aXR5KiogdGhhdCBoZSBhbmQgaGlzIGNyZXcgaGFkIHdpdG5lc3NlZCBvdXRkb29ycyBpbiB0aGVpciBlYXJseSBjYXJlZXJzLiBIZSBjb25jbHVkZWQgYnkgc2F5aW5nIHRoYXQgKiptb3N0IHBlb3BsZSoqIGhhdmUgYSAqKnVuYW5pbW91cyBiZWxpZWYqKiBpbiAqKmV2aWwgZXllKiogYXMgYSBjYXVzZSBvZiBtaXNmb3J0dW5lLiAiLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaUtKR3kiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiS2FyZWVuYSBLYXBvb3IsIEtyaXRpIFNhbm9uIGFuZCBUYWJ1IFR1cm4gU3R5bGlzaCBBaXIgSG9zdGVzc2VzIEZvciBUaGUgQ3JldyBOZXcgUG9zdGVycyB8IENoZWNrIEhlcmUiLCJhYnN0cmFjdCI6IkVhcmxpZXIgdGhpcyBtb250aCwgbWFrZXJzIG9mIHRoZSBoaWdobHkgYW50aWNpcGF0ZWQgbW92aWUgVGhlIENyZXcgZmVhdHVyaW5nIEthcmVlbmEgS2Fwb29yLCBUYWJ1LCBhbmQgS3JpdGkgU2Fub24gcmVsZWFzZWQgdGhlIGZpcnN0IHRlYXNlciBhbmQgY2F1c2VkIGEgc3RpciBvZiBleGNpdGVtZW50IGFjcm9zcyBzb2NpYWwgbWVkaWEuIE1ha2luZyBzdXJlIHRoYXQgdGhlaXIgZmFucyBhcmUgdmVyeSBtdWNoIG9uIGJvYXJkIHdpdGggaXQsIHRoZSBtYWtlcnMgaGF2ZSBub3cgZHJvcHBlZCB0aGUgZmlyc3QgbG9va3Mgb2YgdGhlIGxlYWQgc3RhcnMuIFRoZSBmaXJzdCBsb29rcyBvZiBLYXJlZW5hIEthcG9vciBLaGFuLCBUYWJ1LCBhbmQgS3JpdGkgU2Fub24gZHJlc3NlZCBhcyBzdHlsaXNoIGFpciBob3N0ZXNzZXMgaW4g4oCYVGhlIENyZXfigJkgcHJvbWlzZSBhbiBlbmpveWFibGUuLi4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9lbnRlcnRhaW5tZW50L290aGVyL2thcmVlbmEta2Fwb29yLWtyaXRpLXNhbm9uLWFuZC10YWJ1LXR1cm4tc3R5bGlzaC1haXItaG9zdGVzc2VzLWZvci10aGUtY3Jldy1uZXctcG9zdGVycy1jaGVjay1oZXJlL2FyLUJCMWlLSkd5IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QwODowNzo1MVoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo4MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy5mODJjZWVhOTlhYWRhOGJiMjBhMTk5OWM4Y2NkOTFmNSZwaWQ9V2RwIiwidGl0bGUiOiJUaGUgQ3JldyByZWxlYXNlcyBvbiBNYXJjaCAyOSIsImNhcHRpb24iOiJUaGUgQ3JldyByZWxlYXNlcyBvbiBNYXJjaCAyOSIsImZvY2FsUmVnaW9uIjp7IngxIjo4NCwieDIiOjEwOTksInkxIjoxNzYsInkyIjo1Njh9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzM2MkUzMSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjBGNUY1IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMzNjJFMzEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0YwRjVGNSIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBSlVGeE0iLCJuYW1lIjoiTmV3czE4IiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkJXRGJTNS5pbWciLCJwcm9maWxlSWQiOiJ2aWQtYWF4cjY3eGc2NW0zN2ttODU4dXQ1YzR5aDZja3k5aGF5dW1zMjM3ZW04eXJ1ZWYyY2Z4cyIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjo1MCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dBWnoifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6NTAsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnQVp6LWRhcmsifX0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjozLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MiwidHlwZSI6InVwdm90ZSJ9LHsidG90YWxDb3VudCI6MSwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2I0NTkyMTcyLTI3YjgtNDk1NS1hMTY5LTAyYThhMTM0YjUyZSIsImZlZWROYW1lIjoiRW50ZXJ0YWlubWVudCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjMxLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJjRl9VMnUiLCJyYW5rIjowfV0sInJpIjoiMjIwIiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiVGhlIGFydGljbGUgaW50cm9kdWNlcyB0aGUgZmlyc3QgbG9va3Mgb2YgKioqVGhlIENyZXcqKiosIGEgbW92aWUgc3RhcnJpbmcgKipLYXJlZW5hIEthcG9vcioqLCAqKlRhYnUqKiwgYW5kICoqS3JpdGkgU2Fub24qKiBhcyBzdHlsaXNoIGFpciBob3N0ZXNzZXMuIFRoZSBwb3N0ZXJzIHNob3cgdGhlIHRyaW8gaW4gcmVkIGJsYXplcnMsIGV4dWRpbmcgZWxlZ2FuY2UgYW5kIGNoYXJtLiBLcml0aSBTYW5vbiBwb3N0ZWQgdGhlIGltYWdlcyBvbiBJbnN0YWdyYW0gYW5kIHdyb3RlLCAqXCJSZWFkeSBmb3IgY2hlY2staW4/IFRpbWUgdG8gZmx5IHdpdGggdGhlICNDcmV3IVwiKiBUaGUgdGVhc2VyIHZpZGVvIGZlYXR1cmVkIGEgcGlsb3QncyB2b2ljZW92ZXIgd2VsY29taW5nIHRoZSBwYXNzZW5nZXJzIGFuZCBpbnZpdGluZyB0aGVtIHRvIHRpZSB0aGVpciBibG91c2VzIHRpZ2h0LCBhcyB0aGUgY3JldyB3b3VsZCB0YWtlIGNhcmUgb2YgdGhlbS4gVGhlIG1vdmllIGlzIGRpcmVjdGVkIGJ5ICoqUmFqZXNoIEtyaXNobmFuKiogYW5kIGlzIHNjaGVkdWxlZCB0byByZWxlYXNlIG9uICoqTWFyY2ggMjksIDIwMjQqKi4gSXQgYWxzbyBoYXMgY2FtZW8gYXBwZWFyYW5jZXMgYnkgKipEaWxqaXQgRG9zYW5qaCoqIGFuZCAqKkthcGlsIFNoYXJtYSoqLiAiLCJpbmRleCI6MH1dfV19XX0seyJyZWdpb24iOiJiYWNrdXAiLCJzdWJTZWN0aW9ucyI6W3siZGF0YVRlbXBsYXRlIjoiYmFja3VwLWNhcmRzIiwibGF5b3V0VGVtcGxhdGUiOiJiYWNrdXAtY2FyZHMiLCJjYXJkcyI6W3siaWQiOiJCQjFpS3FTQyIsInR5cGUiOiJzbGlkZXNob3ciLCJ0aXRsZSI6IjI0IGV4cHJlc3Npb25zIHdpdGggcmFjaXN0IG9yaWdpbnMgeW91IHNob3VsZCBzdG9wIHNheWluZyIsImFic3RyYWN0IjoiTGlrZSBtb3N0IGxhbmd1YWdlcywgRW5nbGlzaCBoYXMgbWFueSByYWNpc3QgZXhwcmVzc2lvbnMsIHdvcmRzLCBhbmQgcGhyYXNlcyB0aGF0IGFyZSB1bmZvcnR1bmF0ZWx5IHVzZWQgd2lkZWx5IGFuZCBmcmVxdWVudGx5LiBZb3UgbWlnaHQgbm90IGV2ZW4gYmUgYXdhcmUgdGhhdCB0aGVzZSBleHByZXNzaW9ucyBhcmUgYmFzZWQgb24gcmFjaXN0IGFzc3VtcHRpb25zIG9yIGhpc3RvcnksIGJ1dCB0aGV5IHNob3VsZCBkZWZpbml0ZWx5IGJlIHJlbW92ZWQgZnJvbSBvdXIgdm9jYWJ1bGFyaWVzLiBIZXJlIGFyZSAyNCBvZiB0aGVtLiIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vYXV0b3MvcGhvdG9zLzI0LWV4cHJlc3Npb25zLXdpdGgtcmFjaXN0LW9yaWdpbnMteW91LXNob3VsZC1zdG9wLXNheWluZy9zcy1CQjFpS3FTQyIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJzbGlkZXMiOlt7InRpdGxlIjoiMjQgZXhwcmVzc2lvbnMgd2l0aCByYWNpc3Qgb3JpZ2lucyB5b3Ugc2hvdWxkIHN0b3Agc2F5aW5nIiwiYm9keSI6Ikxpa2UgbW9zdCBsYW5ndWFnZXMsIEVuZ2xpc2ggaGFzIG1hbnkgcmFjaXN0IGV4cHJlc3Npb25zLCB3b3JkcywgYW5kIHBocmFzZXMgdGhhdCBhcmUgdW5mb3J0dW5hdGVseSB1c2VkIHdpZGVseSBhbmQgZnJlcXVlbnRseS4gWW91IG1pZ2h0IG5vdCBldmVuIGJlIGF3YXJlIHRoYXQgdGhlc2UgZXhwcmVzc2lvbnMgYXJlIGJhc2VkIG9uIHJhY2lzdCBhc3N1bXB0aW9ucyBvciBoaXN0b3J5LCBidXQgdGhleSBzaG91bGQgZGVmaW5pdGVseSBiZSByZW1vdmVkIGZyb20gb3VyIHZvY2FidWxhcmllcy4gSGVyZSBhcmUgMjQgb2YgdGhlbS4iLCJpbWFnZSI6eyJ3aWR0aCI6MTg2MCwiaGVpZ2h0IjoxMjAwLCJxdWFsaXR5Ijo5OSwidXJsIjoiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9CQjFpS3A5Si5pbWciLCJhdHRyaWJ1dGlvbiI6IktpbSBLZWxsZXktV2FnbmVyIC8gU2h1dHRlcnN0b2NrIiwidGl0bGUiOiIyNCBleHByZXNzaW9ucyB3aXRoIHJhY2lzdCBvcmlnaW5zIHlvdSBzaG91bGQgc3RvcCBzYXlpbmciLCJjYXB0aW9uIjoiTGlrZSBtb3N0IGxhbmd1YWdlcywgRW5nbGlzaCBoYXMgbWFueSByYWNpc3QgZXhwcmVzc2lvbnMsIHdvcmRzLCBhbmQgcGhyYXNlcyB0aGF0IGFyZSB1bmZvcnR1bmF0ZWx5IHVzZWQgd2lkZWx5IGFuZCBmcmVxdWVudGx5LiBZb3UgbWlnaHQgbm90IGV2ZW4gYmUgYXdhcmUgdGhhdCB0aGVzZSBleHByZXNzaW9ucyBhcmUgYmFzZWQgb24gcmFjaXN0IGFzc3VtcHRpb25zIG9yIGhpc3RvcnksIGJ1dCB0aGV5IHNob3VsZCBkZWZpbml0ZWx5IGJlIHJlbW92ZWQgZnJvbSBvdXIgdm9jYWJ1bGFyaWVzLiBIZXJlIGFyZSAyNCBvZiB0aGVtLiIsImZvY2FsUmVnaW9uIjp7IngxIjoxNzYsIngyIjo5ODcsInkxIjoxMywieTIiOjYwN30sInNvdXJjZSI6Im1zbiJ9fSx7InRpdGxlIjoiUGVhbnV0IGdhbGxlcnkiLCJib2R5IjoiVGhlIGV4cHJlc3Npb24g4oCcbm8gbW9yZSBjb21tZW50cyBmcm9tIHRoZSBwZWFudXQgZ2FsbGVyeeKAnSBpcyBvZnRlbiB1c2VkIHRvIHNpZ25pZnkgdGhhdCB0aGUgc3BlYWtlciBoYXMgaGFkIGVub3VnaCBvZiBoZWNrbGVycyBvciB1bndlbGNvbWUgY29tbWVudGFyeS4gQnV0IGl04oCZcyBhY3R1YWxseSA8YSBocmVmPVwiaHR0cDovL3d3dy50aGVpbmNsdXNpb25zb2x1dGlvbi5tZS93b3Jkcy1hbmQtcGhyYXNlcy10aGF0LXN0aW5nLXBlYW51dC1nYWxsZXJ5LWFuZC1zb2xkLWRvd24tdGhlLXJpdmVyL1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5hIENpdmlsIFdhci1lcmEgcmFjaXN0IGV4cHJlc3Npb248L2E+IHJlZmVycmluZyB0byB0aGUgY2hlYXBlc3Qgc2VhdHMgaW4gYW4gYXVkaXRvcml1bSwgd2hlcmUgY2hlYXAgcGVhbnV0cyB3ZXJlIHNvbGQgYXMgc25hY2tzIGFuZCBibGFjayBwZW9wbGUgd2VyZSByZXF1aXJlZCB0byBzaXQuIiwiaW1hZ2UiOnsid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwicXVhbGl0eSI6NzksInVybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxYjI1d1cuaW1nIiwiYXR0cmlidXRpb24iOiJTaHV0dGVyc3RvY2siLCJ0aXRsZSI6Ikxvdy1mYXQgcGVhbnV0IGJ1dHRlciIsImNhcHRpb24iOiI8cD5UaGUgZmF0IHRoYXTigJlzIG5hdHVyYWxseSBmb3VuZCBpbiBwZWFudXQgYnV0dGVyIGlzIGhlYWx0aHkgdG8gY29uc3VtZSwgc28gaXTigJlzIGJldHRlciBpZiB5b3Ugc3RpY2sgdG8gcmVndWxhciBwZWFudXQgYnV0dGVyIHJhdGhlciB0aGFuIGEgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnRoZWdsb2JlYW5kbWFpbC5jb20vbGlmZS9oZWFsdGgtYW5kLWZpdG5lc3MvYXNrLWEtaGVhbHRoLWV4cGVydC93aGF0cy1oZWFsdGhpZXItcmVndWxhci1vci1saWdodC1wZWFudXQtYnV0dGVyL2FydGljbGUyMDQ5MjA0Ny9cIiByZWw9XCJub3JlZmVycmVyIG5vb3BlbmVyXCI+bG93LWZhdCB2ZXJzaW9uPC9hPi4gVG8gbWFrZSB1cCBmb3IgdGhlIHRhc3RlIG9mIHJlZHVjZWQgZmF0LCBjb21wYW5pZXMgb2Z0ZW4gYWRkIG1vcmUgc3VnYXIgb3Igc3RhcmNoeSBmaWxsZXJzICh0aGluZ3MgcGVyc29uYWwgdHJhaW5lcnMgdHJ5IHRvIGF2b2lkKS48L3A+PHA+V2hpbGUgb24gdGhlIHRvcGljIG9mIHBlYW51dCBidXR0ZXIsIG5vdCBhbGwgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmNubi5jb20vMjAxNy8wOS8wMS9oZWFsdGgvcGVhbnV0LWJ1dHRlci1oZWFsdGh5LWZvb2QtZHJheWVyL2luZGV4Lmh0bWxcIiByZWw9XCJub3JlZmVycmVyIG5vb3BlbmVyXCI+cmVndWxhciBwZWFudXQgYnV0dGVyczwvYT4gYXJlIG1hZGUgd2l0aCB5b3VyIGhlYWx0aCBpbiBtaW5kLiBNYW55IGJyYW5kcyBjb250YWluIGFkZGVkIHN1Z2FycyBhbmQgb2lscywgc28gaXTigJlzIGJldHRlciB0byBzdGljayB0byBtb3JlIG5hdHVyYWwgb25lcy48L3A+Iiwic291cmNlIjoibXNuIn19LHsidGl0bGUiOiJVcHBpdHkiLCJib2R5IjoiVGhlc2UgZGF5cyBtYW55IHBlb3BsZSBzZWVtIHRvIHRoaW5rIHRoZSB3b3JkIOKAnHVwcGl0eeKAnSBqdXN0IGluZGljYXRlcyBzb21lb25lIHdob+KAmXMgc25vYmJ5LCBidXQgaW4gZmFjdCA8YSBocmVmPVwiaHR0cHM6Ly93d3cudGhlYXRsYW50aWMuY29tL3BvbGl0aWNzL2FyY2hpdmUvMjAxMS8xMS95ZXAtdXBwaXR5LXJhY2lzdC8zMzUxNjAvXCIgcmVsPVwibm9yZWZlcnJlciBub29wZW5lclwiPml0IGlzIGEgcmFjaXN0IGV4cHJlc3Npb248L2E+IHRoYXQgd2FzIGhpc3RvcmljYWxseSB1c2VkIGJ5IHBlb3BsZSBpbiB0aGUgc291dGhlcm4gVS5TLiB0byByZWZlciB0byBhIGJsYWNrIHBlcnNvbiB3aG8gZGlkbuKAmXQga25vdyB0aGVpciBwbGFjZSBpbiBzb2NpZXR5ICh3aGljaCB3YXMgY29uc2lkZXJlZCB0byBiZSBiZWxvdyB0aGF0IG9mIGFueSB3aGl0ZSBwZXJzb24pLiIsImltYWdlIjp7IndpZHRoIjoxODYwLCJoZWlnaHQiOjEyMDAsInF1YWxpdHkiOjk5LCJ1cmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWlLN0xuLmltZyIsImF0dHJpYnV0aW9uIjoiU2h1dHRlcnN0b2NrIiwidGl0bGUiOiJVcHBpdHkiLCJjYXB0aW9uIjoiVGhlc2UgZGF5cyBtYW55IHBlb3BsZSBzZWVtIHRvIHRoaW5rIHRoZSB3b3JkIOKAnHVwcGl0eeKAnSBqdXN0IGluZGljYXRlcyBzb21lb25lIHdob+KAmXMgc25vYmJ5LCBidXQgaW4gZmFjdCA8YSBocmVmPVwiaHR0cHM6Ly93d3cudGhlYXRsYW50aWMuY29tL3BvbGl0aWNzL2FyY2hpdmUvMjAxMS8xMS95ZXAtdXBwaXR5LXJhY2lzdC8zMzUxNjAvXCIgcmVsPVwibm9yZWZlcnJlciBub29wZW5lclwiPml0IGlzIGEgcmFjaXN0IGV4cHJlc3Npb248L2E+IHRoYXQgd2FzIGhpc3RvcmljYWxseSB1c2VkIGJ5IHBlb3BsZSBpbiB0aGUgc291dGhlcm4gVS5TLiB0byByZWZlciB0byBhIGJsYWNrIHBlcnNvbiB3aG8gZGlkbuKAmXQga25vdyB0aGVpciBwbGFjZSBpbiBzb2NpZXR5ICh3aGljaCB3YXMgY29uc2lkZXJlZCB0byBiZSBiZWxvdyB0aGF0IG9mIGFueSB3aGl0ZSBwZXJzb24pLiIsImZvY2FsUmVnaW9uIjp7IngxIjo2NDEsIngyIjo4OTgsInkxIjoxOTEsInkyIjo0NDh9LCJzb3VyY2UiOiJtc24ifX1dLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMDY6MDA6MDBaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE4NjAsImhlaWdodCI6MTIwMCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmJmYmNiMDRhN2RhYzQ4NDFiZjI3ZjExMTMyMTkxZjE0JnBpZD1XZHAiLCJ0aXRsZSI6IjI0IGV4cHJlc3Npb25zIHdpdGggcmFjaXN0IG9yaWdpbnMgeW91IHNob3VsZCBzdG9wIHNheWluZyIsImNhcHRpb24iOiJMaWtlIG1vc3QgbGFuZ3VhZ2VzLCBFbmdsaXNoIGhhcyBtYW55IHJhY2lzdCBleHByZXNzaW9ucywgd29yZHMsIGFuZCBwaHJhc2VzIHRoYXQgYXJlIHVuZm9ydHVuYXRlbHkgdXNlZCB3aWRlbHkgYW5kIGZyZXF1ZW50bHkuIFlvdSBtaWdodCBub3QgZXZlbiBiZSBhd2FyZSB0aGF0IHRoZXNlIGV4cHJlc3Npb25zIGFyZSBiYXNlZCBvbiByYWNpc3QgYXNzdW1wdGlvbnMgb3IgaGlzdG9yeSwgYnV0IHRoZXkgc2hvdWxkIGRlZmluaXRlbHkgYmUgcmVtb3ZlZCBmcm9tIG91ciB2b2NhYnVsYXJpZXMuIEhlcmUgYXJlIDI0IG9mIHRoZW0uIiwiZm9jYWxSZWdpb24iOnsieDEiOjE3NiwieDIiOjk4NywieTEiOjEzLCJ5MiI6NjA3fSwic291cmNlIjoibXNuIiwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM0MDVEMTEiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0VFRjNGNiIsImlzR3JleVNjYWxlIjpmYWxzZX1dfV0sImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDA1RDExIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNFRUYzRjYiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XSwicHJvdmlkZXIiOnsiaWQiOiJBQTNmUTBCIiwibmFtZSI6IkVzcHJlc3NvIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExZUlKMVUuaW1nIiwicHJvZmlsZUlkIjoidmlkLWtxYnRxN3lxdnJ3M2hkNjlxcnc1aWs5NGhzajh0aTJ5ZGdqYnhqYmZoaWZ2dGZwOThra3MifSwiY2F0ZWdvcnkiOiJhdXRvcyIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MSwidHlwZSI6ImRvd252b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2FkN2RlOGYwLTUzZWQtNDFlMC1iYjg2LTg2ZmIwYmI4MWE0ZCIsImZlZWROYW1lIjoiTGlmZXN0eWxlIiwibGFzdEZyZUFjdGlvblRpbWVzdGFtcCI6MH0sImNhcmRJZCI6MzYsImlzV29ya05ld3NDb250ZW50IjpmYWxzZSwicmVhc29ucyI6W3sidHlwZSI6ImNGX0kyaSIsInJhbmsiOjB9XSwicmkiOiIyMDkiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTHZmNSIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJBIDIxLXllYXItb2xkIGhhZCBhIHN0cm9rZSBhdCBncmFkdWF0aW9uIGFzIGEgcmFyZSBzaWRlIGVmZmVjdCBvZiBiaXJ0aCBjb250cm9sLiBTaGUgd2FudHMgcGVvcGxlIG9mIGFsbCBhZ2VzIHRvIGtub3cgdGhlIHNpZ25zIGFuZCByaXNrIGZhY3RvcnMuIiwiYWJzdHJhY3QiOiJXaGVuIGNvbGxlZ2UgYXRobGV0ZSBNYXJpc3NhIEZhdHRvcmUgd29rZSB1cCBmZWVsaW5nIFwib2ZmXCIgb24gZ3JhZHVhdGlvbiBkYXksIHNoZSBkaXNtaXNzZWQgaXQgYXMgbmVydmVzLiBBIGZldyBob3VycyBsYXRlciwgc2hlIGhhZCBhIHN0cm9rZS4iLCJyZWFkVGltZU1pbiI6NCwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9oZWFsdGgvaGVhbHRoLW5ld3MvYS0yMS15ZWFyLW9sZC1oYWQtYS1zdHJva2UtYXQtZ3JhZHVhdGlvbi1hcy1hLXJhcmUtc2lkZS1lZmZlY3Qtb2YtYmlydGgtY29udHJvbC1zaGUtd2FudHMtcGVvcGxlLW9mLWFsbC1hZ2VzLXRvLWtub3ctdGhlLXNpZ25zLWFuZC1yaXNrLWZhY3RvcnMvYXItQkIxaUx2ZjUiLCJsb2NhbGUiOiJlbi1pbiIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwicHVibGlzaGVkRGF0ZVRpbWUiOiIyMDI0LTAyLTIzVDExOjE4OjAwWiIsImlzRmVhdHVyZWQiOmZhbHNlLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzNDMzgyRiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjFFRUU2IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQkJCOEtxSyIsIm5hbWUiOiJCdXNpbmVzcyBJbnNpZGVyIEluZGlhIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkJQbFR3Zy5pbWciLCJwcm9maWxlSWQiOiJ2aWQtdXZxYm51ODJkcHd2aWQ3OGZtdWkzdWozOGc2eXlwcnFqdzRpMzNzM2h1dmQ5NGpkd2JhcyJ9LCJjYXRlZ29yeSI6ImhlYWx0aCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50IjoxLCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MSwidHlwZSI6InVwdm90ZSJ9XX0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9lZmI1ZTA5Yi0yNmNjLTQzMTgtYTcyYy0zNGRmMzFjZmIzNDMiLCJmZWVkTmFtZSI6IkhFQUxUSCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjM3LCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJ1MlUiLCJyYW5rIjowfV0sInJpIjoiMjA4IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiKipTdHJva2Ugc3Vydml2b3IqKjogTWFyaXNzYSBGYXR0b3JlLCAyMSwgaGFkIGEgc3Ryb2tlIGF0IGhlciBncmFkdWF0aW9uIGNlcmVtb255LiBTaGUgaGFkIGEgYmxvb2QgY2xvdCBpbiBoZXIgYnJhaW4gdGhhdCBjYXVzZWQgYSByYXJlIGZvcm0gb2Ygc3Ryb2tlLlxuXG4qKlBvc3NpYmxlIGNhdXNlKio6IERvY3RvcnMgc3VzcGVjdGVkIHRoYXQgaGVyIGVzdHJvZ2VuIGJpcnRoIGNvbnRyb2wgcGlsbCBtYXkgaGF2ZSBjb250cmlidXRlZCB0byB0aGUgc3Ryb2tlLCBhcyBzaGUgaGFkIG5vIG90aGVyIHJpc2sgZmFjdG9ycy5cblxuKipSZWNvdmVyeSoqOiBGYXR0b3JlIHNwZW50IGEgbW9udGggaW4gYSBwaHlzaWNhbCByZWhhYmlsaXRhdGlvbiBjZW50ZXIsIHdoZXJlIHNoZSBsZWFybmVkIHRvIHdhbGsgYW5kIHRhbGsgYWdhaW4uIFNoZSBhbHNvIGFkb3B0ZWQgYSBoZWFsdGh5IGxpZmVzdHlsZSB0byBwcmV2ZW50IGZ1dHVyZSBzdHJva2VzLlxuXG4qKldhcm5pbmcgc2lnbnMqKjogRmF0dG9yZSB3YW50cyBwZW9wbGUgdG8ga25vdyB0aGUgYWNyb255bSBGQVNULCB3aGljaCBzdGFuZHMgZm9yIEZhY2UgZHJvb3BpbmcsIEFybSB3ZWFrbmVzcywgU3BlZWNoIGRpZmZpY3VsdHksIGFuZCBUaW1lIHRvIGNhbGwgOTExLiBPdGhlciBzeW1wdG9tcyBpbmNsdWRlIG51bWJuZXNzLCBjb25mdXNpb24sIHZpc2lvbiBwcm9ibGVtcywgYW5kIHNldmVyZSBoZWFkYWNoZS4gIiwiaW5kZXgiOjB9XX0seyJpZCI6IkJCMWlMWXJqIiwidHlwZSI6ImFydGljbGUiLCJ0aXRsZSI6IkVsb24gTXVzayBTYXlzIFJpdmlhbiBFeGVjcyAnTmVlZCBUbyBMaXZlIEluIFRoZSBGYWN0b3J5IE9yIFRoZXkgV2lsbCBEaWUnIiwiYWJzdHJhY3QiOiJQbHVzLCBMdWNpZOKAmXMg4oCcU2F1ZGkgc3VnYXIgZGFkZHkgaXMgdGhlIG9ubHkgdGhpbmcga2VlcGluZyB0aGVtIGFsaXZlLOKAnSBhY2NvcmRpbmcgdG8gVGVzbGHigJlzIENFTy4iLCJyZWFkVGltZU1pbiI6MiwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9hdXRvcy9uZXdzL2Vsb24tbXVzay1zYXlzLXJpdmlhbi1leGVjcy1uZWVkLXRvLWxpdmUtaW4tdGhlLWZhY3Rvcnktb3ItdGhleS13aWxsLWRpZS9hci1CQjFpTFlyaiIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjNUMTQ6MzA6NDNaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjE5MjAsImhlaWdodCI6MTA4MCwidXJsIjoiaHR0cHM6Ly90aC5iaW5nLmNvbS90aD9pZD1PUk1TLmQxNjkyZmViM2M3YTgxZTQ5YmMxM2UwODA2ZWFjNmFhJnBpZD1XZHAiLCJ0aXRsZSI6IkVsb24gTXVzayIsImNhcHRpb24iOiJFbG9uIE11c2siLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6Nzc4LCJ4MiI6MTA3OCwieTEiOjM5MCwieTIiOjY5MH0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNDgzNzNBIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNGM0U1RTMiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzQ4MzczQSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRjNFNUUzIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUF2cnM2cyIsIm5hbWUiOiJJbnNpZGVFVnMgR2xvYmFsIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkIxZWhDbDMuaW1nIiwicHJvZmlsZUlkIjoidmlkLWVnd2J5ZDVidGZjZHc2c3lpamt5MnluNXk3ZXBodzA3MjNrOWYzN2g5dDJueXZ2NTVqNHMiLCJsaWdodFRoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6MTA0LCJoZWlnaHQiOjEyLCJ1cmwiOiJodHRwczovL2Nkbi5xdWVyeS5wcm9kLmNtcy5tc24uY29tL2Ntcy9hcGkvYW1wL2JpbmFyeS9BQTEzZ0hSWCJ9LCJkYXJrVGhlbWVTVkdMb2dvIjp7IndpZHRoIjoxMDQsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnSFJYLWRhcmsifX0sImNhdGVnb3J5IjoiYXV0b3MiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV80YzljMWJjZi04ZDYzLTRiOTEtYTg1NC0zMzlkNDk4NzkzMjQiLCJmZWVkTmFtZSI6IkF1dG9zIG5ld3MiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjozOCwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoidTJVIiwicmFuayI6MH1dLCJyaSI6IjIwOCIsInJlY29JZCI6IjdNRUZWM2ZQMk5HRUVxRjdXaXo1Nm1iUGdtIiwic291cmNlIjoibXNuIiwiaGlnaGxpZ2h0cyI6W3sidGV4dCI6IioqTXVzayBjcml0aWNpemVzIFJpdmlhbiBhbmQgTHVjaWQgb24gWCoqXG5cbi0gVGVzbGEncyBDRU8gRWxvbiBNdXNrIGdhdmUgdW5zb2xpY2l0ZWQgYWR2aWNlIHRvIFJpdmlhbiBhbmQgTHVjaWQsIHR3byByaXZhbCBFViBzdGFydHVwcywgYWZ0ZXIgdGhleSBwb3N0ZWQgdGhlaXIgMjAyMyBmaW5hbmNpYWwgcmVzdWx0cy5cbi0gTXVzayBzYWlkIFJpdmlhbiBpcyBsb3NpbmcgbW9uZXkgb24gZXZlcnkgdmVoaWNsZSBhbmQgd2lsbCBydW4gb3V0IG9mIGNhc2ggaW4gc2l4IHF1YXJ0ZXJzIHVubGVzcyBpdCBjdXRzIGNvc3RzIGFuZCByYW1wcyB1cCBwcm9kdWN0aW9uLlxuLSBNdXNrIGFsc28gc2FpZCBMdWNpZCBpcyByZWx5aW5nIG9uIGl0cyBTYXVkaSBBcmFiaWFuIGludmVzdG9yIHRvIHN1cnZpdmUgYW5kIHRoYXQgaXQgaGFzIGxvdyBwcm9kdWN0aW9uIHRhcmdldHMgZm9yIDIwMjQuXG4iLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaU5Ca0kiLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiJ1VzZSBvbmx5IG1pbGstYmFzZWQgcmVhbCBjaGVlc2UsJyBNY0RvbmFsZCdzIHNheXMgYWZ0ZXIgTWFoYXJhc2h0cmEgRkRBIGFjY3VzZXMgZmFzdCBmb29kIGdpYW50IG9mIHVzaW5nIHZlZ2V0YWJsZSBvaWwiLCJhYnN0cmFjdCI6IkFtaWQgYWxsZWdhdGlvbnMgb2YgdXNpbmcgc3Vic3RpdHV0ZXMgaW5zdGVhZCBvZiByZWFsIGNoZWVzZSwgTWNEb25hbGQncyBoYWQgaXRzIGxpY2Vuc2Ugc3VzcGVuZGVkIGJ5IHRoZSBNYWhhcmFzaHRyYSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIChGREEpIGZvciBhIHNwZWNpZmljIG91dGxldCBpbiBBaG1lZG5hZ2FyLiBJbiByZXNwb25zZSwgdGhlIGZhc3QtZm9vZCBnaWFudCByZW1vdmVkIHRoZSB0ZXJtIFwiY2hlZXNlXCIgZnJvbSBpdGVtcyBhdCB0aGF0IGxvY2F0aW9uLCBhbmQgdGhlIE1haGFyYXNodHJhIEZEQSBpcyBwdXNoaW5nIGZvciBjb3JyZWN0aXZlIGFjdGlvbnMgb24gYSBicm9hZGVyIHNjYWxlLiIsInJlYWRUaW1lTWluIjoyLCJ1cmwiOiJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2Zvb2RhbmRkcmluay9mb29kbmV3cy91c2Utb25seS1taWxrLWJhc2VkLXJlYWwtY2hlZXNlLW1jZG9uYWxkLXMtc2F5cy1hZnRlci1tYWhhcmFzaHRyYS1mZGEtYWNjdXNlcy1mYXN0LWZvb2QtZ2lhbnQtb2YtdXNpbmctdmVnZXRhYmxlLW9pbC9hci1CQjFpTkJrSSIsImxvY2FsZSI6ImVuLWluIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJwdWJsaXNoZWREYXRlVGltZSI6IjIwMjQtMDItMjRUMDQ6NTY6MDBaIiwiaXNGZWF0dXJlZCI6ZmFsc2UsImltYWdlcyI6W3sid2lkdGgiOjEyODAsImhlaWdodCI6NzIwLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuY2Q5NjVlMzE3MzQxOGFkMDk3MWYzYTQzZjY1MDJlZGYmcGlkPVdkcCIsInRpdGxlIjoiJ1VzZSBvbmx5IG1pbGstYmFzZWQgcmVhbCBjaGVlc2UsJyBNY0RvbmFsZCdzIHNheXMgYWZ0ZXIgTWFoYXJhc2h0cmEgRkRBIGFjY3VzZXMgZmFzdCBmb29kIGdpYW50IG9mIHVzaW5nIHZlZ2V0YWJsZSBvaWwiLCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzIzNDI1MiIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRkZFNjk5IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiMyMzQyNTIiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0ZGRTY5OSIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkJCMThTQnQ5IiwibmFtZSI6IlRoZSBUaW1lcyBvZiBJbmRpYSIsImxvZ29VcmwiOiJodHRwczovL2ltZy1zLW1zbi1jb20uYWthbWFpemVkLm5ldC90ZW5hbnQvYW1wL2VudGl0eWlkL0JCMWFpYXk1LmltZyIsInByb2ZpbGVJZCI6InZpZC1rYmowZThpMjVrdzRydHlqbmFiaG1xbWdzYjZjcDN5cmFiZzZtYXcwdHd1cGI3czI5Z2dhIn0sImNhdGVnb3J5IjoiZm9vZGFuZGRyaW5rIiwicmVhY3Rpb25TdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJyZWFjdGlvblN0YXR1cyI6Im9uIiwiY29tbWVudFN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sImNvbW1lbnRTdGF0dXMiOiJvbiIsInJlY29Eb2NNZXRhZGF0YSI6bnVsbCwiZmVlZCI6eyJpZCI6IllfODY0OWIzYzUtYmY1Yy00MzE1LThlZGUtYWRjZjRlZDUzNTI4IiwiZmVlZE5hbWUiOiJGb29kIG5ld3MiLCJsYXN0RnJlQWN0aW9uVGltZXN0YW1wIjowfSwiY2FyZElkIjozOSwiaXNXb3JrTmV3c0NvbnRlbnQiOmZhbHNlLCJyZWFzb25zIjpbeyJ0eXBlIjoiZXhwbG9yZSIsInJhbmsiOjAsImZvbGxvdyI6eyJpZCI6IiIsIm5hbWUiOiJIZWFsdGgiLCJ0aW1lIjoiIn19XSwicmkiOiIyMjMiLCJyZWNvSWQiOiI3TUVGVjNmUDJOR0VFcUY3V2l6NTZtYlBnbSIsInNvdXJjZSI6Im1zbiJ9LHsiaWQiOiJCQjFpTDJCayIsInR5cGUiOiJhcnRpY2xlIiwidGl0bGUiOiJBbmdlbG1hbiBTeW5kcm9tZSBXYXJuaW5nIFNpZ25zOiBXaGF0IFRvIExvb2sgT3V0IEZvciIsImFic3RyYWN0IjoiT3ZlcnZpZXcgQSBnZW5ldGljIGRpc29yZGVyIHRoYXQgY2F1c2VzIGRldmVsb3BtZW50YWwgYW5kIG5ldXJvbG9naWNhbCBkaXNhYmlsaXRpZXMuSXQgY2F1c2VzIGRlbGF5ZWQgZGV2ZWxvcG1lbnQsIGludGVsbGVjdHVhbCBkaXNhYmlsaXR5LCBwcm9ibGVtcyB3aXRoIHNwZWVjaCBhbmQgYmFsYW5jZSwgYW5kIHNlaXp1cmVzLiBTeW1wdG9tcyBJZiB5b3UncmUgZXhwZXJpZW5jaW5nIG5ldywgc2V2ZXJlLCBvciBwZXJzaXN0ZW50IHN5bXB0b21zLCBjb250YWN0IGEgaGVhbHRoIGNhcmUgcHJvdmlkZXIuIFRoZSBzeW1wdG9tcyBpbmNsdWRlOiBJbXBhaXJlZCBzcGVlY2ggQXRheGlhIFNjb2xpb3NpcyBjdXJ2YXQuLi4iLCJyZWFkVGltZU1pbiI6MSwidXJsIjoiaHR0cHM6Ly93d3cubXNuLmNvbS9lbi1pbi9oZWFsdGgvbWVkaWNhbC9hbmdlbG1hbi1zeW5kcm9tZS13YXJuaW5nLXNpZ25zLXdoYXQtdG8tbG9vay1vdXQtZm9yL2FyLUJCMWlMMkJrIiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QyMToyODozOFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTkxMCwiaGVpZ2h0IjoxMjczLCJ1cmwiOiJodHRwczovL3RoLmJpbmcuY29tL3RoP2lkPU9STVMuZDhjOTVjYTRjOWQyNGI1YTE5MmZlODIxNjBjZDAxMTYmcGlkPVdkcCIsInRpdGxlIjoiQW5nZWxtYW4gc3luZHJvbWUgaW1hZ2UiLCJjYXB0aW9uIjoiQW5nZWxtYW4gc3luZHJvbWUgaW1hZ2UiLCJmb2NhbFJlZ2lvbiI6eyJ4MSI6NDYxLCJ4MiI6MTA0OCwieTEiOjE0NSwieTIiOjczMn0sInNvdXJjZSI6Im1zbiIsImNvbG9yU2FtcGxlcyI6W3siaXNEYXJrTW9kZSI6dHJ1ZSwiaGV4Q29sb3IiOiIjNUE0RTNFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfSx7ImlzRGFya01vZGUiOmZhbHNlLCJoZXhDb2xvciI6IiNDRkQ5QjgiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9XX1dLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzVBNEUzRSIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjQ0ZEOUI4IiwiaXNHcmV5U2NhbGUiOmZhbHNlfV0sInByb3ZpZGVyIjp7ImlkIjoiQUFadHJyZSIsIm5hbWUiOiJNaWNyb3NvZnQgU3RhcnQgSGVhbHRoIiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExNEhuQlQuaW1nIiwicHJvZmlsZUlkIjoidmlkLXFqamhoZTh0aDc4OWgyc2dhd2RyM3UzOWE0Ym5tbXU1Z3VocDdtaWYwcGpjdjZ0cmRxNHMifSwiY2F0ZWdvcnkiOiJoZWFsdGgiLCJyZWFjdGlvblN1bW1hcnkiOnsidG90YWxDb3VudCI6MH0sInJlYWN0aW9uU3RhdHVzIjoib24iLCJjb21tZW50U3VtbWFyeSI6eyJ0b3RhbENvdW50IjowfSwiY29tbWVudFN0YXR1cyI6Im9uIiwicmVjb0RvY01ldGFkYXRhIjpudWxsLCJmZWVkIjp7ImlkIjoiWV9lZmI1ZTA5Yi0yNmNjLTQzMTgtYTcyYy0zNGRmMzFjZmIzNDMiLCJmZWVkTmFtZSI6IkhFQUxUSCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQwLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJ1MlUiLCJyYW5rIjowfV0sInJpIjoiMjA4IiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiVGhlIGFydGljbGUgZXhwbGFpbnMgdGhlIHN5bXB0b21zLCBjYXVzZXMsIGFuZCB0cmVhdG1lbnQgb3B0aW9ucyBmb3IgKioqQW5nZWxtYW4gc3luZHJvbWUqKiosIGEgZ2VuZXRpYyBkaXNvcmRlciB0aGF0IGFmZmVjdHMgZGV2ZWxvcG1lbnQgYW5kIG5ldXJvbG9naWNhbCBmdW5jdGlvbnMuIEl0IGNvdmVyczpcblxuLSBUaGUgKipzeW1wdG9tcyoqIG9mIHRoZSBzeW5kcm9tZSwgc3VjaCBhcyAqaW1wYWlyZWQgc3BlZWNoKiwgKmF0YXhpYSosICpzY29saW9zaXMqLCAqc2VpenVyZXMqLCBhbmQgKnBhbGUgc2tpbiBhbmQgaGFpciouXG4tIFRoZSAqKmNhdXNlcyoqIG9mIHRoZSBzeW5kcm9tZSwgd2hpY2ggaW52b2x2ZSAqbG9zcyBvZiBmdW5jdGlvbiBvZiBVQkUzQSBnZW5lKiBkdWUgdG8gbXV0YXRpb24sIGRlbGV0aW9uLCBvciBpbmFjdGl2YXRpb24gb2YgdGhlIGdlbmUsIG9yICppbmhlcml0YW5jZSBvZiB0d28gaW5hY3RpdmUgY29waWVzIG9mIHRoZSBnZW5lKiAodW5pcGFyZW50YWwgZGlzb215KS5cbi0gVGhlICoqY29tbW9uIHRyZWF0bWVudCBvcHRpb25zKiogZm9yIHRoZSBzeW5kcm9tZSwgd2hpY2ggaW5jbHVkZSAqc3BlZWNoIHRoZXJhcHkqLCAqbWVkaWNhdGlvbiosIGFuZCAqc3VyZ2VyeSouXG4tIFRoZSAqKnF1ZXN0aW9ucyB0byBhc2sgYSBkb2N0b3IqKiBhYm91dCB0aGUgc3luZHJvbWUsIHN1Y2ggYXMgdGhlIGRpYWdub3NpcywgcHJvZ25vc2lzLCBhbmQgbWFuYWdlbWVudCBvcHRpb25zLlxuLSBUaGUgKipsaW5rIHRvIHRoZSBmdWxsIGFydGljbGUqKiBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUgc3luZHJvbWUuXG4iLCJpbmRleCI6MH1dfSx7ImlkIjoiQkIxaUtFVTciLCJ0eXBlIjoiYXJ0aWNsZSIsInRpdGxlIjoiUmFudmVlciBTaW5naCBSZXZlYWxzIEhlICdEYXRlZCBUaHJlZSBHaXJscyBBdCBPbmUgVGltZScgSW4gVmlyYWwgVGhyb3diYWNrIFZpZGVvIHwgV2F0Y2giLCJhYnN0cmFjdCI6IlJhbnZlZXIgU2luZ2ggYW5kIERlZXBpa2EgUGFkdWtvbmUgYXJlIG9uZSBvZiB0aGUgbW9zdCBiZWxvdmVkIGNlbGVicml0eSBjb3VwbGVzIGluIEluZGlhLiBBIGZldyBtb250aHMgYWdvLCB0aGV5IGRpZCBhIGRlZXAgZGl2ZSBpbnRvIHRoZWlyIHJlbGF0aW9uc2hpcCBvbiBLYXJhbiBKb2hhcuKAmXMgS29mZmVlIHdpdGggS2FyYW4gYW5kIHNoYXJlZCB0aGUgc3Rvcnkgb2YgdGhlaXIgY291cnRzaGlwIHBlcmlvZC4gRGVlcGlrYSByZXZlYWxlZCB0aGF0IHNoZSB3YXMgc2VlaW5nIG90aGVyIHBlb3BsZSB3aGlsZSBkYXRpbmcgUmFudmVlciBhbmQgdGhpcyByZXZlbGF0aW9uIHJlc3VsdGVkIGluIHRoZSBhY3RyZXNzIGJlaW5nIHRyb2xsZWQgb25saW5lLiBOb3csIGFuIG9sZCB2aWRlbyBvZiBSYW52ZWVyIGZyb20gYW5vdGhlciB0YWxrIHNob3cgaGFzIHJlc3VyZmFjZWQgb25saW5lLi4uIiwicmVhZFRpbWVNaW4iOjIsInVybCI6Imh0dHBzOi8vd3d3Lm1zbi5jb20vZW4taW4vZW50ZXJ0YWlubWVudC9vdGhlci9yYW52ZWVyLXNpbmdoLXJldmVhbHMtaGUtZGF0ZWQtdGhyZWUtZ2lybHMtYXQtb25lLXRpbWUtaW4tdmlyYWwtdGhyb3diYWNrLXZpZGVvLXdhdGNoL2FyLUJCMWlLRVU3IiwibG9jYWxlIjoiZW4taW4iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsInB1Ymxpc2hlZERhdGVUaW1lIjoiMjAyNC0wMi0yM1QwODoyMDo0OFoiLCJpc0ZlYXR1cmVkIjpmYWxzZSwiaW1hZ2VzIjpbeyJ3aWR0aCI6MTIwMCwiaGVpZ2h0Ijo4MDAsInVybCI6Imh0dHBzOi8vdGguYmluZy5jb20vdGg/aWQ9T1JNUy42ZTZmMjk4MmE5NGY3YmJlNzgyNTNhNDI2ODdmYTZhNCZwaWQ9V2RwIiwidGl0bGUiOiJSYW52ZWVyIFNpbmdoIGhhcyBoaXMgaGFuZHMgZnVsbCB3aXRoIGZpbG1zLiIsImNhcHRpb24iOiJSYW52ZWVyIFNpbmdoIGhhcyBoaXMgaGFuZHMgZnVsbCB3aXRoIGZpbG1zLiIsImZvY2FsUmVnaW9uIjp7IngxIjo0NzUsIngyIjo4NTIsInkxIjoyNDAsInkyIjo2MTd9LCJzb3VyY2UiOiJtc24iLCJjb2xvclNhbXBsZXMiOlt7ImlzRGFya01vZGUiOnRydWUsImhleENvbG9yIjoiIzZDNEYwRCIsImlzR3JleVNjYWxlIjpmYWxzZX0seyJpc0RhcmtNb2RlIjpmYWxzZSwiaGV4Q29sb3IiOiIjRTlEM0FFIiwiaXNHcmV5U2NhbGUiOmZhbHNlfV19XSwiY29sb3JTYW1wbGVzIjpbeyJpc0RhcmtNb2RlIjp0cnVlLCJoZXhDb2xvciI6IiM2QzRGMEQiLCJpc0dyZXlTY2FsZSI6ZmFsc2V9LHsiaXNEYXJrTW9kZSI6ZmFsc2UsImhleENvbG9yIjoiI0U5RDNBRSIsImlzR3JleVNjYWxlIjpmYWxzZX1dLCJwcm92aWRlciI6eyJpZCI6IkFBSlVGeE0iLCJuYW1lIjoiTmV3czE4IiwibG9nb1VybCI6Imh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkJXRGJTNS5pbWciLCJwcm9maWxlSWQiOiJ2aWQtYWF4cjY3eGc2NW0zN2ttODU4dXQ1YzR5aDZja3k5aGF5dW1zMjM3ZW04eXJ1ZWYyY2Z4cyIsImxpZ2h0VGhlbWVTVkdMb2dvIjp7IndpZHRoIjo1MCwiaGVpZ2h0IjoxMiwidXJsIjoiaHR0cHM6Ly9jZG4ucXVlcnkucHJvZC5jbXMubXNuLmNvbS9jbXMvYXBpL2FtcC9iaW5hcnkvQUExM2dBWnoifSwiZGFya1RoZW1lU1ZHTG9nbyI6eyJ3aWR0aCI6NTAsImhlaWdodCI6MTIsInVybCI6Imh0dHBzOi8vY2RuLnF1ZXJ5LnByb2QuY21zLm1zbi5jb20vY21zL2FwaS9hbXAvYmluYXJ5L0FBMTNnQVp6LWRhcmsifX0sImNhdGVnb3J5IjoiZW50ZXJ0YWlubWVudCIsInJlYWN0aW9uU3VtbWFyeSI6eyJ0b3RhbENvdW50Ijo0LCJzdWJSZWFjdGlvblN1bW1hcmllcyI6W3sidG90YWxDb3VudCI6MywidHlwZSI6ImRvd252b3RlIn0seyJ0b3RhbENvdW50IjoxLCJ0eXBlIjoidXB2b3RlIn1dfSwicmVhY3Rpb25TdGF0dXMiOiJvbiIsImNvbW1lbnRTdW1tYXJ5Ijp7InRvdGFsQ291bnQiOjB9LCJjb21tZW50U3RhdHVzIjoib24iLCJyZWNvRG9jTWV0YWRhdGEiOm51bGwsImZlZWQiOnsiaWQiOiJZX2I0NTkyMTcyLTI3YjgtNDk1NS1hMTY5LTAyYThhMTM0YjUyZSIsImZlZWROYW1lIjoiRW50ZXJ0YWlubWVudCIsImxhc3RGcmVBY3Rpb25UaW1lc3RhbXAiOjB9LCJjYXJkSWQiOjQxLCJpc1dvcmtOZXdzQ29udGVudCI6ZmFsc2UsInJlYXNvbnMiOlt7InR5cGUiOiJjRl9VMnUiLCJyYW5rIjowfV0sInJpIjoiMjIwIiwicmVjb0lkIjoiN01FRlYzZlAyTkdFRXFGN1dpejU2bWJQZ20iLCJzb3VyY2UiOiJtc24iLCJoaWdobGlnaHRzIjpbeyJ0ZXh0IjoiVGhlIGFydGljbGUgcmVwb3J0cyBvbiAqKipSYW52ZWVyIFNpbmdoJ3MqKiogYWRtaXNzaW9uIG9mICoqZGF0aW5nIHRocmVlIGdpcmxzIGF0IG9uZSB0aW1lKiogaW4gYSB2aXJhbCB2aWRlbyBmcm9tICpWb2d1ZSBCRkZzKiB3aXRoIFpveWEgQWtodGFyLiBUaGUgdmlkZW8gcmVzdXJmYWNlZCBvbmxpbmUgcmVjZW50bHksIGFmdGVyIGhpcyB3aWZlICoqRGVlcGlrYSBQYWR1a29uZSoqIHJldmVhbGVkIG9uICpLb2ZmZWUgd2l0aCBLYXJhbiogdGhhdCBzaGUgd2FzIHNlZWluZyBvdGhlciBwZW9wbGUgd2hpbGUgZGF0aW5nIFJhbnZlZXIsIHdoaWNoIGxlZCB0byBvbmxpbmUgdHJvbGxpbmcuIFRoZSBjb3VwbGUgbWV0IG9uIHRoZSBzZXQgb2YgKipTYW5qYXkgTGVlbGEgQmhhbnNhbGkncyBSYW0gTGVlbGEqKiBhbmQgbWFycmllZCBpbiAyMDE4IGluIGEgcHJpdmF0ZSBjZXJlbW9ueSBpbiBJdGFseS4gUmFudmVlciBpcyBjdXJyZW50bHkgcGxheWluZyB0aGUgaWNvbmljIHJvbGUgb2YgKipEb24qKiBpbiB0aGUgdGhpcmQgaW5zdGFsbWVudCBvZiB0aGUgKipGYXJoYW4gQWtodGFyKiogZmlsbSBmcmFuY2hpc2UsIHdoaWxlIERlZXBpa2EgaXMgZW5qb3lpbmcgdGhlIHN1Y2Nlc3Mgb2YgKipGaWdodGVyKiogYW5kIHdpbGwgc29vbiBzdGFyIGluIHRoZSBJbmRpYW4gcmVtYWtlIG9mICoqVGhlIEludGVybioqLiAiLCJpbmRleCI6MH1dfV19XX1dLCJzZXJ2aWNlQ29udGV4dCI6eyJmZEhlYWQiOiIxcy1kZWZhdWx0c2NuLDFzLWRlZmF1bHRzY253LDFzLWVhb3AxLDFzLWZjcnlwdCwxcy1ub3RpZm1hcHBpbmcsMXMtcDEtbG9jazJkLDFzLXAxLXd4bG9ja3YyLDFzLXAyLWxvY2twcmV2LDFzLXAyLXd4bG9ja2QyLDFzLXByMi1ldmxjLDFzLXByMi1ldmxjbiwxcy1ycHNzZWNhdXRodCwxcy10ZW1wLXdpZC10LDFzLXVhc2Rpc2YtdCwxcy13aW5hdXRoc2VydmljZSwxcy13cG8tcHIyLWN1cmR1cCwxcy13cG8tcHIyLWN1cnJhbmssMXMtd3BvLXByMi1uY2FyZCwxcy13cG8tcHIyLXJldnBtLDFzLXdwby1wcmcxLWNmdjIsMXMtd3BvLXByZzItYWVwbGlmZWN5Y2xlLDFzLXdwby1wcmcyLWNmdjJic3QsMXMtd3BvLXByZzItZXZsY3QxLDFzLXdwby13ZWF0aGVyaGVybywxcy13cG8td2hwLWJvb3N0d3csMXMteGFwYm56ZSxib29zdC13aW5ocC1pbnRsLGJ0aWUtZ3B0cXVlcnktdCxwcmctMXMtZmlub25ueGNmLHByZy0xcy1maW5zYWdlYW5uMSxwcmctMXMtaGVhZGVyLHByZy0xc3ctY2N2Zi1yZWwxLHByZy0xc3ctY2xhcmkscHJnLTFzdy1jcHJlZml4LHByZy0xc3ctYy1zZXJ2dXJsdjIscHJnLTFzdy1lbmFibGVhY3QscHJnLTFzdy1maW52bGRjLHByZy0xc3ctZm5jY29tYm8scHJnLTFzdy1oZWF2eXNub3cscHJnLTFzdy1odnJwdnRjLHByZy0xc3ctaWNvbm1hcCxwcmctMXN3LWlwbHNkcCxwcmctMXN3LWxnZW4scHJnLTFzdy1sb2FkLXdlYXRoZXIscHJnLTFzdy1tbnRwbCxwcmctMXN3LW5ld3dyLHByZy0xc3ctb2ZldCxwcmctMXN3LXAxd3RyY2xtLHByZy0xc3ctcGRlMCxwcmctMXMtd3BvY2ZwMSxwcmctMXN3LXByMmNsYXJpdHkscHJnLTFzdy1ycjJmbixwcmctMXN3LXJyMmZwLHByZy0xc3ctc2Fjb25zdHJhaW5hbm4zYyxwcmctMXN3LXNhLWRubnZlY3RvcmMscHJnLTFzdy1zYWVyZXZwdDQscHJnLTFzdy1zYW1icmIxLHByZy0xc3ctc2FtaGlicm5jMSxwcmctMXN3LXNhbWhpYzEscHJnLTFzdy1zYS1tbnJ0MSxwcmctMXN3LXNhLW9mZmNmNXQxLHByZy0xc3ctc2hpcGZpbixwcmctMXN3LXNuYWNjcDIscHJnLTFzdy1zcGFpcHYyLHByZy0xc3ctc3JkdXMscHJnLTFzdy10YnJjb3VudGVyLHByZy0xc3ctdWNsYW0scHJnLTFzdy13eGh1cmFjLWMscHJnLTFzdy13eGxhZml4LHByZy0xc3ctd3htcHRyZXBsYWNlLHByZy0xc3ctd3h0cjUxLHByZy0xc3ctd3h0cmxvY2lkLHByZy0xc3ctd3h0cm1hdmcscHJnLWFkLWFiZCxwcmctYWQtc2FmZSxwcmctYWRzcGVlayxwcmctYm9vc3QtcDItd3cscHJnLWJvb3N0LXdpbmhwLHByZy1ib29zdC13aW5ocC13dyxwcmctY2FsbGNyc2ZyYWttLHByZy1jZy1hZC1yZWYtaWYtMixwcmctY2ctY2FwLW9iLHByZy1jZy1jYXAtb2ItZmlsbDIscHJnLWNnLWRvbS1jbGVhbixwcmctY2ctaW5nYW1lcy14bi1hZHMscHJnLWNnLWluLWdtLXhuLWFkcyxwcmctY2ctbm90ZjItYyxwcmctY2gtY2RuLWljb25zLHByZy1jLWluYXItM3JkYWQscHJnLWNtLWVvYWItcmYscHJnLWNwLWVibixwcmctY3RybGhwdmlkYWQscHJnLWR1bW15LWFhLHByZy1maW4tcHAyYzIscHJnLWh0aXAtcDEtd3RyLHByZy1tY2NtYi1oZCxwcmctbXNjbGNrLXJmLHByZy1wMi13eG5zbWllbixwcmctcHIyLWJuZXdzdGFnLHByZy1wcjItYm9vc3R3dyxwcmctcHIyLWV2b2x2bGlmZWN5Y2xlLHByZy1wcjItZnRsaXByMSxwcmctcHIyLWh2cnB2dGMscHJnLXByMi1tdWx0aW5vdGlmLHByZy1wcjItbnRpZnN0ZyxwcmctcHIyLW50aWYtc3RnLHByZy1wcjItcGFnZWNvbnRleHQscHJnLXByMi1yZmlsb3B2LHByZy1wcjItc2hvcmVsaW5lLHByZy1wcjItc2lkZWJhcixwcmctcHIyLXNpZGViYXItdCxwcmctcHViZmx3LXJkYyxwcmctcmVtZmx0dGVsLWMscHJnLXJwdDIscHJnLXNoLWJkLWRpc2diLHByZy1zaC1iZC1uZXdiYW5uZXIscHJnLXNoLWJkLW5ld2NoY2tvdCxwcmctc2gtYmQtbndjaGsscHJnLXNoLWJkLXh0cmFjYXNoLHByZy1zaC1yZWNvcGRwLHByZy1zaC1ybWl0bWxuayxwcmctc2gtdXNlY3Noayxwcmctc2gtdXNlY3Noa3BkcCxwcmctc3AtbGl2ZWFwaSxwcmctc3BybmF2LHByZy1zcHJuYXYtdixwcmctdWdjLWxpa2VjaGFuZ2UscHJnLXVnYy1zdGFnaW5nLHByZy11cHNhaXAtci10LHByZy11cHNhaXAtdzEtdCxwcmctdXBzY2FjaGUtdCxwcmctdmRwLXVybHMscHJnLXZpZGVtYmVkY2FyZC10LHByZy13ZWF3aW5zMCxwcmctd2hwLWRkbm0scHJnLXdocC1lbm11bHRpbmZvZixwcmctd2luLWJhZG5ldGltZyxwcmctd2luLWMybTRpbWcscHJnLXdpbi10MnQzLHByZy13eG1ubnMscHJnLXd4LW5ld3dyLHByZy13eC1uc3RhdCxwcmctd3gtcHJlZGVwcyxwcm9uZzItaW50bCIsImZkRmxpZ2h0aW5nVmVyc2lvbiI6IjUzNDMwNTg1Iiwic2VydmljZUFjdGl2aXR5SWQiOiI2NWQ5OTI0My03NTE4LTQ0YzItOTdhYS1hZTI1ZDYzNjM4ODkiLCJ0bXBsIjoiSXNJTUZvbGxvd1VzZXI6MTtETk5fQXV0b0RldGVjdGVkY291bnRyeTpJbmRpYTtDbGlja0NvaG9ydDoyO0ZpeElkc0wyOjA7RE5OX2NvdW50cnk6O1VzZXJIYXNBZ2U7VXNlckNvaG9ydEJ5RW5nYWdlbWVudDI4ZDoyO3RtcGwtZGNwLW5vcm1hbC0xOjE7Y2xpY2s5MGRfMzA7QUNUSU9OOkZvbGxvdzpJbnRlcmVzdDtETk5fY2l0eTo7R3JheUZhblNjb3JlOjAuMDEyMztNeUZlZWQ7TWFpbkZlZWRzQ29sZFVzZXI6ZmFsc2U7VGFnZ2luZ1VzZXJBY3Rpb25TaWduYWw7WEZlZWQ7UGFnZVZpZXdDb3VudEd0MTA7RE5OX0F1dG9EZXRlY3RlZHN0YXRlOkthcm5hdGFrYTtVVGN0cjt0cmlnZ2VyY2ZfMl9jcm9zc2RvbWFpbl9vZmZjYW52YXNfZ25uO3RyaWdnZXJjZl8zX2lwMmlfMzBkO3VzcV9ucnRfdjU6YTZlYzg4ZTctOWE4OC00Nzk5LTg5NTItMmRkMDA0ZTExNjY5I2VuLWluO1N0cm9uZ0RlbW90aW9uVjJUcmlnZ2VyOjA7Y29tX3RvcGljX2xpX3Y0OjE7RE5OdXNlckNvdW50cnk6aW5kaWE7cHJnLXNob3ctYmVsbGNtLTMwZDoxO0wyRUVEZW1vdGVSZWFzb246S2VlcEluQ29udHJvbEdyb3VwO0lNQXJ0aWNsZU5lZ1VzZXI6MDtDR1Nob3dUb3BzdG9yaWVzOjE7Y29tX3RvcGljX2xpX3YyOjE7dHJpZ2dlcmNmX2x0X2luYztVc2VyUHJvZmlsZUFjdGlvblNpZ25hbDoyO3RyaWdnZXJjZjt0bXBsLWVzcC1zaG9wcGluZzoxO0NHU2hvd05ld3MxOjE7R3JvdXBJZENTOjNfM180XzNfMl8yNTkyMjFfMjY5MjAzO0NHU2hvd05ld3MzOjE7dHJpZ2dlcmNmXzBfdTJpX2R3ZWxsXzE1O3dwby13YXJtdXNlcjoxO0lzSU1vclB1YkZvbGxvd1VzZXI6MTt0bXBsLVRyYXZlbERlc3RpbmF0aW9uQ2FyZDoxO3RyaWdnZXJjZl8yX2Nyb3NzZG9tYWluX29mZmNhbnZhc19nbm5fdjI7VXNlckhhc0FnZU9yR2VuZGVyXzBfMV8wXzM7dXNlcl9jbHVzdGVyX3Y0OjIwMjQtMDItMjMuNDAzMjEjZW4taW47Y2xpY2s4NGRfMjk7UmVjb1NvdXJjZTpTYWdlXztYQUk6MTAwXzA7cHJnLXdwby10c2NscGluZjoxO3RtcGwtYm9vc3QtMXM7dG1wbC1uZXd0ZWNoO0NsaWNrNGQ6MDtHcmF5VjZGYW5zU2NvcmVWMjowLjAwMDA7VGlsZUlEOnRkcjE7SGFzQ2xpZW50SXBVc2VyUHJvZmlsZToxO3ByZy13cG8tY210aWY6MTtlZVBvc0xpc3Q6MDt0bXBsLTFzYm9vc3RudHByaXZlcjtwcmctd3BvLWZvbGxvdzoxO3VzZXJfY2x1c3Rlcl92NjoyMDI0LTAyLTIyLjYyNTI0I2VuLWluO0lNRXhwbGljaXREaXNsaWtlVXNlcjoxO3RtcGwtdG1wbHRsYXlvdXQ7VXNlckdyb3VwSWQ6M18zXzZfNV8yXzI1OTIyMV8yMzQ2MTY7VVRuZWdJbXByO0ZpeElkczowO0dBLU1vbmV5OjE7SGFzUGVyc1JlY2FsbDtHcmF5Q2xpY2s0ZDowO0wyT25lU3ZjVW5pRmVhdFR1bjo7RE5OdXNlckNpdHk6YmVuZ2FsdXJ1O2NsaWNrXzYxO3RyaWdnZXJjZl8wXzFtaW5fbWhvdDtjbGljazU2ZF8yNDtETk5fQXV0b0RldGVjdGVkQ2l0eTpCZW5nYWx1cnUgTm9ydGg7SU1Cb29zdENvdW50OjJfMF8yO1VMYXRMb24xMi45NTo3Ny42MTtpZnAtNHM6MTtVc2VySGFzQWN0aW9uU2lnbmFsOjE7U2FnZVVzZXJTdGF0dXM6M18wXzBfNTtUUFVzZXI7Q0dTaG93TmV3czQ6MTtCaW5nUmVjb0NvZGU6U3VjY2VzcztFeHBsOjE7SXNSZWNvTmV3VXNlcjoxO3RyaWdnZXJjZl8xX2kyaV9taG90X3YxO3ByZy13cG8tYXV0bzI6MTtjbGljazI4ZF85O0NHU2hvd05ld3MyOjE7RE5OVGlsZUlkOnRkcjE7aW5kX3RvcGljX2xpX3Y0OjE7UlI6MDtFeHBsY2l0Rm9sbG93Q29ob3J0OjI7VXNlckhhc0dlbmRlcjtETk5fc3RhdGU6O0dyYXlWNkZhbnNTY29yZTowLjAwMDA7U3RhYmxlSWRDUzpDRjlBMTE1MUNCREJGMDFGODRCMDkyMzZGRkZGRkZGRjtETk51c2VyU3RhdGU6a2FybmF0YWthO0dBTmV3czE6MTt1c3FfdGV4dF92OTptdWx0Y2FudnFfYWEjZW4taW47bG9jYXRpb246RjcxNUQ3Mjg3NjcwMjM4QTgzNDQ4MDRFMEQ1QUVENDcjZW4taW47VFN2MzoxIiwiZGVidWdJbmZvIjoibGF5b3V0Ondwb2xtIiwicmVzcG9uc2VDcmVhdGlvbkRhdGVUaW1lIjoiMjAyNC0wMi0yNFQwNjo1Mjo1Mi40MDUzMzc4WiIsInJlcXVlc3RIZWFkZXJNdWlkIjoiM2ZiMjg4YTctN2Q3ZS02ZmMxLTNhMzctOWExMDdjMmM2ZTMzIiwiZGVidWdJZCI6IjY1ZDk5MjQzLTc1MTgtNDRjMi05N2FhLWFlMjVkNjM2Mzg4OXwyMDI0LTAyLTI0VDA2OjUyOjUyLjQwNTM2NThafGZhYnJpY19udHBmZWVkfEtPQzJ8TnRwRmVlZF81ODUifSwicHJldmlld3MiOnsiZGlzcGxheUR1cmF0aW9uTXMiOjAsInJvdGF0aW9uYWxDb3VudCI6MH0sImxvY2tTY3JlZW5QcmV2aWV3cyI6W10sInB1bHNlRGF0YSI6W10sInBhZ2VDb250ZXh0Ijp7Im9wdGltaXphdGlvbkl0ZW1zIjpbeyJ0eXBlIjoibGF5b3V0UHJvbW90aW9uIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJkYXRhIjoie1wibGF5b3V0UmVjb21tZW5kZWRcIjpcImluZm9ybWF0aW9uYWxcIixcInRtcGxcIjpcInByZy13cG8taG5lXCIsXCJpc0NvbnRyb2xcIjpmYWxzZSxcImxheW91dFR5cGVcIjpcIlBhZ2VDb250ZW50TGF5b3V0XCJ9In0seyJ0eXBlIjoidG9wc2l0ZXNDb2xsYXBzZSIsImlzTG9jYWxDb250ZW50IjpmYWxzZSwiZ2FsbGVyeUl0ZW1Db3VudCI6MCwiZGF0YSI6IntcInRvcFNpdGVzQ29sbGFwc2libGVDb250cm9sQ29uZmlnXCI6e1wiY29sbGFwc2libGVDb250cm9sSXNEZWZhdWx0Q29sbGFwc2VkXCI6dHJ1ZSxcInNob3dDb2xsYXBzaWJsZUNvbnRyb2xcIjp0cnVlLFwiY29sbGFwc2VGb3JEZWZhdWx0SW5mb3JtYXRpb25hbFwiOnRydWUsXCJwcm9tb3RlVG9wU2l0ZXNUb3BcIjpmYWxzZSxcInByb21vdGVUb3BTaXRlczJSb3dcIjpmYWxzZX19In0seyJ0eXBlIjoidG9wc2l0ZXNQcm9tb3Rpb24iLCJpc0xvY2FsQ29udGVudCI6ZmFsc2UsImdhbGxlcnlJdGVtQ291bnQiOjAsImRhdGEiOiJ7XCJvdmVycmlkZUljb25zTGlzdFwiOlt7XCJpZGVudGlmaWVySG9zdHNcIjpbXCJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2F1dG9zL21hcmtldHBsYWNlL3Jlc2VhcmNoP2Zvcm09QU5TQU0xXCJdLFwiZmF2aWNvblVybFwiOlwiaHR0cHM6Ly9pbWctcy1tc24tY29tLmFrYW1haXplZC5uZXQvdGVuYW50L2FtcC9lbnRpdHlpZC9BQVZYc2FKLmltZ1wifSx7XCJpZGVudGlmaWVySG9zdHNcIjpbXCJodHRwczovL250cC5tc24uY29tL2VkZ2UvbnRwP2ZlZWRQaXZvdD1mb2xsb3dpbmcmY3Nyb25seT10cnVlJnF1ZXJ5PWFkdWx0JmZvcm09ZmxwZyZmZWVkRGlzcGxheT1hbHdheXNcIl0sXCJmYXZpY29uVXJsXCI6XCJodHRwOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQUExaTVUYWQuaW1nXCJ9XSxcImVuYWJsZVJlY29tbWVuZGVkU2l0ZXNcIjp0cnVlLFwicmVjb21tZW5kZWRTaXRlc1wiOlt7XCJsb2NhdGlvbkluZGV4XCI6NyxcInRpdGxlXCI6XCJBdXRvcyBNYXJrZXRwbGFjZVwiLFwidXJsXCI6XCJodHRwczovL3d3dy5tc24uY29tL2VuLWluL2F1dG9zL21hcmtldHBsYWNlL3Jlc2VhcmNoP2Zvcm09QU5TQU0xXCIsXCJmYXZpY29uVXJsXCI6XCJjbXMvYXBpL2FtcC9pbWFnZS9BQVZYc2FKXCJ9LHtcImxvY2F0aW9uSW5kZXhcIjo4LFwidGl0bGVcIjpcIkZvbGxvd2luZ1wiLFwidXJsXCI6XCJodHRwczovL250cC5tc24uY29tL2VkZ2UvbnRwP2ZlZWRQaXZvdD1mb2xsb3dpbmcmY3Nyb25seT10cnVlJnF1ZXJ5PWFkdWx0JmZvcm09ZmxwZyZmZWVkRGlzcGxheT1hbHdheXNcIixcImZhdmljb25VcmxcIjpcImNtcy9hcGkvYW1wL2ltYWdlL0FBMWk1VGFkXCJ9XX0ifSx7InR5cGUiOiJiZWxsQ29hY2hNYXJrIiwiaXNMb2NhbENvbnRlbnQiOmZhbHNlLCJnYWxsZXJ5SXRlbUNvdW50IjowLCJkYXRhIjoie1wic2hvd0NvYWNoTWFya1wiOmZhbHNlLFwidG1wbFwiOlwicHJnLW5vLWJlbGxjbS1wcm9cIn0ifV19LCJpc1BhcnRpYWwiOmZhbHNlLCJleHBpcmF0aW9uRGF0ZVRpbWUiOiIyMDI0LTAyLTI3VDA2OjUyOjUyLjQwNTM4ODJaIn0=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">9</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">3195</HTTPProperty>
      </HTTPPropertySet>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>